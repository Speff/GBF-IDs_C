!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	//
$(OBJDIR)/%.o	.\\makefile	/^$(OBJDIR)\/%.o: $(SRCDIR)\/%.cpp $(DEPS)$/;"	t
1	.\\include\\prog.rc	/^1 VERSIONINFO$/;"	v
AFM_FontInfo	.\\include\\freetype\\internal\\t1types.h	/^  } AFM_FontInfoRec, *AFM_FontInfo;$/;"	t	typeref:struct:AFM_FontInfoRec_ *
AFM_FontInfoRec	.\\include\\freetype\\internal\\t1types.h	/^  } AFM_FontInfoRec, *AFM_FontInfo;$/;"	t	typeref:struct:AFM_FontInfoRec_
AFM_FontInfoRec_	.\\include\\freetype\\internal\\t1types.h	/^  typedef struct  AFM_FontInfoRec_$/;"	s
AFM_KernPair	.\\include\\freetype\\internal\\t1types.h	/^  } AFM_KernPairRec, *AFM_KernPair;$/;"	t	typeref:struct:AFM_KernPairRec_ *
AFM_KernPairRec	.\\include\\freetype\\internal\\t1types.h	/^  } AFM_KernPairRec, *AFM_KernPair;$/;"	t	typeref:struct:AFM_KernPairRec_
AFM_KernPairRec_	.\\include\\freetype\\internal\\t1types.h	/^  typedef struct  AFM_KernPairRec_$/;"	s
AFM_Parser	.\\include\\freetype\\internal\\psaux.h	/^  typedef struct AFM_ParserRec_*  AFM_Parser;$/;"	t	typeref:struct:AFM_ParserRec_ *
AFM_ParserRec	.\\include\\freetype\\internal\\psaux.h	/^  } AFM_ParserRec;$/;"	t	typeref:struct:AFM_ParserRec_
AFM_ParserRec_	.\\include\\freetype\\internal\\psaux.h	/^  typedef struct  AFM_ParserRec_$/;"	s
AFM_Parser_FuncsRec	.\\include\\freetype\\internal\\psaux.h	/^  } AFM_Parser_FuncsRec;$/;"	t	typeref:struct:AFM_Parser_FuncsRec_
AFM_Parser_FuncsRec_	.\\include\\freetype\\internal\\psaux.h	/^  typedef struct  AFM_Parser_FuncsRec_$/;"	s
AFM_Stream	.\\include\\freetype\\internal\\psaux.h	/^  typedef struct AFM_StreamRec_*  AFM_Stream;$/;"	t	typeref:struct:AFM_StreamRec_ *
AFM_TrackKern	.\\include\\freetype\\internal\\t1types.h	/^  } AFM_TrackKernRec, *AFM_TrackKern;$/;"	t	typeref:struct:AFM_TrackKernRec_ *
AFM_TrackKernRec	.\\include\\freetype\\internal\\t1types.h	/^  } AFM_TrackKernRec, *AFM_TrackKern;$/;"	t	typeref:struct:AFM_TrackKernRec_
AFM_TrackKernRec_	.\\include\\freetype\\internal\\t1types.h	/^  typedef struct  AFM_TrackKernRec_$/;"	s
AF_CONFIG_OPTION_CJK	.\\include\\freetype\\config\\ftoption.h	/^#define AF_CONFIG_OPTION_CJK$/;"	d
AF_CONFIG_OPTION_INDIC	.\\include\\freetype\\config\\ftoption.h	/^#define AF_CONFIG_OPTION_INDIC$/;"	d
AF_CONFIG_OPTION_USE_WARPER	.\\include\\freetype\\config\\ftoption.h	/^#define AF_CONFIG_OPTION_USE_WARPER$/;"	d
APIENTRY	.\\include\\GLFW\\glfw3.h	/^  #define APIENTRY /;"	d
APIENTRY	.\\include\\gl_core_3_3.h	/^		#define APIENTRY$/;"	d
APIENTRY	.\\include\\gl_core_3_3.h	/^		typedef void (APIENTRY *GLDEBUGPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsiz/;"	t	typeref:typename:void (* GLDEBUGPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * message,const void * userParam)
APIENTRY	.\\include\\gl_core_3_3.h	/^		typedef void (APIENTRY *GLDEBUGPROCAMD)(GLuint id,GLenum category,GLenum severity,GLsizei leng/;"	t	typeref:typename:void (* GLDEBUGPROCAMD)(GLuint id,GLenum category,GLenum severity,GLsizei length,const GLchar * message,void * userParam)
APIENTRY	.\\include\\gl_core_3_3.h	/^		typedef void (APIENTRY *GLDEBUGPROCARB)(GLenum source,GLenum type,GLuint id,GLenum severity,GL/;"	t	typeref:typename:void (* GLDEBUGPROCARB)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * message,const void * userParam)
AUTOHINT_H_	.\\include\\freetype\\internal\\autohint.h	/^#define AUTOHINT_H_$/;"	d
A_space	.\\include\\freetype\\ftwinfnt.h	/^    FT_UShort  A_space;$/;"	m	struct:FT_WinFNT_HeaderRec_	typeref:typename:FT_UShort
Advance	.\\include\\Window.h	/^    GLuint   Advance;    \/\/ Offset to advance to next glyph$/;"	m	struct:Character	typeref:typename:GLuint
AppleGLGetProcAddress	.\\src\\gl_core_3_3.cpp	/^static void* AppleGLGetProcAddress (const char *name)$/;"	f	typeref:typename:void *	file:
Ascender	.\\include\\freetype\\internal\\t1types.h	/^    FT_Fixed       Ascender;$/;"	m	struct:AFM_FontInfoRec_	typeref:typename:FT_Fixed
Ascender	.\\include\\freetype\\tttables.h	/^    FT_Short   Ascender;$/;"	m	struct:TT_HoriHeader_	typeref:typename:FT_Short
Ascender	.\\include\\freetype\\tttables.h	/^    FT_Short   Ascender;$/;"	m	struct:TT_VertHeader_	typeref:typename:FT_Short
BDF_PROPERTY_TYPE_ATOM	.\\include\\freetype\\ftbdf.h	/^    BDF_PROPERTY_TYPE_ATOM     = 1,$/;"	e	enum:BDF_PropertyType_
BDF_PROPERTY_TYPE_CARDINAL	.\\include\\freetype\\ftbdf.h	/^    BDF_PROPERTY_TYPE_CARDINAL = 3$/;"	e	enum:BDF_PropertyType_
BDF_PROPERTY_TYPE_INTEGER	.\\include\\freetype\\ftbdf.h	/^    BDF_PROPERTY_TYPE_INTEGER  = 2,$/;"	e	enum:BDF_PropertyType_
BDF_PROPERTY_TYPE_NONE	.\\include\\freetype\\ftbdf.h	/^    BDF_PROPERTY_TYPE_NONE     = 0,$/;"	e	enum:BDF_PropertyType_
BDF_Property	.\\include\\freetype\\ftbdf.h	/^  typedef struct BDF_PropertyRec_*  BDF_Property;$/;"	t	typeref:struct:BDF_PropertyRec_ *
BDF_PropertyRec	.\\include\\freetype\\ftbdf.h	/^  } BDF_PropertyRec;$/;"	t	typeref:struct:BDF_PropertyRec_
BDF_PropertyRec_	.\\include\\freetype\\ftbdf.h	/^  typedef struct  BDF_PropertyRec_$/;"	s
BDF_PropertyType	.\\include\\freetype\\ftbdf.h	/^  } BDF_PropertyType;$/;"	t	typeref:enum:BDF_PropertyType_
BDF_PropertyType_	.\\include\\freetype\\ftbdf.h	/^  typedef enum  BDF_PropertyType_$/;"	g
BINDIR	.\\makefile	/^BINDIR=.\/bin$/;"	m
B_space	.\\include\\freetype\\ftwinfnt.h	/^    FT_UShort  B_space;$/;"	m	struct:FT_WinFNT_HeaderRec_	typeref:typename:FT_UShort
Bearing	.\\include\\Window.h	/^    GLfloat  Bearing[2]; \/\/ Offset from baseline to left\/top of glyph$/;"	m	struct:Character	typeref:typename:GLfloat[2]
CALLBACK	.\\include\\GLFW\\glfw3.h	/^ #define CALLBACK /;"	d
CC	.\\makefile	/^CC=g++$/;"	m
CFF_CONFIG_OPTION_DARKENING_PARAMETER_X1	.\\include\\freetype\\config\\ftoption.h	/^#define CFF_CONFIG_OPTION_DARKENING_PARAMETER_X1 /;"	d
CFF_CONFIG_OPTION_DARKENING_PARAMETER_X2	.\\include\\freetype\\config\\ftoption.h	/^#define CFF_CONFIG_OPTION_DARKENING_PARAMETER_X2 /;"	d
CFF_CONFIG_OPTION_DARKENING_PARAMETER_X3	.\\include\\freetype\\config\\ftoption.h	/^#define CFF_CONFIG_OPTION_DARKENING_PARAMETER_X3 /;"	d
CFF_CONFIG_OPTION_DARKENING_PARAMETER_X4	.\\include\\freetype\\config\\ftoption.h	/^#define CFF_CONFIG_OPTION_DARKENING_PARAMETER_X4 /;"	d
CFF_CONFIG_OPTION_DARKENING_PARAMETER_Y1	.\\include\\freetype\\config\\ftoption.h	/^#define CFF_CONFIG_OPTION_DARKENING_PARAMETER_Y1 /;"	d
CFF_CONFIG_OPTION_DARKENING_PARAMETER_Y2	.\\include\\freetype\\config\\ftoption.h	/^#define CFF_CONFIG_OPTION_DARKENING_PARAMETER_Y2 /;"	d
CFF_CONFIG_OPTION_DARKENING_PARAMETER_Y3	.\\include\\freetype\\config\\ftoption.h	/^#define CFF_CONFIG_OPTION_DARKENING_PARAMETER_Y3 /;"	d
CFF_CONFIG_OPTION_DARKENING_PARAMETER_Y4	.\\include\\freetype\\config\\ftoption.h	/^#define CFF_CONFIG_OPTION_DARKENING_PARAMETER_Y4 /;"	d
CFINIT	.\\include\\curl\\curl.h	/^  CFINIT(ARRAY),$/;"	e	enum:__anon529bf04d1303
CFINIT	.\\include\\curl\\curl.h	/^  CFINIT(BUFFER),$/;"	e	enum:__anon529bf04d1303
CFINIT	.\\include\\curl\\curl.h	/^  CFINIT(BUFFERLENGTH),$/;"	e	enum:__anon529bf04d1303
CFINIT	.\\include\\curl\\curl.h	/^  CFINIT(BUFFERPTR),$/;"	e	enum:__anon529bf04d1303
CFINIT	.\\include\\curl\\curl.h	/^  CFINIT(CONTENTHEADER),$/;"	e	enum:__anon529bf04d1303
CFINIT	.\\include\\curl\\curl.h	/^  CFINIT(CONTENTLEN), \/* added in 7.46.0, provide a curl_off_t length *\/$/;"	e	enum:__anon529bf04d1303
CFINIT	.\\include\\curl\\curl.h	/^  CFINIT(CONTENTSLENGTH),$/;"	e	enum:__anon529bf04d1303
CFINIT	.\\include\\curl\\curl.h	/^  CFINIT(CONTENTTYPE),$/;"	e	enum:__anon529bf04d1303
CFINIT	.\\include\\curl\\curl.h	/^  CFINIT(COPYCONTENTS),$/;"	e	enum:__anon529bf04d1303
CFINIT	.\\include\\curl\\curl.h	/^  CFINIT(COPYNAME),$/;"	e	enum:__anon529bf04d1303
CFINIT	.\\include\\curl\\curl.h	/^  CFINIT(END),$/;"	e	enum:__anon529bf04d1303
CFINIT	.\\include\\curl\\curl.h	/^  CFINIT(FILE),$/;"	e	enum:__anon529bf04d1303
CFINIT	.\\include\\curl\\curl.h	/^  CFINIT(FILECONTENT),$/;"	e	enum:__anon529bf04d1303
CFINIT	.\\include\\curl\\curl.h	/^  CFINIT(FILENAME),$/;"	e	enum:__anon529bf04d1303
CFINIT	.\\include\\curl\\curl.h	/^  CFINIT(NAMELENGTH),$/;"	e	enum:__anon529bf04d1303
CFINIT	.\\include\\curl\\curl.h	/^  CFINIT(NOTHING),        \/********* the first one is unused ************\/$/;"	e	enum:__anon529bf04d1303
CFINIT	.\\include\\curl\\curl.h	/^  CFINIT(OBSOLETE),$/;"	e	enum:__anon529bf04d1303
CFINIT	.\\include\\curl\\curl.h	/^  CFINIT(OBSOLETE2),$/;"	e	enum:__anon529bf04d1303
CFINIT	.\\include\\curl\\curl.h	/^  CFINIT(PTRCONTENTS),$/;"	e	enum:__anon529bf04d1303
CFINIT	.\\include\\curl\\curl.h	/^  CFINIT(PTRNAME),$/;"	e	enum:__anon529bf04d1303
CFINIT	.\\include\\curl\\curl.h	/^  CFINIT(STREAM),$/;"	e	enum:__anon529bf04d1303
CFINIT	.\\include\\curl\\curl.h	/^#define CFINIT(/;"	d
CID_Face	.\\include\\freetype\\internal\\t1types.h	/^  typedef struct CID_FaceRec_*  CID_Face;$/;"	t	typeref:struct:CID_FaceRec_ *
CID_FaceDict	.\\include\\freetype\\t1tables.h	/^  typedef struct CID_FaceDictRec_*  CID_FaceDict;$/;"	t	typeref:struct:CID_FaceDictRec_ *
CID_FaceDictRec	.\\include\\freetype\\t1tables.h	/^  } CID_FaceDictRec;$/;"	t	typeref:struct:CID_FaceDictRec_
CID_FaceDictRec_	.\\include\\freetype\\t1tables.h	/^  typedef struct  CID_FaceDictRec_$/;"	s
CID_FaceInfo	.\\include\\freetype\\t1tables.h	/^  typedef struct CID_FaceInfoRec_*  CID_FaceInfo;$/;"	t	typeref:struct:CID_FaceInfoRec_ *
CID_FaceInfoRec	.\\include\\freetype\\t1tables.h	/^  } CID_FaceInfoRec;$/;"	t	typeref:struct:CID_FaceInfoRec_
CID_FaceInfoRec_	.\\include\\freetype\\t1tables.h	/^  typedef struct  CID_FaceInfoRec_$/;"	s
CID_FaceRec	.\\include\\freetype\\internal\\t1types.h	/^  } CID_FaceRec;$/;"	t	typeref:struct:CID_FaceRec_
CID_FaceRec_	.\\include\\freetype\\internal\\t1types.h	/^  typedef struct  CID_FaceRec_$/;"	s
CID_FontDict	.\\include\\freetype\\t1tables.h	/^  typedef CID_FaceDictRec  CID_FontDict;$/;"	t	typeref:typename:CID_FaceDictRec
CID_Info	.\\include\\freetype\\t1tables.h	/^  typedef CID_FaceInfoRec  CID_Info;$/;"	t	typeref:typename:CID_FaceInfoRec
CID_Subrs	.\\include\\freetype\\internal\\t1types.h	/^  } CID_SubrsRec, *CID_Subrs;$/;"	t	typeref:struct:CID_SubrsRec_ *
CID_SubrsRec	.\\include\\freetype\\internal\\t1types.h	/^  } CID_SubrsRec, *CID_Subrs;$/;"	t	typeref:struct:CID_SubrsRec_
CID_SubrsRec_	.\\include\\freetype\\internal\\t1types.h	/^  typedef struct  CID_SubrsRec_$/;"	s
CINIT	.\\include\\curl\\curl.h	/^  CINIT(ACCEPTTIMEOUT_MS, LONG, 212),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(ACCEPT_ENCODING, STRINGPOINT, 102),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(ADDRESS_SCOPE, LONG, 171),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(APPEND, LONG, 50),       \/* Append instead of overwrite on upload! *\/$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(AUTOREFERER, LONG, 58),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(BUFFERSIZE, LONG, 98),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(CAINFO, STRINGPOINT, 65),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(CAPATH, STRINGPOINT, 97),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(CERTINFO, LONG, 172),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(CHUNK_BGN_FUNCTION, FUNCTIONPOINT, 198),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(CHUNK_DATA, OBJECTPOINT, 201),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(CHUNK_END_FUNCTION, FUNCTIONPOINT, 199),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(CLOSESOCKETDATA, OBJECTPOINT, 209),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(CLOSESOCKETFUNCTION, FUNCTIONPOINT, 208),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(CONNECTTIMEOUT, LONG, 78),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(CONNECTTIMEOUT_MS, LONG, 156),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(CONNECT_ONLY, LONG, 141),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(CONNECT_TO, OBJECTPOINT, 243),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(CONV_FROM_NETWORK_FUNCTION, FUNCTIONPOINT, 142),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(CONV_FROM_UTF8_FUNCTION, FUNCTIONPOINT, 144),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(CONV_TO_NETWORK_FUNCTION, FUNCTIONPOINT, 143),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(COOKIE, STRINGPOINT, 22),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(COOKIEFILE, STRINGPOINT, 31),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(COOKIEJAR, STRINGPOINT, 82),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(COOKIELIST, STRINGPOINT, 135),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(COOKIESESSION, LONG, 96),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(COPYPOSTFIELDS, OBJECTPOINT, 165),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(CRLF, LONG, 27),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(CRLFILE, STRINGPOINT, 169),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(CUSTOMREQUEST, STRINGPOINT, 36),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(DEBUGDATA, OBJECTPOINT, 95),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(DEBUGFUNCTION, FUNCTIONPOINT, 94),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(DEFAULT_PROTOCOL, STRINGPOINT, 238),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(DIRLISTONLY, LONG, 48),  \/* bare names when listing directories *\/$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(DNS_CACHE_TIMEOUT, LONG, 92),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(DNS_INTERFACE, STRINGPOINT, 221),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(DNS_LOCAL_IP4, STRINGPOINT, 222),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(DNS_LOCAL_IP6, STRINGPOINT, 223),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(DNS_SERVERS, STRINGPOINT, 211),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(DNS_USE_GLOBAL_CACHE, LONG, 91), \/* DEPRECATED, do not use! *\/$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(EGDSOCKET, STRINGPOINT, 77),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(ERRORBUFFER, OBJECTPOINT, 10),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(EXPECT_100_TIMEOUT_MS, LONG, 227),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(FAILONERROR, LONG, 45),  \/* no output on http error codes >= 400 *\/$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(FILETIME, LONG, 69),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(FNMATCH_DATA, OBJECTPOINT, 202),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(FNMATCH_FUNCTION, FUNCTIONPOINT, 200),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(FOLLOWLOCATION, LONG, 52),  \/* use Location: Luke! *\/$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(FORBID_REUSE, LONG, 75),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(FRESH_CONNECT, LONG, 74),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(FTPPORT, STRINGPOINT, 17),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(FTPSSLAUTH, LONG, 129),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(FTP_ACCOUNT, STRINGPOINT, 134),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(FTP_ALTERNATIVE_TO_USER, STRINGPOINT, 147),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(FTP_CREATE_MISSING_DIRS, LONG, 110),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(FTP_FILEMETHOD, LONG, 138),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(FTP_RESPONSE_TIMEOUT, LONG, 112),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(FTP_SKIP_PASV_IP, LONG, 137),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(FTP_SSL_CCC, LONG, 154),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(FTP_USE_EPRT, LONG, 106),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(FTP_USE_EPSV, LONG, 85),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(FTP_USE_PRET, LONG, 188),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(GSSAPI_DELEGATION, LONG, 210),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(HEADER, LONG, 42),       \/* throw the header out too *\/$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(HEADERDATA, OBJECTPOINT, 29),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(HEADERFUNCTION, FUNCTIONPOINT, 79),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(HEADEROPT, LONG, 229),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(HTTP200ALIASES, OBJECTPOINT, 104),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(HTTPAUTH, LONG, 107),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(HTTPGET, LONG, 80),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(HTTPHEADER, OBJECTPOINT, 23),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(HTTPPOST, OBJECTPOINT, 24),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(HTTPPROXYTUNNEL, LONG, 61),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(HTTP_CONTENT_DECODING, LONG, 158),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(HTTP_TRANSFER_DECODING, LONG, 157),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(HTTP_VERSION, LONG, 84),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(IGNORE_CONTENT_LENGTH, LONG, 136),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(INFILESIZE, LONG, 14),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(INFILESIZE_LARGE, OFF_T, 115),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(INTERFACE, STRINGPOINT, 62),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(INTERLEAVEDATA, OBJECTPOINT, 195),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(INTERLEAVEFUNCTION, FUNCTIONPOINT, 196),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(IOCTLDATA, OBJECTPOINT, 131),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(IOCTLFUNCTION, FUNCTIONPOINT, 130),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(IPRESOLVE, LONG, 113),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(ISSUERCERT, STRINGPOINT, 170),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(KEYPASSWD, STRINGPOINT, 26),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(KRBLEVEL, STRINGPOINT, 63),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(LOCALPORT, LONG, 139),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(LOCALPORTRANGE, LONG, 140),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(LOGIN_OPTIONS, STRINGPOINT, 224),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(LOW_SPEED_LIMIT, LONG, 19),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(LOW_SPEED_TIME, LONG, 20),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(MAIL_AUTH, STRINGPOINT, 217),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(MAIL_FROM, STRINGPOINT, 186),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(MAIL_RCPT, OBJECTPOINT, 187),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(MAXCONNECTS, LONG, 71),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(MAXFILESIZE, LONG, 114),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(MAXFILESIZE_LARGE, OFF_T, 117),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(MAXREDIRS, LONG, 68),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(MAX_RECV_SPEED_LARGE, OFF_T, 146),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(MAX_SEND_SPEED_LARGE, OFF_T, 145),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(NETRC, LONG, 51),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(NETRC_FILE, STRINGPOINT, 118),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(NEW_DIRECTORY_PERMS, LONG, 160),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(NEW_FILE_PERMS, LONG, 159),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(NOBODY, LONG, 44),       \/* use HEAD to get http document *\/$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(NOPROGRESS, LONG, 43),   \/* shut off the progress meter *\/$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(NOPROXY, STRINGPOINT, 177),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(NOSIGNAL, LONG, 99),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(OBSOLETE40, OBJECTPOINT, 40), \/* OBSOLETE, do not use! *\/$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(OBSOLETE72, LONG, 72), \/* OBSOLETE, do not use! *\/$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(OPENSOCKETDATA, OBJECTPOINT, 164),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(OPENSOCKETFUNCTION, FUNCTIONPOINT, 163),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(PASSWORD, STRINGPOINT, 174),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(PATH_AS_IS, LONG, 234),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(PINNEDPUBLICKEY, STRINGPOINT, 230),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(PIPEWAIT, LONG, 237),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(PORT, LONG, 3),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(POST, LONG, 47),         \/* HTTP POST method *\/$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(POSTFIELDS, OBJECTPOINT, 15),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(POSTFIELDSIZE, LONG, 60),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(POSTFIELDSIZE_LARGE, OFF_T, 120),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(POSTQUOTE, OBJECTPOINT, 39),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(POSTREDIR, LONG, 161),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(PREQUOTE, OBJECTPOINT, 93),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(PRIVATE, OBJECTPOINT, 103),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(PROGRESSDATA, OBJECTPOINT, 57),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(PROGRESSFUNCTION, FUNCTIONPOINT, 56),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(PROTOCOLS, LONG, 181),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(PROXY, STRINGPOINT, 4),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(PROXYAUTH, LONG, 111),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(PROXYHEADER, OBJECTPOINT, 228),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(PROXYPASSWORD, STRINGPOINT, 176),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(PROXYPORT, LONG, 59),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(PROXYTYPE, LONG, 101),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(PROXYUSERNAME, STRINGPOINT, 175),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(PROXYUSERPWD, STRINGPOINT, 6),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(PROXY_SERVICE_NAME, STRINGPOINT, 235),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(PROXY_TRANSFER_MODE, LONG, 166),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(PUT, LONG, 54),          \/* HTTP PUT *\/$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(QUOTE, OBJECTPOINT, 28),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(RANDOM_FILE, STRINGPOINT, 76),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(RANGE, STRINGPOINT, 7),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(READDATA, OBJECTPOINT, 9),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(READFUNCTION, FUNCTIONPOINT, 12),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(REDIR_PROTOCOLS, LONG, 182),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(REFERER, STRINGPOINT, 16),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(RESOLVE, OBJECTPOINT, 203),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(RESUME_FROM, LONG, 21),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(RESUME_FROM_LARGE, OFF_T, 116),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(RTSP_CLIENT_CSEQ, LONG, 193),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(RTSP_REQUEST, LONG, 189),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(RTSP_SERVER_CSEQ, LONG, 194),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(RTSP_SESSION_ID, STRINGPOINT, 190),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(RTSP_STREAM_URI, STRINGPOINT, 191),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(RTSP_TRANSPORT, STRINGPOINT, 192),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(SASL_IR, LONG, 218),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(SEEKDATA, OBJECTPOINT, 168),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(SEEKFUNCTION, FUNCTIONPOINT, 167),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(SERVICE_NAME, STRINGPOINT, 236),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(SHARE, OBJECTPOINT, 100),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(SOCKOPTDATA, OBJECTPOINT, 149),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(SOCKOPTFUNCTION, FUNCTIONPOINT, 148),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(SOCKS5_GSSAPI_NEC, LONG, 180),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(SOCKS5_GSSAPI_SERVICE, STRINGPOINT, 179), \/* DEPRECATED, do not use! *\/$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(SSH_AUTH_TYPES, LONG, 151),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(SSH_HOST_PUBLIC_KEY_MD5, STRINGPOINT, 162),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(SSH_KEYDATA, OBJECTPOINT, 185),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(SSH_KEYFUNCTION, FUNCTIONPOINT, 184),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(SSH_KNOWNHOSTS, STRINGPOINT, 183),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(SSH_PRIVATE_KEYFILE, STRINGPOINT, 153),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(SSH_PUBLIC_KEYFILE, STRINGPOINT, 152),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(SSLCERT, STRINGPOINT, 25),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(SSLCERTTYPE, STRINGPOINT, 86),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(SSLENGINE, STRINGPOINT, 89),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(SSLENGINE_DEFAULT, LONG, 90),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(SSLKEY, STRINGPOINT, 87),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(SSLKEYTYPE, STRINGPOINT, 88),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(SSLVERSION, LONG, 32),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(SSL_CIPHER_LIST, STRINGPOINT, 83),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(SSL_CTX_DATA, OBJECTPOINT, 109),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(SSL_CTX_FUNCTION, FUNCTIONPOINT, 108),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(SSL_ENABLE_ALPN, LONG, 226),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(SSL_ENABLE_NPN, LONG, 225),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(SSL_FALSESTART, LONG, 233),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(SSL_OPTIONS, LONG, 216),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(SSL_SESSIONID_CACHE, LONG, 150),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(SSL_VERIFYHOST, LONG, 81),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(SSL_VERIFYPEER, LONG, 64),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(SSL_VERIFYSTATUS, LONG, 232),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(STDERR, OBJECTPOINT, 37),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(STREAM_DEPENDS, OBJECTPOINT, 240),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(STREAM_DEPENDS_E, OBJECTPOINT, 241),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(STREAM_WEIGHT, LONG, 239),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(TCP_FASTOPEN, LONG, 244),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(TCP_KEEPALIVE, LONG, 213),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(TCP_KEEPIDLE, LONG, 214),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(TCP_KEEPINTVL, LONG, 215),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(TCP_NODELAY, LONG, 121),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(TELNETOPTIONS, OBJECTPOINT, 70),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(TFTP_BLKSIZE, LONG, 178),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(TFTP_NO_OPTIONS, LONG, 242),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(TIMECONDITION, LONG, 33),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(TIMEOUT, LONG, 13),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(TIMEOUT_MS, LONG, 155),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(TIMEVALUE, LONG, 34),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(TLSAUTH_PASSWORD, STRINGPOINT, 205),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(TLSAUTH_TYPE, STRINGPOINT, 206),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(TLSAUTH_USERNAME, STRINGPOINT, 204),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(TRANSFERTEXT, LONG, 53), \/* transfer data in text\/ASCII format *\/$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(TRANSFER_ENCODING, LONG, 207),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(UNIX_SOCKET_PATH, STRINGPOINT, 231),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(UNRESTRICTED_AUTH, LONG, 105),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(UPLOAD, LONG, 46),       \/* this is an upload *\/$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(URL, STRINGPOINT, 2),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(USERAGENT, STRINGPOINT, 18),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(USERNAME, STRINGPOINT, 173),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(USERPWD, STRINGPOINT, 5),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(USE_SSL, LONG, 119),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(VERBOSE, LONG, 41),      \/* talk a lot *\/$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(WILDCARDMATCH, LONG, 197),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(WRITEDATA, OBJECTPOINT, 1),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(WRITEFUNCTION, FUNCTIONPOINT, 11),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(XFERINFOFUNCTION, FUNCTIONPOINT, 219),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^  CINIT(XOAUTH2_BEARER, STRINGPOINT, 220),$/;"	e	enum:__anon529bf04d0e03
CINIT	.\\include\\curl\\curl.h	/^#define CINIT(/;"	d
CINIT	.\\include\\curl\\multi.h	/^  CINIT(CHUNK_LENGTH_PENALTY_SIZE, OFF_T, 10),$/;"	e	enum:__anona7791d620403
CINIT	.\\include\\curl\\multi.h	/^  CINIT(CONTENT_LENGTH_PENALTY_SIZE, OFF_T, 9),$/;"	e	enum:__anona7791d620403
CINIT	.\\include\\curl\\multi.h	/^  CINIT(MAXCONNECTS, LONG, 6),$/;"	e	enum:__anona7791d620403
CINIT	.\\include\\curl\\multi.h	/^  CINIT(MAX_HOST_CONNECTIONS, LONG, 7),$/;"	e	enum:__anona7791d620403
CINIT	.\\include\\curl\\multi.h	/^  CINIT(MAX_PIPELINE_LENGTH, LONG, 8),$/;"	e	enum:__anona7791d620403
CINIT	.\\include\\curl\\multi.h	/^  CINIT(MAX_TOTAL_CONNECTIONS, LONG, 13),$/;"	e	enum:__anona7791d620403
CINIT	.\\include\\curl\\multi.h	/^  CINIT(PIPELINING, LONG, 3),$/;"	e	enum:__anona7791d620403
CINIT	.\\include\\curl\\multi.h	/^  CINIT(PIPELINING_SERVER_BL, OBJECTPOINT, 12),$/;"	e	enum:__anona7791d620403
CINIT	.\\include\\curl\\multi.h	/^  CINIT(PIPELINING_SITE_BL, OBJECTPOINT, 11),$/;"	e	enum:__anona7791d620403
CINIT	.\\include\\curl\\multi.h	/^  CINIT(PUSHDATA, OBJECTPOINT, 15),$/;"	e	enum:__anona7791d620403
CINIT	.\\include\\curl\\multi.h	/^  CINIT(PUSHFUNCTION, FUNCTIONPOINT, 14),$/;"	e	enum:__anona7791d620403
CINIT	.\\include\\curl\\multi.h	/^  CINIT(SOCKETDATA, OBJECTPOINT, 2),$/;"	e	enum:__anona7791d620403
CINIT	.\\include\\curl\\multi.h	/^  CINIT(SOCKETFUNCTION, FUNCTIONPOINT, 1),$/;"	e	enum:__anona7791d620403
CINIT	.\\include\\curl\\multi.h	/^  CINIT(TIMERDATA, OBJECTPOINT, 5),$/;"	e	enum:__anona7791d620403
CINIT	.\\include\\curl\\multi.h	/^  CINIT(TIMERFUNCTION, FUNCTIONPOINT, 4),$/;"	e	enum:__anona7791d620403
CINIT	.\\include\\curl\\multi.h	/^#define CINIT(/;"	d
CODEGEN_FUNCPTR	.\\include\\gl_core_3_3.h	/^		#define CODEGEN_FUNCPTR /;"	d
CODEGEN_FUNCPTR	.\\include\\gl_core_3_3.h	/^		#define CODEGEN_FUNCPTR$/;"	d
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef GLboolean (CODEGEN_FUNCPTR *PFN_PTRC_GLISBUFFERPROC)(GLuint);$/;"	t	typeref:typename:GLboolean (* PFN_PTRC_GLISBUFFERPROC)(GLuint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef GLboolean (CODEGEN_FUNCPTR *PFN_PTRC_GLISENABLEDIPROC)(GLenum, GLuint);$/;"	t	typeref:typename:GLboolean (* PFN_PTRC_GLISENABLEDIPROC)(GLenum,GLuint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef GLboolean (CODEGEN_FUNCPTR *PFN_PTRC_GLISENABLEDPROC)(GLenum);$/;"	t	typeref:typename:GLboolean (* PFN_PTRC_GLISENABLEDPROC)(GLenum)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef GLboolean (CODEGEN_FUNCPTR *PFN_PTRC_GLISFRAMEBUFFERPROC)(GLuint);$/;"	t	typeref:typename:GLboolean (* PFN_PTRC_GLISFRAMEBUFFERPROC)(GLuint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef GLboolean (CODEGEN_FUNCPTR *PFN_PTRC_GLISPROGRAMPROC)(GLuint);$/;"	t	typeref:typename:GLboolean (* PFN_PTRC_GLISPROGRAMPROC)(GLuint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef GLboolean (CODEGEN_FUNCPTR *PFN_PTRC_GLISQUERYPROC)(GLuint);$/;"	t	typeref:typename:GLboolean (* PFN_PTRC_GLISQUERYPROC)(GLuint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef GLboolean (CODEGEN_FUNCPTR *PFN_PTRC_GLISRENDERBUFFERPROC)(GLuint);$/;"	t	typeref:typename:GLboolean (* PFN_PTRC_GLISRENDERBUFFERPROC)(GLuint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef GLboolean (CODEGEN_FUNCPTR *PFN_PTRC_GLISSAMPLERPROC)(GLuint);$/;"	t	typeref:typename:GLboolean (* PFN_PTRC_GLISSAMPLERPROC)(GLuint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef GLboolean (CODEGEN_FUNCPTR *PFN_PTRC_GLISSHADERPROC)(GLuint);$/;"	t	typeref:typename:GLboolean (* PFN_PTRC_GLISSHADERPROC)(GLuint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef GLboolean (CODEGEN_FUNCPTR *PFN_PTRC_GLISSYNCPROC)(GLsync);$/;"	t	typeref:typename:GLboolean (* PFN_PTRC_GLISSYNCPROC)(GLsync)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef GLboolean (CODEGEN_FUNCPTR *PFN_PTRC_GLISTEXTUREPROC)(GLuint);$/;"	t	typeref:typename:GLboolean (* PFN_PTRC_GLISTEXTUREPROC)(GLuint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef GLboolean (CODEGEN_FUNCPTR *PFN_PTRC_GLISVERTEXARRAYPROC)(GLuint);$/;"	t	typeref:typename:GLboolean (* PFN_PTRC_GLISVERTEXARRAYPROC)(GLuint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef GLboolean (CODEGEN_FUNCPTR *PFN_PTRC_GLUNMAPBUFFERPROC)(GLenum);$/;"	t	typeref:typename:GLboolean (* PFN_PTRC_GLUNMAPBUFFERPROC)(GLenum)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef GLenum (CODEGEN_FUNCPTR *PFN_PTRC_GLCHECKFRAMEBUFFERSTATUSPROC)(GLenum);$/;"	t	typeref:typename:GLenum (* PFN_PTRC_GLCHECKFRAMEBUFFERSTATUSPROC)(GLenum)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef GLenum (CODEGEN_FUNCPTR *PFN_PTRC_GLCLIENTWAITSYNCPROC)(GLsync, GLbitfield, GLuint64);$/;"	t	typeref:typename:GLenum (* PFN_PTRC_GLCLIENTWAITSYNCPROC)(GLsync,GLbitfield,GLuint64)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef GLenum (CODEGEN_FUNCPTR *PFN_PTRC_GLGETERRORPROC)(void);$/;"	t	typeref:typename:GLenum (* PFN_PTRC_GLGETERRORPROC)(void)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef GLint (CODEGEN_FUNCPTR *PFN_PTRC_GLGETATTRIBLOCATIONPROC)(GLuint, const GLchar *);$/;"	t	typeref:typename:GLint (* PFN_PTRC_GLGETATTRIBLOCATIONPROC)(GLuint,const GLchar *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef GLint (CODEGEN_FUNCPTR *PFN_PTRC_GLGETFRAGDATAINDEXPROC)(GLuint, const GLchar *);$/;"	t	typeref:typename:GLint (* PFN_PTRC_GLGETFRAGDATAINDEXPROC)(GLuint,const GLchar *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef GLint (CODEGEN_FUNCPTR *PFN_PTRC_GLGETFRAGDATALOCATIONPROC)(GLuint, const GLchar *);$/;"	t	typeref:typename:GLint (* PFN_PTRC_GLGETFRAGDATALOCATIONPROC)(GLuint,const GLchar *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef GLint (CODEGEN_FUNCPTR *PFN_PTRC_GLGETUNIFORMLOCATIONPROC)(GLuint, const GLchar *);$/;"	t	typeref:typename:GLint (* PFN_PTRC_GLGETUNIFORMLOCATIONPROC)(GLuint,const GLchar *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef GLsync (CODEGEN_FUNCPTR *PFN_PTRC_GLFENCESYNCPROC)(GLenum, GLbitfield);$/;"	t	typeref:typename:GLsync (* PFN_PTRC_GLFENCESYNCPROC)(GLenum,GLbitfield)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef GLuint (CODEGEN_FUNCPTR *PFN_PTRC_GLCREATEPROGRAMPROC)(void);$/;"	t	typeref:typename:GLuint (* PFN_PTRC_GLCREATEPROGRAMPROC)(void)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef GLuint (CODEGEN_FUNCPTR *PFN_PTRC_GLCREATESHADERPROC)(GLenum);$/;"	t	typeref:typename:GLuint (* PFN_PTRC_GLCREATESHADERPROC)(GLenum)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef GLuint (CODEGEN_FUNCPTR *PFN_PTRC_GLGETUNIFORMBLOCKINDEXPROC)(GLuint, const GLchar *);$/;"	t	typeref:typename:GLuint (* PFN_PTRC_GLGETUNIFORMBLOCKINDEXPROC)(GLuint,const GLchar *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef const GLubyte * (CODEGEN_FUNCPTR *PFN_PTRC_GLGETSTRINGIPROC)(GLenum, GLuint);$/;"	t	typeref:typename:const GLubyte * (* PFN_PTRC_GLGETSTRINGIPROC)(GLenum,GLuint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef const GLubyte * (CODEGEN_FUNCPTR *PFN_PTRC_GLGETSTRINGPROC)(GLenum);$/;"	t	typeref:typename:const GLubyte * (* PFN_PTRC_GLGETSTRINGPROC)(GLenum)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLACTIVETEXTUREPROC)(GLenum);$/;"	t	typeref:typename:void (* PFN_PTRC_GLACTIVETEXTUREPROC)(GLenum)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLATTACHSHADERPROC)(GLuint, GLuint);$/;"	t	typeref:typename:void (* PFN_PTRC_GLATTACHSHADERPROC)(GLuint,GLuint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLBEGINCONDITIONALRENDERPROC)(GLuint, GLenum);$/;"	t	typeref:typename:void (* PFN_PTRC_GLBEGINCONDITIONALRENDERPROC)(GLuint,GLenum)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLBEGINQUERYPROC)(GLenum, GLuint);$/;"	t	typeref:typename:void (* PFN_PTRC_GLBEGINQUERYPROC)(GLenum,GLuint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLBEGINTRANSFORMFEEDBACKPROC)(GLenum);$/;"	t	typeref:typename:void (* PFN_PTRC_GLBEGINTRANSFORMFEEDBACKPROC)(GLenum)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLBINDATTRIBLOCATIONPROC)(GLuint, GLuint, const GLchar */;"	t	typeref:typename:void (* PFN_PTRC_GLBINDATTRIBLOCATIONPROC)(GLuint,GLuint,const GLchar *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLBINDBUFFERBASEPROC)(GLenum, GLuint, GLuint);$/;"	t	typeref:typename:void (* PFN_PTRC_GLBINDBUFFERBASEPROC)(GLenum,GLuint,GLuint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLBINDBUFFERPROC)(GLenum, GLuint);$/;"	t	typeref:typename:void (* PFN_PTRC_GLBINDBUFFERPROC)(GLenum,GLuint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLBINDBUFFERRANGEPROC)(GLenum, GLuint, GLuint, GLintptr,/;"	t	typeref:typename:void (* PFN_PTRC_GLBINDBUFFERRANGEPROC)(GLenum,GLuint,GLuint,GLintptr,GLsizeiptr)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLBINDFRAGDATALOCATIONINDEXEDPROC)(GLuint, GLuint, GLuin/;"	t	typeref:typename:void (* PFN_PTRC_GLBINDFRAGDATALOCATIONINDEXEDPROC)(GLuint,GLuint,GLuint,const GLchar *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLBINDFRAGDATALOCATIONPROC)(GLuint, GLuint, const GLchar/;"	t	typeref:typename:void (* PFN_PTRC_GLBINDFRAGDATALOCATIONPROC)(GLuint,GLuint,const GLchar *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLBINDFRAMEBUFFERPROC)(GLenum, GLuint);$/;"	t	typeref:typename:void (* PFN_PTRC_GLBINDFRAMEBUFFERPROC)(GLenum,GLuint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLBINDRENDERBUFFERPROC)(GLenum, GLuint);$/;"	t	typeref:typename:void (* PFN_PTRC_GLBINDRENDERBUFFERPROC)(GLenum,GLuint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLBINDSAMPLERPROC)(GLuint, GLuint);$/;"	t	typeref:typename:void (* PFN_PTRC_GLBINDSAMPLERPROC)(GLuint,GLuint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLBINDTEXTUREPROC)(GLenum, GLuint);$/;"	t	typeref:typename:void (* PFN_PTRC_GLBINDTEXTUREPROC)(GLenum,GLuint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLBINDVERTEXARRAYPROC)(GLuint);$/;"	t	typeref:typename:void (* PFN_PTRC_GLBINDVERTEXARRAYPROC)(GLuint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLBLENDCOLORPROC)(GLfloat, GLfloat, GLfloat, GLfloat);$/;"	t	typeref:typename:void (* PFN_PTRC_GLBLENDCOLORPROC)(GLfloat,GLfloat,GLfloat,GLfloat)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLBLENDEQUATIONPROC)(GLenum);$/;"	t	typeref:typename:void (* PFN_PTRC_GLBLENDEQUATIONPROC)(GLenum)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLBLENDEQUATIONSEPARATEPROC)(GLenum, GLenum);$/;"	t	typeref:typename:void (* PFN_PTRC_GLBLENDEQUATIONSEPARATEPROC)(GLenum,GLenum)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLBLENDFUNCPROC)(GLenum, GLenum);$/;"	t	typeref:typename:void (* PFN_PTRC_GLBLENDFUNCPROC)(GLenum,GLenum)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLBLENDFUNCSEPARATEPROC)(GLenum, GLenum, GLenum, GLenum)/;"	t	typeref:typename:void (* PFN_PTRC_GLBLENDFUNCSEPARATEPROC)(GLenum,GLenum,GLenum,GLenum)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLBLITFRAMEBUFFERPROC)(GLint, GLint, GLint, GLint, GLint/;"	t	typeref:typename:void (* PFN_PTRC_GLBLITFRAMEBUFFERPROC)(GLint,GLint,GLint,GLint,GLint,GLint,GLint,GLint,GLbitfield,GLenum)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLBUFFERDATAPROC)(GLenum, GLsizeiptr, const void *, GLen/;"	t	typeref:typename:void (* PFN_PTRC_GLBUFFERDATAPROC)(GLenum,GLsizeiptr,const void *,GLenum)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLBUFFERSUBDATAPROC)(GLenum, GLintptr, GLsizeiptr, const/;"	t	typeref:typename:void (* PFN_PTRC_GLBUFFERSUBDATAPROC)(GLenum,GLintptr,GLsizeiptr,const void *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLCLAMPCOLORPROC)(GLenum, GLenum);$/;"	t	typeref:typename:void (* PFN_PTRC_GLCLAMPCOLORPROC)(GLenum,GLenum)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLCLEARBUFFERFIPROC)(GLenum, GLint, GLfloat, GLint);$/;"	t	typeref:typename:void (* PFN_PTRC_GLCLEARBUFFERFIPROC)(GLenum,GLint,GLfloat,GLint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLCLEARBUFFERFVPROC)(GLenum, GLint, const GLfloat *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLCLEARBUFFERFVPROC)(GLenum,GLint,const GLfloat *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLCLEARBUFFERIVPROC)(GLenum, GLint, const GLint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLCLEARBUFFERIVPROC)(GLenum,GLint,const GLint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLCLEARBUFFERUIVPROC)(GLenum, GLint, const GLuint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLCLEARBUFFERUIVPROC)(GLenum,GLint,const GLuint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLCLEARCOLORPROC)(GLfloat, GLfloat, GLfloat, GLfloat);$/;"	t	typeref:typename:void (* PFN_PTRC_GLCLEARCOLORPROC)(GLfloat,GLfloat,GLfloat,GLfloat)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLCLEARDEPTHPROC)(GLdouble);$/;"	t	typeref:typename:void (* PFN_PTRC_GLCLEARDEPTHPROC)(GLdouble)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLCLEARPROC)(GLbitfield);$/;"	t	typeref:typename:void (* PFN_PTRC_GLCLEARPROC)(GLbitfield)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLCLEARSTENCILPROC)(GLint);$/;"	t	typeref:typename:void (* PFN_PTRC_GLCLEARSTENCILPROC)(GLint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLCOLORMASKIPROC)(GLuint, GLboolean, GLboolean, GLboolea/;"	t	typeref:typename:void (* PFN_PTRC_GLCOLORMASKIPROC)(GLuint,GLboolean,GLboolean,GLboolean,GLboolean)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLCOLORMASKPROC)(GLboolean, GLboolean, GLboolean, GLbool/;"	t	typeref:typename:void (* PFN_PTRC_GLCOLORMASKPROC)(GLboolean,GLboolean,GLboolean,GLboolean)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLCOMPILESHADERPROC)(GLuint);$/;"	t	typeref:typename:void (* PFN_PTRC_GLCOMPILESHADERPROC)(GLuint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLCOMPRESSEDTEXIMAGE1DPROC)(GLenum, GLint, GLenum, GLsiz/;"	t	typeref:typename:void (* PFN_PTRC_GLCOMPRESSEDTEXIMAGE1DPROC)(GLenum,GLint,GLenum,GLsizei,GLint,GLsizei,const void *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLCOMPRESSEDTEXIMAGE2DPROC)(GLenum, GLint, GLenum, GLsiz/;"	t	typeref:typename:void (* PFN_PTRC_GLCOMPRESSEDTEXIMAGE2DPROC)(GLenum,GLint,GLenum,GLsizei,GLsizei,GLint,GLsizei,const void *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLCOMPRESSEDTEXIMAGE3DPROC)(GLenum, GLint, GLenum, GLsiz/;"	t	typeref:typename:void (* PFN_PTRC_GLCOMPRESSEDTEXIMAGE3DPROC)(GLenum,GLint,GLenum,GLsizei,GLsizei,GLsizei,GLint,GLsizei,const void *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLCOMPRESSEDTEXSUBIMAGE1DPROC)(GLenum, GLint, GLint, GLs/;"	t	typeref:typename:void (* PFN_PTRC_GLCOMPRESSEDTEXSUBIMAGE1DPROC)(GLenum,GLint,GLint,GLsizei,GLenum,GLsizei,const void *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLCOMPRESSEDTEXSUBIMAGE2DPROC)(GLenum, GLint, GLint, GLi/;"	t	typeref:typename:void (* PFN_PTRC_GLCOMPRESSEDTEXSUBIMAGE2DPROC)(GLenum,GLint,GLint,GLint,GLsizei,GLsizei,GLenum,GLsizei,const void *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLCOMPRESSEDTEXSUBIMAGE3DPROC)(GLenum, GLint, GLint, GLi/;"	t	typeref:typename:void (* PFN_PTRC_GLCOMPRESSEDTEXSUBIMAGE3DPROC)(GLenum,GLint,GLint,GLint,GLint,GLsizei,GLsizei,GLsizei,GLenum,GLsizei,const void *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLCOPYBUFFERSUBDATAPROC)(GLenum, GLenum, GLintptr, GLint/;"	t	typeref:typename:void (* PFN_PTRC_GLCOPYBUFFERSUBDATAPROC)(GLenum,GLenum,GLintptr,GLintptr,GLsizeiptr)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLCOPYTEXIMAGE1DPROC)(GLenum, GLint, GLenum, GLint, GLin/;"	t	typeref:typename:void (* PFN_PTRC_GLCOPYTEXIMAGE1DPROC)(GLenum,GLint,GLenum,GLint,GLint,GLsizei,GLint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLCOPYTEXIMAGE2DPROC)(GLenum, GLint, GLenum, GLint, GLin/;"	t	typeref:typename:void (* PFN_PTRC_GLCOPYTEXIMAGE2DPROC)(GLenum,GLint,GLenum,GLint,GLint,GLsizei,GLsizei,GLint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLCOPYTEXSUBIMAGE1DPROC)(GLenum, GLint, GLint, GLint, GL/;"	t	typeref:typename:void (* PFN_PTRC_GLCOPYTEXSUBIMAGE1DPROC)(GLenum,GLint,GLint,GLint,GLint,GLsizei)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLCOPYTEXSUBIMAGE2DPROC)(GLenum, GLint, GLint, GLint, GL/;"	t	typeref:typename:void (* PFN_PTRC_GLCOPYTEXSUBIMAGE2DPROC)(GLenum,GLint,GLint,GLint,GLint,GLint,GLsizei,GLsizei)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLCOPYTEXSUBIMAGE3DPROC)(GLenum, GLint, GLint, GLint, GL/;"	t	typeref:typename:void (* PFN_PTRC_GLCOPYTEXSUBIMAGE3DPROC)(GLenum,GLint,GLint,GLint,GLint,GLint,GLint,GLsizei,GLsizei)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLCULLFACEPROC)(GLenum);$/;"	t	typeref:typename:void (* PFN_PTRC_GLCULLFACEPROC)(GLenum)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLDELETEBUFFERSPROC)(GLsizei, const GLuint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLDELETEBUFFERSPROC)(GLsizei,const GLuint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLDELETEFRAMEBUFFERSPROC)(GLsizei, const GLuint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLDELETEFRAMEBUFFERSPROC)(GLsizei,const GLuint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLDELETEPROGRAMPROC)(GLuint);$/;"	t	typeref:typename:void (* PFN_PTRC_GLDELETEPROGRAMPROC)(GLuint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLDELETEQUERIESPROC)(GLsizei, const GLuint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLDELETEQUERIESPROC)(GLsizei,const GLuint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLDELETERENDERBUFFERSPROC)(GLsizei, const GLuint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLDELETERENDERBUFFERSPROC)(GLsizei,const GLuint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLDELETESAMPLERSPROC)(GLsizei, const GLuint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLDELETESAMPLERSPROC)(GLsizei,const GLuint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLDELETESHADERPROC)(GLuint);$/;"	t	typeref:typename:void (* PFN_PTRC_GLDELETESHADERPROC)(GLuint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLDELETESYNCPROC)(GLsync);$/;"	t	typeref:typename:void (* PFN_PTRC_GLDELETESYNCPROC)(GLsync)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLDELETETEXTURESPROC)(GLsizei, const GLuint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLDELETETEXTURESPROC)(GLsizei,const GLuint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLDELETEVERTEXARRAYSPROC)(GLsizei, const GLuint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLDELETEVERTEXARRAYSPROC)(GLsizei,const GLuint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLDEPTHFUNCPROC)(GLenum);$/;"	t	typeref:typename:void (* PFN_PTRC_GLDEPTHFUNCPROC)(GLenum)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLDEPTHMASKPROC)(GLboolean);$/;"	t	typeref:typename:void (* PFN_PTRC_GLDEPTHMASKPROC)(GLboolean)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLDEPTHRANGEPROC)(GLdouble, GLdouble);$/;"	t	typeref:typename:void (* PFN_PTRC_GLDEPTHRANGEPROC)(GLdouble,GLdouble)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLDETACHSHADERPROC)(GLuint, GLuint);$/;"	t	typeref:typename:void (* PFN_PTRC_GLDETACHSHADERPROC)(GLuint,GLuint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLDISABLEIPROC)(GLenum, GLuint);$/;"	t	typeref:typename:void (* PFN_PTRC_GLDISABLEIPROC)(GLenum,GLuint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLDISABLEPROC)(GLenum);$/;"	t	typeref:typename:void (* PFN_PTRC_GLDISABLEPROC)(GLenum)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLDISABLEVERTEXATTRIBARRAYPROC)(GLuint);$/;"	t	typeref:typename:void (* PFN_PTRC_GLDISABLEVERTEXATTRIBARRAYPROC)(GLuint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLDRAWARRAYSINSTANCEDPROC)(GLenum, GLint, GLsizei, GLsiz/;"	t	typeref:typename:void (* PFN_PTRC_GLDRAWARRAYSINSTANCEDPROC)(GLenum,GLint,GLsizei,GLsizei)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLDRAWARRAYSPROC)(GLenum, GLint, GLsizei);$/;"	t	typeref:typename:void (* PFN_PTRC_GLDRAWARRAYSPROC)(GLenum,GLint,GLsizei)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLDRAWBUFFERPROC)(GLenum);$/;"	t	typeref:typename:void (* PFN_PTRC_GLDRAWBUFFERPROC)(GLenum)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLDRAWBUFFERSPROC)(GLsizei, const GLenum *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLDRAWBUFFERSPROC)(GLsizei,const GLenum *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLDRAWELEMENTSBASEVERTEXPROC)(GLenum, GLsizei, GLenum, c/;"	t	typeref:typename:void (* PFN_PTRC_GLDRAWELEMENTSBASEVERTEXPROC)(GLenum,GLsizei,GLenum,const void *,GLint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLDRAWELEMENTSINSTANCEDBASEVERTEXPROC)(GLenum, GLsizei, /;"	t	typeref:typename:void (* PFN_PTRC_GLDRAWELEMENTSINSTANCEDBASEVERTEXPROC)(GLenum,GLsizei,GLenum,const void *,GLsizei,GLint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLDRAWELEMENTSINSTANCEDPROC)(GLenum, GLsizei, GLenum, co/;"	t	typeref:typename:void (* PFN_PTRC_GLDRAWELEMENTSINSTANCEDPROC)(GLenum,GLsizei,GLenum,const void *,GLsizei)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLDRAWELEMENTSPROC)(GLenum, GLsizei, GLenum, const void /;"	t	typeref:typename:void (* PFN_PTRC_GLDRAWELEMENTSPROC)(GLenum,GLsizei,GLenum,const void *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLDRAWRANGEELEMENTSBASEVERTEXPROC)(GLenum, GLuint, GLuin/;"	t	typeref:typename:void (* PFN_PTRC_GLDRAWRANGEELEMENTSBASEVERTEXPROC)(GLenum,GLuint,GLuint,GLsizei,GLenum,const void *,GLint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLDRAWRANGEELEMENTSPROC)(GLenum, GLuint, GLuint, GLsizei/;"	t	typeref:typename:void (* PFN_PTRC_GLDRAWRANGEELEMENTSPROC)(GLenum,GLuint,GLuint,GLsizei,GLenum,const void *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLENABLEIPROC)(GLenum, GLuint);$/;"	t	typeref:typename:void (* PFN_PTRC_GLENABLEIPROC)(GLenum,GLuint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLENABLEPROC)(GLenum);$/;"	t	typeref:typename:void (* PFN_PTRC_GLENABLEPROC)(GLenum)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLENABLEVERTEXATTRIBARRAYPROC)(GLuint);$/;"	t	typeref:typename:void (* PFN_PTRC_GLENABLEVERTEXATTRIBARRAYPROC)(GLuint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLENDCONDITIONALRENDERPROC)(void);$/;"	t	typeref:typename:void (* PFN_PTRC_GLENDCONDITIONALRENDERPROC)(void)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLENDQUERYPROC)(GLenum);$/;"	t	typeref:typename:void (* PFN_PTRC_GLENDQUERYPROC)(GLenum)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLENDTRANSFORMFEEDBACKPROC)(void);$/;"	t	typeref:typename:void (* PFN_PTRC_GLENDTRANSFORMFEEDBACKPROC)(void)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLFINISHPROC)(void);$/;"	t	typeref:typename:void (* PFN_PTRC_GLFINISHPROC)(void)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLFLUSHMAPPEDBUFFERRANGEPROC)(GLenum, GLintptr, GLsizeip/;"	t	typeref:typename:void (* PFN_PTRC_GLFLUSHMAPPEDBUFFERRANGEPROC)(GLenum,GLintptr,GLsizeiptr)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLFLUSHPROC)(void);$/;"	t	typeref:typename:void (* PFN_PTRC_GLFLUSHPROC)(void)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLFRAMEBUFFERRENDERBUFFERPROC)(GLenum, GLenum, GLenum, G/;"	t	typeref:typename:void (* PFN_PTRC_GLFRAMEBUFFERRENDERBUFFERPROC)(GLenum,GLenum,GLenum,GLuint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLFRAMEBUFFERTEXTURE1DPROC)(GLenum, GLenum, GLenum, GLui/;"	t	typeref:typename:void (* PFN_PTRC_GLFRAMEBUFFERTEXTURE1DPROC)(GLenum,GLenum,GLenum,GLuint,GLint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLFRAMEBUFFERTEXTURE2DPROC)(GLenum, GLenum, GLenum, GLui/;"	t	typeref:typename:void (* PFN_PTRC_GLFRAMEBUFFERTEXTURE2DPROC)(GLenum,GLenum,GLenum,GLuint,GLint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLFRAMEBUFFERTEXTURE3DPROC)(GLenum, GLenum, GLenum, GLui/;"	t	typeref:typename:void (* PFN_PTRC_GLFRAMEBUFFERTEXTURE3DPROC)(GLenum,GLenum,GLenum,GLuint,GLint,GLint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLFRAMEBUFFERTEXTURELAYERPROC)(GLenum, GLenum, GLuint, G/;"	t	typeref:typename:void (* PFN_PTRC_GLFRAMEBUFFERTEXTURELAYERPROC)(GLenum,GLenum,GLuint,GLint,GLint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLFRAMEBUFFERTEXTUREPROC)(GLenum, GLenum, GLuint, GLint)/;"	t	typeref:typename:void (* PFN_PTRC_GLFRAMEBUFFERTEXTUREPROC)(GLenum,GLenum,GLuint,GLint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLFRONTFACEPROC)(GLenum);$/;"	t	typeref:typename:void (* PFN_PTRC_GLFRONTFACEPROC)(GLenum)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGENBUFFERSPROC)(GLsizei, GLuint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLGENBUFFERSPROC)(GLsizei,GLuint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGENERATEMIPMAPPROC)(GLenum);$/;"	t	typeref:typename:void (* PFN_PTRC_GLGENERATEMIPMAPPROC)(GLenum)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGENFRAMEBUFFERSPROC)(GLsizei, GLuint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLGENFRAMEBUFFERSPROC)(GLsizei,GLuint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGENQUERIESPROC)(GLsizei, GLuint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLGENQUERIESPROC)(GLsizei,GLuint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGENRENDERBUFFERSPROC)(GLsizei, GLuint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLGENRENDERBUFFERSPROC)(GLsizei,GLuint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGENSAMPLERSPROC)(GLsizei, GLuint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLGENSAMPLERSPROC)(GLsizei,GLuint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGENTEXTURESPROC)(GLsizei, GLuint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLGENTEXTURESPROC)(GLsizei,GLuint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGENVERTEXARRAYSPROC)(GLsizei, GLuint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLGENVERTEXARRAYSPROC)(GLsizei,GLuint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETACTIVEATTRIBPROC)(GLuint, GLuint, GLsizei, GLsizei /;"	t	typeref:typename:void (* PFN_PTRC_GLGETACTIVEATTRIBPROC)(GLuint,GLuint,GLsizei,GLsizei *,GLint *,GLenum *,GLchar *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETACTIVEUNIFORMBLOCKIVPROC)(GLuint, GLuint, GLenum, G/;"	t	typeref:typename:void (* PFN_PTRC_GLGETACTIVEUNIFORMBLOCKIVPROC)(GLuint,GLuint,GLenum,GLint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETACTIVEUNIFORMBLOCKNAMEPROC)(GLuint, GLuint, GLsizei/;"	t	typeref:typename:void (* PFN_PTRC_GLGETACTIVEUNIFORMBLOCKNAMEPROC)(GLuint,GLuint,GLsizei,GLsizei *,GLchar *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETACTIVEUNIFORMNAMEPROC)(GLuint, GLuint, GLsizei, GLs/;"	t	typeref:typename:void (* PFN_PTRC_GLGETACTIVEUNIFORMNAMEPROC)(GLuint,GLuint,GLsizei,GLsizei *,GLchar *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETACTIVEUNIFORMPROC)(GLuint, GLuint, GLsizei, GLsizei/;"	t	typeref:typename:void (* PFN_PTRC_GLGETACTIVEUNIFORMPROC)(GLuint,GLuint,GLsizei,GLsizei *,GLint *,GLenum *,GLchar *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETACTIVEUNIFORMSIVPROC)(GLuint, GLsizei, const GLuint/;"	t	typeref:typename:void (* PFN_PTRC_GLGETACTIVEUNIFORMSIVPROC)(GLuint,GLsizei,const GLuint *,GLenum,GLint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETATTACHEDSHADERSPROC)(GLuint, GLsizei, GLsizei *, GL/;"	t	typeref:typename:void (* PFN_PTRC_GLGETATTACHEDSHADERSPROC)(GLuint,GLsizei,GLsizei *,GLuint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETBOOLEANI_VPROC)(GLenum, GLuint, GLboolean *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLGETBOOLEANI_VPROC)(GLenum,GLuint,GLboolean *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETBOOLEANVPROC)(GLenum, GLboolean *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLGETBOOLEANVPROC)(GLenum,GLboolean *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETBUFFERPARAMETERI64VPROC)(GLenum, GLenum, GLint64 *)/;"	t	typeref:typename:void (* PFN_PTRC_GLGETBUFFERPARAMETERI64VPROC)(GLenum,GLenum,GLint64 *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETBUFFERPARAMETERIVPROC)(GLenum, GLenum, GLint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLGETBUFFERPARAMETERIVPROC)(GLenum,GLenum,GLint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETBUFFERPOINTERVPROC)(GLenum, GLenum, void **);$/;"	t	typeref:typename:void (* PFN_PTRC_GLGETBUFFERPOINTERVPROC)(GLenum,GLenum,void **)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETBUFFERSUBDATAPROC)(GLenum, GLintptr, GLsizeiptr, vo/;"	t	typeref:typename:void (* PFN_PTRC_GLGETBUFFERSUBDATAPROC)(GLenum,GLintptr,GLsizeiptr,void *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETCOMPRESSEDTEXIMAGEPROC)(GLenum, GLint, void *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLGETCOMPRESSEDTEXIMAGEPROC)(GLenum,GLint,void *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETDOUBLEVPROC)(GLenum, GLdouble *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLGETDOUBLEVPROC)(GLenum,GLdouble *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETFLOATVPROC)(GLenum, GLfloat *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLGETFLOATVPROC)(GLenum,GLfloat *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC)(GLenum, GLenu/;"	t	typeref:typename:void (* PFN_PTRC_GLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC)(GLenum,GLenum,GLenum,GLint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETINTEGER64I_VPROC)(GLenum, GLuint, GLint64 *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLGETINTEGER64I_VPROC)(GLenum,GLuint,GLint64 *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETINTEGER64VPROC)(GLenum, GLint64 *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLGETINTEGER64VPROC)(GLenum,GLint64 *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETINTEGERI_VPROC)(GLenum, GLuint, GLint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLGETINTEGERI_VPROC)(GLenum,GLuint,GLint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETINTEGERVPROC)(GLenum, GLint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLGETINTEGERVPROC)(GLenum,GLint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETMULTISAMPLEFVPROC)(GLenum, GLuint, GLfloat *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLGETMULTISAMPLEFVPROC)(GLenum,GLuint,GLfloat *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETPROGRAMINFOLOGPROC)(GLuint, GLsizei, GLsizei *, GLc/;"	t	typeref:typename:void (* PFN_PTRC_GLGETPROGRAMINFOLOGPROC)(GLuint,GLsizei,GLsizei *,GLchar *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETPROGRAMIVPROC)(GLuint, GLenum, GLint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLGETPROGRAMIVPROC)(GLuint,GLenum,GLint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETQUERYIVPROC)(GLenum, GLenum, GLint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLGETQUERYIVPROC)(GLenum,GLenum,GLint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETQUERYOBJECTI64VPROC)(GLuint, GLenum, GLint64 *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLGETQUERYOBJECTI64VPROC)(GLuint,GLenum,GLint64 *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETQUERYOBJECTIVPROC)(GLuint, GLenum, GLint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLGETQUERYOBJECTIVPROC)(GLuint,GLenum,GLint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETQUERYOBJECTUI64VPROC)(GLuint, GLenum, GLuint64 *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLGETQUERYOBJECTUI64VPROC)(GLuint,GLenum,GLuint64 *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETQUERYOBJECTUIVPROC)(GLuint, GLenum, GLuint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLGETQUERYOBJECTUIVPROC)(GLuint,GLenum,GLuint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETRENDERBUFFERPARAMETERIVPROC)(GLenum, GLenum, GLint /;"	t	typeref:typename:void (* PFN_PTRC_GLGETRENDERBUFFERPARAMETERIVPROC)(GLenum,GLenum,GLint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETSAMPLERPARAMETERFVPROC)(GLuint, GLenum, GLfloat *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLGETSAMPLERPARAMETERFVPROC)(GLuint,GLenum,GLfloat *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETSAMPLERPARAMETERIIVPROC)(GLuint, GLenum, GLint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLGETSAMPLERPARAMETERIIVPROC)(GLuint,GLenum,GLint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETSAMPLERPARAMETERIUIVPROC)(GLuint, GLenum, GLuint *)/;"	t	typeref:typename:void (* PFN_PTRC_GLGETSAMPLERPARAMETERIUIVPROC)(GLuint,GLenum,GLuint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETSAMPLERPARAMETERIVPROC)(GLuint, GLenum, GLint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLGETSAMPLERPARAMETERIVPROC)(GLuint,GLenum,GLint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETSHADERINFOLOGPROC)(GLuint, GLsizei, GLsizei *, GLch/;"	t	typeref:typename:void (* PFN_PTRC_GLGETSHADERINFOLOGPROC)(GLuint,GLsizei,GLsizei *,GLchar *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETSHADERIVPROC)(GLuint, GLenum, GLint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLGETSHADERIVPROC)(GLuint,GLenum,GLint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETSHADERSOURCEPROC)(GLuint, GLsizei, GLsizei *, GLcha/;"	t	typeref:typename:void (* PFN_PTRC_GLGETSHADERSOURCEPROC)(GLuint,GLsizei,GLsizei *,GLchar *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETSYNCIVPROC)(GLsync, GLenum, GLsizei, GLsizei *, GLi/;"	t	typeref:typename:void (* PFN_PTRC_GLGETSYNCIVPROC)(GLsync,GLenum,GLsizei,GLsizei *,GLint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETTEXIMAGEPROC)(GLenum, GLint, GLenum, GLenum, void */;"	t	typeref:typename:void (* PFN_PTRC_GLGETTEXIMAGEPROC)(GLenum,GLint,GLenum,GLenum,void *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETTEXLEVELPARAMETERFVPROC)(GLenum, GLint, GLenum, GLf/;"	t	typeref:typename:void (* PFN_PTRC_GLGETTEXLEVELPARAMETERFVPROC)(GLenum,GLint,GLenum,GLfloat *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETTEXLEVELPARAMETERIVPROC)(GLenum, GLint, GLenum, GLi/;"	t	typeref:typename:void (* PFN_PTRC_GLGETTEXLEVELPARAMETERIVPROC)(GLenum,GLint,GLenum,GLint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETTEXPARAMETERFVPROC)(GLenum, GLenum, GLfloat *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLGETTEXPARAMETERFVPROC)(GLenum,GLenum,GLfloat *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETTEXPARAMETERIIVPROC)(GLenum, GLenum, GLint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLGETTEXPARAMETERIIVPROC)(GLenum,GLenum,GLint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETTEXPARAMETERIUIVPROC)(GLenum, GLenum, GLuint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLGETTEXPARAMETERIUIVPROC)(GLenum,GLenum,GLuint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETTEXPARAMETERIVPROC)(GLenum, GLenum, GLint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLGETTEXPARAMETERIVPROC)(GLenum,GLenum,GLint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETTRANSFORMFEEDBACKVARYINGPROC)(GLuint, GLuint, GLsiz/;"	t	typeref:typename:void (* PFN_PTRC_GLGETTRANSFORMFEEDBACKVARYINGPROC)(GLuint,GLuint,GLsizei,GLsizei *,GLsizei *,GLenum *,GLchar *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETUNIFORMFVPROC)(GLuint, GLint, GLfloat *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLGETUNIFORMFVPROC)(GLuint,GLint,GLfloat *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETUNIFORMINDICESPROC)(GLuint, GLsizei, const GLchar */;"	t	typeref:typename:void (* PFN_PTRC_GLGETUNIFORMINDICESPROC)(GLuint,GLsizei,const GLchar * const *,GLuint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETUNIFORMIVPROC)(GLuint, GLint, GLint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLGETUNIFORMIVPROC)(GLuint,GLint,GLint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETUNIFORMUIVPROC)(GLuint, GLint, GLuint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLGETUNIFORMUIVPROC)(GLuint,GLint,GLuint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETVERTEXATTRIBDVPROC)(GLuint, GLenum, GLdouble *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLGETVERTEXATTRIBDVPROC)(GLuint,GLenum,GLdouble *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETVERTEXATTRIBFVPROC)(GLuint, GLenum, GLfloat *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLGETVERTEXATTRIBFVPROC)(GLuint,GLenum,GLfloat *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETVERTEXATTRIBIIVPROC)(GLuint, GLenum, GLint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLGETVERTEXATTRIBIIVPROC)(GLuint,GLenum,GLint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETVERTEXATTRIBIUIVPROC)(GLuint, GLenum, GLuint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLGETVERTEXATTRIBIUIVPROC)(GLuint,GLenum,GLuint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETVERTEXATTRIBIVPROC)(GLuint, GLenum, GLint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLGETVERTEXATTRIBIVPROC)(GLuint,GLenum,GLint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLGETVERTEXATTRIBPOINTERVPROC)(GLuint, GLenum, void **);$/;"	t	typeref:typename:void (* PFN_PTRC_GLGETVERTEXATTRIBPOINTERVPROC)(GLuint,GLenum,void **)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLHINTPROC)(GLenum, GLenum);$/;"	t	typeref:typename:void (* PFN_PTRC_GLHINTPROC)(GLenum,GLenum)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLLINEWIDTHPROC)(GLfloat);$/;"	t	typeref:typename:void (* PFN_PTRC_GLLINEWIDTHPROC)(GLfloat)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLLINKPROGRAMPROC)(GLuint);$/;"	t	typeref:typename:void (* PFN_PTRC_GLLINKPROGRAMPROC)(GLuint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLLOGICOPPROC)(GLenum);$/;"	t	typeref:typename:void (* PFN_PTRC_GLLOGICOPPROC)(GLenum)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLMULTIDRAWARRAYSPROC)(GLenum, const GLint *, const GLsi/;"	t	typeref:typename:void (* PFN_PTRC_GLMULTIDRAWARRAYSPROC)(GLenum,const GLint *,const GLsizei *,GLsizei)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLMULTIDRAWELEMENTSBASEVERTEXPROC)(GLenum, const GLsizei/;"	t	typeref:typename:void (* PFN_PTRC_GLMULTIDRAWELEMENTSBASEVERTEXPROC)(GLenum,const GLsizei *,GLenum,const void * const *,GLsizei,const GLint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLMULTIDRAWELEMENTSPROC)(GLenum, const GLsizei *, GLenum/;"	t	typeref:typename:void (* PFN_PTRC_GLMULTIDRAWELEMENTSPROC)(GLenum,const GLsizei *,GLenum,const void * const *,GLsizei)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLPIXELSTOREFPROC)(GLenum, GLfloat);$/;"	t	typeref:typename:void (* PFN_PTRC_GLPIXELSTOREFPROC)(GLenum,GLfloat)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLPIXELSTOREIPROC)(GLenum, GLint);$/;"	t	typeref:typename:void (* PFN_PTRC_GLPIXELSTOREIPROC)(GLenum,GLint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLPOINTPARAMETERFPROC)(GLenum, GLfloat);$/;"	t	typeref:typename:void (* PFN_PTRC_GLPOINTPARAMETERFPROC)(GLenum,GLfloat)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLPOINTPARAMETERFVPROC)(GLenum, const GLfloat *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLPOINTPARAMETERFVPROC)(GLenum,const GLfloat *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLPOINTPARAMETERIPROC)(GLenum, GLint);$/;"	t	typeref:typename:void (* PFN_PTRC_GLPOINTPARAMETERIPROC)(GLenum,GLint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLPOINTPARAMETERIVPROC)(GLenum, const GLint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLPOINTPARAMETERIVPROC)(GLenum,const GLint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLPOINTSIZEPROC)(GLfloat);$/;"	t	typeref:typename:void (* PFN_PTRC_GLPOINTSIZEPROC)(GLfloat)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLPOLYGONMODEPROC)(GLenum, GLenum);$/;"	t	typeref:typename:void (* PFN_PTRC_GLPOLYGONMODEPROC)(GLenum,GLenum)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLPOLYGONOFFSETPROC)(GLfloat, GLfloat);$/;"	t	typeref:typename:void (* PFN_PTRC_GLPOLYGONOFFSETPROC)(GLfloat,GLfloat)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLPRIMITIVERESTARTINDEXPROC)(GLuint);$/;"	t	typeref:typename:void (* PFN_PTRC_GLPRIMITIVERESTARTINDEXPROC)(GLuint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLPROVOKINGVERTEXPROC)(GLenum);$/;"	t	typeref:typename:void (* PFN_PTRC_GLPROVOKINGVERTEXPROC)(GLenum)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLQUERYCOUNTERPROC)(GLuint, GLenum);$/;"	t	typeref:typename:void (* PFN_PTRC_GLQUERYCOUNTERPROC)(GLuint,GLenum)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLREADBUFFERPROC)(GLenum);$/;"	t	typeref:typename:void (* PFN_PTRC_GLREADBUFFERPROC)(GLenum)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLREADPIXELSPROC)(GLint, GLint, GLsizei, GLsizei, GLenum/;"	t	typeref:typename:void (* PFN_PTRC_GLREADPIXELSPROC)(GLint,GLint,GLsizei,GLsizei,GLenum,GLenum,void *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLRENDERBUFFERSTORAGEMULTISAMPLEPROC)(GLenum, GLsizei, G/;"	t	typeref:typename:void (* PFN_PTRC_GLRENDERBUFFERSTORAGEMULTISAMPLEPROC)(GLenum,GLsizei,GLenum,GLsizei,GLsizei)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLRENDERBUFFERSTORAGEPROC)(GLenum, GLenum, GLsizei, GLsi/;"	t	typeref:typename:void (* PFN_PTRC_GLRENDERBUFFERSTORAGEPROC)(GLenum,GLenum,GLsizei,GLsizei)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLSAMPLECOVERAGEPROC)(GLfloat, GLboolean);$/;"	t	typeref:typename:void (* PFN_PTRC_GLSAMPLECOVERAGEPROC)(GLfloat,GLboolean)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLSAMPLEMASKIPROC)(GLuint, GLbitfield);$/;"	t	typeref:typename:void (* PFN_PTRC_GLSAMPLEMASKIPROC)(GLuint,GLbitfield)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLSAMPLERPARAMETERFPROC)(GLuint, GLenum, GLfloat);$/;"	t	typeref:typename:void (* PFN_PTRC_GLSAMPLERPARAMETERFPROC)(GLuint,GLenum,GLfloat)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLSAMPLERPARAMETERFVPROC)(GLuint, GLenum, const GLfloat /;"	t	typeref:typename:void (* PFN_PTRC_GLSAMPLERPARAMETERFVPROC)(GLuint,GLenum,const GLfloat *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLSAMPLERPARAMETERIIVPROC)(GLuint, GLenum, const GLint */;"	t	typeref:typename:void (* PFN_PTRC_GLSAMPLERPARAMETERIIVPROC)(GLuint,GLenum,const GLint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLSAMPLERPARAMETERIPROC)(GLuint, GLenum, GLint);$/;"	t	typeref:typename:void (* PFN_PTRC_GLSAMPLERPARAMETERIPROC)(GLuint,GLenum,GLint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLSAMPLERPARAMETERIUIVPROC)(GLuint, GLenum, const GLuint/;"	t	typeref:typename:void (* PFN_PTRC_GLSAMPLERPARAMETERIUIVPROC)(GLuint,GLenum,const GLuint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLSAMPLERPARAMETERIVPROC)(GLuint, GLenum, const GLint *)/;"	t	typeref:typename:void (* PFN_PTRC_GLSAMPLERPARAMETERIVPROC)(GLuint,GLenum,const GLint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLSCISSORPROC)(GLint, GLint, GLsizei, GLsizei);$/;"	t	typeref:typename:void (* PFN_PTRC_GLSCISSORPROC)(GLint,GLint,GLsizei,GLsizei)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLSHADERSOURCEPROC)(GLuint, GLsizei, const GLchar *const/;"	t	typeref:typename:void (* PFN_PTRC_GLSHADERSOURCEPROC)(GLuint,GLsizei,const GLchar * const *,const GLint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLSTENCILFUNCPROC)(GLenum, GLint, GLuint);$/;"	t	typeref:typename:void (* PFN_PTRC_GLSTENCILFUNCPROC)(GLenum,GLint,GLuint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLSTENCILFUNCSEPARATEPROC)(GLenum, GLenum, GLint, GLuint/;"	t	typeref:typename:void (* PFN_PTRC_GLSTENCILFUNCSEPARATEPROC)(GLenum,GLenum,GLint,GLuint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLSTENCILMASKPROC)(GLuint);$/;"	t	typeref:typename:void (* PFN_PTRC_GLSTENCILMASKPROC)(GLuint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLSTENCILMASKSEPARATEPROC)(GLenum, GLuint);$/;"	t	typeref:typename:void (* PFN_PTRC_GLSTENCILMASKSEPARATEPROC)(GLenum,GLuint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLSTENCILOPPROC)(GLenum, GLenum, GLenum);$/;"	t	typeref:typename:void (* PFN_PTRC_GLSTENCILOPPROC)(GLenum,GLenum,GLenum)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLSTENCILOPSEPARATEPROC)(GLenum, GLenum, GLenum, GLenum)/;"	t	typeref:typename:void (* PFN_PTRC_GLSTENCILOPSEPARATEPROC)(GLenum,GLenum,GLenum,GLenum)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLTEXBUFFERPROC)(GLenum, GLenum, GLuint);$/;"	t	typeref:typename:void (* PFN_PTRC_GLTEXBUFFERPROC)(GLenum,GLenum,GLuint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLTEXIMAGE1DPROC)(GLenum, GLint, GLint, GLsizei, GLint, /;"	t	typeref:typename:void (* PFN_PTRC_GLTEXIMAGE1DPROC)(GLenum,GLint,GLint,GLsizei,GLint,GLenum,GLenum,const void *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLTEXIMAGE2DMULTISAMPLEPROC)(GLenum, GLsizei, GLenum, GL/;"	t	typeref:typename:void (* PFN_PTRC_GLTEXIMAGE2DMULTISAMPLEPROC)(GLenum,GLsizei,GLenum,GLsizei,GLsizei,GLboolean)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLTEXIMAGE2DPROC)(GLenum, GLint, GLint, GLsizei, GLsizei/;"	t	typeref:typename:void (* PFN_PTRC_GLTEXIMAGE2DPROC)(GLenum,GLint,GLint,GLsizei,GLsizei,GLint,GLenum,GLenum,const void *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLTEXIMAGE3DMULTISAMPLEPROC)(GLenum, GLsizei, GLenum, GL/;"	t	typeref:typename:void (* PFN_PTRC_GLTEXIMAGE3DMULTISAMPLEPROC)(GLenum,GLsizei,GLenum,GLsizei,GLsizei,GLsizei,GLboolean)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLTEXIMAGE3DPROC)(GLenum, GLint, GLint, GLsizei, GLsizei/;"	t	typeref:typename:void (* PFN_PTRC_GLTEXIMAGE3DPROC)(GLenum,GLint,GLint,GLsizei,GLsizei,GLsizei,GLint,GLenum,GLenum,const void *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLTEXPARAMETERFPROC)(GLenum, GLenum, GLfloat);$/;"	t	typeref:typename:void (* PFN_PTRC_GLTEXPARAMETERFPROC)(GLenum,GLenum,GLfloat)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLTEXPARAMETERFVPROC)(GLenum, GLenum, const GLfloat *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLTEXPARAMETERFVPROC)(GLenum,GLenum,const GLfloat *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLTEXPARAMETERIIVPROC)(GLenum, GLenum, const GLint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLTEXPARAMETERIIVPROC)(GLenum,GLenum,const GLint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLTEXPARAMETERIPROC)(GLenum, GLenum, GLint);$/;"	t	typeref:typename:void (* PFN_PTRC_GLTEXPARAMETERIPROC)(GLenum,GLenum,GLint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLTEXPARAMETERIUIVPROC)(GLenum, GLenum, const GLuint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLTEXPARAMETERIUIVPROC)(GLenum,GLenum,const GLuint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLTEXPARAMETERIVPROC)(GLenum, GLenum, const GLint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLTEXPARAMETERIVPROC)(GLenum,GLenum,const GLint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLTEXSUBIMAGE1DPROC)(GLenum, GLint, GLint, GLsizei, GLen/;"	t	typeref:typename:void (* PFN_PTRC_GLTEXSUBIMAGE1DPROC)(GLenum,GLint,GLint,GLsizei,GLenum,GLenum,const void *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLTEXSUBIMAGE2DPROC)(GLenum, GLint, GLint, GLint, GLsize/;"	t	typeref:typename:void (* PFN_PTRC_GLTEXSUBIMAGE2DPROC)(GLenum,GLint,GLint,GLint,GLsizei,GLsizei,GLenum,GLenum,const void *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLTEXSUBIMAGE3DPROC)(GLenum, GLint, GLint, GLint, GLint,/;"	t	typeref:typename:void (* PFN_PTRC_GLTEXSUBIMAGE3DPROC)(GLenum,GLint,GLint,GLint,GLint,GLsizei,GLsizei,GLsizei,GLenum,GLenum,const void *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLTRANSFORMFEEDBACKVARYINGSPROC)(GLuint, GLsizei, const /;"	t	typeref:typename:void (* PFN_PTRC_GLTRANSFORMFEEDBACKVARYINGSPROC)(GLuint,GLsizei,const GLchar * const *,GLenum)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLUNIFORM1FPROC)(GLint, GLfloat);$/;"	t	typeref:typename:void (* PFN_PTRC_GLUNIFORM1FPROC)(GLint,GLfloat)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLUNIFORM1FVPROC)(GLint, GLsizei, const GLfloat *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLUNIFORM1FVPROC)(GLint,GLsizei,const GLfloat *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLUNIFORM1IPROC)(GLint, GLint);$/;"	t	typeref:typename:void (* PFN_PTRC_GLUNIFORM1IPROC)(GLint,GLint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLUNIFORM1IVPROC)(GLint, GLsizei, const GLint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLUNIFORM1IVPROC)(GLint,GLsizei,const GLint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLUNIFORM1UIPROC)(GLint, GLuint);$/;"	t	typeref:typename:void (* PFN_PTRC_GLUNIFORM1UIPROC)(GLint,GLuint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLUNIFORM1UIVPROC)(GLint, GLsizei, const GLuint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLUNIFORM1UIVPROC)(GLint,GLsizei,const GLuint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLUNIFORM2FPROC)(GLint, GLfloat, GLfloat);$/;"	t	typeref:typename:void (* PFN_PTRC_GLUNIFORM2FPROC)(GLint,GLfloat,GLfloat)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLUNIFORM2FVPROC)(GLint, GLsizei, const GLfloat *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLUNIFORM2FVPROC)(GLint,GLsizei,const GLfloat *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLUNIFORM2IPROC)(GLint, GLint, GLint);$/;"	t	typeref:typename:void (* PFN_PTRC_GLUNIFORM2IPROC)(GLint,GLint,GLint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLUNIFORM2IVPROC)(GLint, GLsizei, const GLint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLUNIFORM2IVPROC)(GLint,GLsizei,const GLint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLUNIFORM2UIPROC)(GLint, GLuint, GLuint);$/;"	t	typeref:typename:void (* PFN_PTRC_GLUNIFORM2UIPROC)(GLint,GLuint,GLuint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLUNIFORM2UIVPROC)(GLint, GLsizei, const GLuint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLUNIFORM2UIVPROC)(GLint,GLsizei,const GLuint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLUNIFORM3FPROC)(GLint, GLfloat, GLfloat, GLfloat);$/;"	t	typeref:typename:void (* PFN_PTRC_GLUNIFORM3FPROC)(GLint,GLfloat,GLfloat,GLfloat)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLUNIFORM3FVPROC)(GLint, GLsizei, const GLfloat *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLUNIFORM3FVPROC)(GLint,GLsizei,const GLfloat *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLUNIFORM3IPROC)(GLint, GLint, GLint, GLint);$/;"	t	typeref:typename:void (* PFN_PTRC_GLUNIFORM3IPROC)(GLint,GLint,GLint,GLint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLUNIFORM3IVPROC)(GLint, GLsizei, const GLint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLUNIFORM3IVPROC)(GLint,GLsizei,const GLint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLUNIFORM3UIPROC)(GLint, GLuint, GLuint, GLuint);$/;"	t	typeref:typename:void (* PFN_PTRC_GLUNIFORM3UIPROC)(GLint,GLuint,GLuint,GLuint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLUNIFORM3UIVPROC)(GLint, GLsizei, const GLuint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLUNIFORM3UIVPROC)(GLint,GLsizei,const GLuint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLUNIFORM4FPROC)(GLint, GLfloat, GLfloat, GLfloat, GLflo/;"	t	typeref:typename:void (* PFN_PTRC_GLUNIFORM4FPROC)(GLint,GLfloat,GLfloat,GLfloat,GLfloat)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLUNIFORM4FVPROC)(GLint, GLsizei, const GLfloat *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLUNIFORM4FVPROC)(GLint,GLsizei,const GLfloat *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLUNIFORM4IPROC)(GLint, GLint, GLint, GLint, GLint);$/;"	t	typeref:typename:void (* PFN_PTRC_GLUNIFORM4IPROC)(GLint,GLint,GLint,GLint,GLint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLUNIFORM4IVPROC)(GLint, GLsizei, const GLint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLUNIFORM4IVPROC)(GLint,GLsizei,const GLint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLUNIFORM4UIPROC)(GLint, GLuint, GLuint, GLuint, GLuint)/;"	t	typeref:typename:void (* PFN_PTRC_GLUNIFORM4UIPROC)(GLint,GLuint,GLuint,GLuint,GLuint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLUNIFORM4UIVPROC)(GLint, GLsizei, const GLuint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLUNIFORM4UIVPROC)(GLint,GLsizei,const GLuint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLUNIFORMBLOCKBINDINGPROC)(GLuint, GLuint, GLuint);$/;"	t	typeref:typename:void (* PFN_PTRC_GLUNIFORMBLOCKBINDINGPROC)(GLuint,GLuint,GLuint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLUNIFORMMATRIX2FVPROC)(GLint, GLsizei, GLboolean, const/;"	t	typeref:typename:void (* PFN_PTRC_GLUNIFORMMATRIX2FVPROC)(GLint,GLsizei,GLboolean,const GLfloat *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLUNIFORMMATRIX2X3FVPROC)(GLint, GLsizei, GLboolean, con/;"	t	typeref:typename:void (* PFN_PTRC_GLUNIFORMMATRIX2X3FVPROC)(GLint,GLsizei,GLboolean,const GLfloat *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLUNIFORMMATRIX2X4FVPROC)(GLint, GLsizei, GLboolean, con/;"	t	typeref:typename:void (* PFN_PTRC_GLUNIFORMMATRIX2X4FVPROC)(GLint,GLsizei,GLboolean,const GLfloat *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLUNIFORMMATRIX3FVPROC)(GLint, GLsizei, GLboolean, const/;"	t	typeref:typename:void (* PFN_PTRC_GLUNIFORMMATRIX3FVPROC)(GLint,GLsizei,GLboolean,const GLfloat *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLUNIFORMMATRIX3X2FVPROC)(GLint, GLsizei, GLboolean, con/;"	t	typeref:typename:void (* PFN_PTRC_GLUNIFORMMATRIX3X2FVPROC)(GLint,GLsizei,GLboolean,const GLfloat *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLUNIFORMMATRIX3X4FVPROC)(GLint, GLsizei, GLboolean, con/;"	t	typeref:typename:void (* PFN_PTRC_GLUNIFORMMATRIX3X4FVPROC)(GLint,GLsizei,GLboolean,const GLfloat *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLUNIFORMMATRIX4FVPROC)(GLint, GLsizei, GLboolean, const/;"	t	typeref:typename:void (* PFN_PTRC_GLUNIFORMMATRIX4FVPROC)(GLint,GLsizei,GLboolean,const GLfloat *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLUNIFORMMATRIX4X2FVPROC)(GLint, GLsizei, GLboolean, con/;"	t	typeref:typename:void (* PFN_PTRC_GLUNIFORMMATRIX4X2FVPROC)(GLint,GLsizei,GLboolean,const GLfloat *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLUNIFORMMATRIX4X3FVPROC)(GLint, GLsizei, GLboolean, con/;"	t	typeref:typename:void (* PFN_PTRC_GLUNIFORMMATRIX4X3FVPROC)(GLint,GLsizei,GLboolean,const GLfloat *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLUSEPROGRAMPROC)(GLuint);$/;"	t	typeref:typename:void (* PFN_PTRC_GLUSEPROGRAMPROC)(GLuint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVALIDATEPROGRAMPROC)(GLuint);$/;"	t	typeref:typename:void (* PFN_PTRC_GLVALIDATEPROGRAMPROC)(GLuint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIB1DPROC)(GLuint, GLdouble);$/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIB1DPROC)(GLuint,GLdouble)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIB1DVPROC)(GLuint, const GLdouble *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIB1DVPROC)(GLuint,const GLdouble *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIB1FPROC)(GLuint, GLfloat);$/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIB1FPROC)(GLuint,GLfloat)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIB1FVPROC)(GLuint, const GLfloat *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIB1FVPROC)(GLuint,const GLfloat *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIB1SPROC)(GLuint, GLshort);$/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIB1SPROC)(GLuint,GLshort)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIB1SVPROC)(GLuint, const GLshort *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIB1SVPROC)(GLuint,const GLshort *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIB2DPROC)(GLuint, GLdouble, GLdouble);$/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIB2DPROC)(GLuint,GLdouble,GLdouble)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIB2DVPROC)(GLuint, const GLdouble *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIB2DVPROC)(GLuint,const GLdouble *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIB2FPROC)(GLuint, GLfloat, GLfloat);$/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIB2FPROC)(GLuint,GLfloat,GLfloat)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIB2FVPROC)(GLuint, const GLfloat *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIB2FVPROC)(GLuint,const GLfloat *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIB2SPROC)(GLuint, GLshort, GLshort);$/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIB2SPROC)(GLuint,GLshort,GLshort)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIB2SVPROC)(GLuint, const GLshort *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIB2SVPROC)(GLuint,const GLshort *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIB3DPROC)(GLuint, GLdouble, GLdouble, GLdoub/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIB3DPROC)(GLuint,GLdouble,GLdouble,GLdouble)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIB3DVPROC)(GLuint, const GLdouble *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIB3DVPROC)(GLuint,const GLdouble *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIB3FPROC)(GLuint, GLfloat, GLfloat, GLfloat)/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIB3FPROC)(GLuint,GLfloat,GLfloat,GLfloat)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIB3FVPROC)(GLuint, const GLfloat *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIB3FVPROC)(GLuint,const GLfloat *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIB3SPROC)(GLuint, GLshort, GLshort, GLshort)/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIB3SPROC)(GLuint,GLshort,GLshort,GLshort)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIB3SVPROC)(GLuint, const GLshort *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIB3SVPROC)(GLuint,const GLshort *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIB4BVPROC)(GLuint, const GLbyte *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIB4BVPROC)(GLuint,const GLbyte *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIB4DPROC)(GLuint, GLdouble, GLdouble, GLdoub/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIB4DPROC)(GLuint,GLdouble,GLdouble,GLdouble,GLdouble)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIB4DVPROC)(GLuint, const GLdouble *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIB4DVPROC)(GLuint,const GLdouble *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIB4FPROC)(GLuint, GLfloat, GLfloat, GLfloat,/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIB4FPROC)(GLuint,GLfloat,GLfloat,GLfloat,GLfloat)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIB4FVPROC)(GLuint, const GLfloat *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIB4FVPROC)(GLuint,const GLfloat *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIB4IVPROC)(GLuint, const GLint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIB4IVPROC)(GLuint,const GLint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIB4NBVPROC)(GLuint, const GLbyte *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIB4NBVPROC)(GLuint,const GLbyte *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIB4NIVPROC)(GLuint, const GLint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIB4NIVPROC)(GLuint,const GLint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIB4NSVPROC)(GLuint, const GLshort *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIB4NSVPROC)(GLuint,const GLshort *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIB4NUBPROC)(GLuint, GLubyte, GLubyte, GLubyt/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIB4NUBPROC)(GLuint,GLubyte,GLubyte,GLubyte,GLubyte)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIB4NUBVPROC)(GLuint, const GLubyte *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIB4NUBVPROC)(GLuint,const GLubyte *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIB4NUIVPROC)(GLuint, const GLuint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIB4NUIVPROC)(GLuint,const GLuint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIB4NUSVPROC)(GLuint, const GLushort *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIB4NUSVPROC)(GLuint,const GLushort *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIB4SPROC)(GLuint, GLshort, GLshort, GLshort,/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIB4SPROC)(GLuint,GLshort,GLshort,GLshort,GLshort)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIB4SVPROC)(GLuint, const GLshort *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIB4SVPROC)(GLuint,const GLshort *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIB4UBVPROC)(GLuint, const GLubyte *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIB4UBVPROC)(GLuint,const GLubyte *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIB4UIVPROC)(GLuint, const GLuint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIB4UIVPROC)(GLuint,const GLuint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIB4USVPROC)(GLuint, const GLushort *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIB4USVPROC)(GLuint,const GLushort *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIBDIVISORPROC)(GLuint, GLuint);$/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIBDIVISORPROC)(GLuint,GLuint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIBI1IPROC)(GLuint, GLint);$/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIBI1IPROC)(GLuint,GLint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIBI1IVPROC)(GLuint, const GLint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIBI1IVPROC)(GLuint,const GLint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIBI1UIPROC)(GLuint, GLuint);$/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIBI1UIPROC)(GLuint,GLuint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIBI1UIVPROC)(GLuint, const GLuint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIBI1UIVPROC)(GLuint,const GLuint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIBI2IPROC)(GLuint, GLint, GLint);$/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIBI2IPROC)(GLuint,GLint,GLint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIBI2IVPROC)(GLuint, const GLint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIBI2IVPROC)(GLuint,const GLint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIBI2UIPROC)(GLuint, GLuint, GLuint);$/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIBI2UIPROC)(GLuint,GLuint,GLuint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIBI2UIVPROC)(GLuint, const GLuint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIBI2UIVPROC)(GLuint,const GLuint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIBI3IPROC)(GLuint, GLint, GLint, GLint);$/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIBI3IPROC)(GLuint,GLint,GLint,GLint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIBI3IVPROC)(GLuint, const GLint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIBI3IVPROC)(GLuint,const GLint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIBI3UIPROC)(GLuint, GLuint, GLuint, GLuint);$/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIBI3UIPROC)(GLuint,GLuint,GLuint,GLuint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIBI3UIVPROC)(GLuint, const GLuint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIBI3UIVPROC)(GLuint,const GLuint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIBI4BVPROC)(GLuint, const GLbyte *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIBI4BVPROC)(GLuint,const GLbyte *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIBI4IPROC)(GLuint, GLint, GLint, GLint, GLin/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIBI4IPROC)(GLuint,GLint,GLint,GLint,GLint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIBI4IVPROC)(GLuint, const GLint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIBI4IVPROC)(GLuint,const GLint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIBI4SVPROC)(GLuint, const GLshort *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIBI4SVPROC)(GLuint,const GLshort *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIBI4UBVPROC)(GLuint, const GLubyte *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIBI4UBVPROC)(GLuint,const GLubyte *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIBI4UIPROC)(GLuint, GLuint, GLuint, GLuint, /;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIBI4UIPROC)(GLuint,GLuint,GLuint,GLuint,GLuint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIBI4UIVPROC)(GLuint, const GLuint *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIBI4UIVPROC)(GLuint,const GLuint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIBI4USVPROC)(GLuint, const GLushort *);$/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIBI4USVPROC)(GLuint,const GLushort *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIBIPOINTERPROC)(GLuint, GLint, GLenum, GLsiz/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIBIPOINTERPROC)(GLuint,GLint,GLenum,GLsizei,const void *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIBP1UIPROC)(GLuint, GLenum, GLboolean, GLuin/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIBP1UIPROC)(GLuint,GLenum,GLboolean,GLuint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIBP1UIVPROC)(GLuint, GLenum, GLboolean, cons/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIBP1UIVPROC)(GLuint,GLenum,GLboolean,const GLuint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIBP2UIPROC)(GLuint, GLenum, GLboolean, GLuin/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIBP2UIPROC)(GLuint,GLenum,GLboolean,GLuint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIBP2UIVPROC)(GLuint, GLenum, GLboolean, cons/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIBP2UIVPROC)(GLuint,GLenum,GLboolean,const GLuint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIBP3UIPROC)(GLuint, GLenum, GLboolean, GLuin/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIBP3UIPROC)(GLuint,GLenum,GLboolean,GLuint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIBP3UIVPROC)(GLuint, GLenum, GLboolean, cons/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIBP3UIVPROC)(GLuint,GLenum,GLboolean,const GLuint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIBP4UIPROC)(GLuint, GLenum, GLboolean, GLuin/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIBP4UIPROC)(GLuint,GLenum,GLboolean,GLuint)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIBP4UIVPROC)(GLuint, GLenum, GLboolean, cons/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIBP4UIVPROC)(GLuint,GLenum,GLboolean,const GLuint *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVERTEXATTRIBPOINTERPROC)(GLuint, GLint, GLenum, GLbool/;"	t	typeref:typename:void (* PFN_PTRC_GLVERTEXATTRIBPOINTERPROC)(GLuint,GLint,GLenum,GLboolean,GLsizei,const void *)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLVIEWPORTPROC)(GLint, GLint, GLsizei, GLsizei);$/;"	t	typeref:typename:void (* PFN_PTRC_GLVIEWPORTPROC)(GLint,GLint,GLsizei,GLsizei)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void (CODEGEN_FUNCPTR *PFN_PTRC_GLWAITSYNCPROC)(GLsync, GLbitfield, GLuint64);$/;"	t	typeref:typename:void (* PFN_PTRC_GLWAITSYNCPROC)(GLsync,GLbitfield,GLuint64)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void * (CODEGEN_FUNCPTR *PFN_PTRC_GLMAPBUFFERPROC)(GLenum, GLenum);$/;"	t	typeref:typename:void * (* PFN_PTRC_GLMAPBUFFERPROC)(GLenum,GLenum)	file:
CODEGEN_FUNCPTR	.\\src\\gl_core_3_3.cpp	/^typedef void * (CODEGEN_FUNCPTR *PFN_PTRC_GLMAPBUFFERRANGEPROC)(GLenum, GLintptr, GLsizeiptr, GL/;"	t	typeref:typename:void * (* PFN_PTRC_GLMAPBUFFERRANGEPROC)(GLenum,GLintptr,GLsizeiptr,GLbitfield)	file:
CODEGEN_REMOVE_FUNCPTR	.\\include\\gl_core_3_3.h	/^	#define CODEGEN_REMOVE_FUNCPTR$/;"	d
CONST_FT_RFORK_RULE_ARRAY_BEGIN	.\\include\\freetype\\internal\\ftrfork.h	/^#define CONST_FT_RFORK_RULE_ARRAY_BEGIN(/;"	d
CONST_FT_RFORK_RULE_ARRAY_END	.\\include\\freetype\\internal\\ftrfork.h	/^#define CONST_FT_RFORK_RULE_ARRAY_END /;"	d
CONST_FT_RFORK_RULE_ARRAY_ENTRY	.\\include\\freetype\\internal\\ftrfork.h	/^#define CONST_FT_RFORK_RULE_ARRAY_ENTRY(/;"	d
CURL	.\\include\\curl\\curl.h	/^typedef struct Curl_easy CURL;$/;"	t	typeref:struct:Curl_easy
CURLAUTH_ANY	.\\include\\curl\\curl.h	/^#define CURLAUTH_ANY /;"	d
CURLAUTH_ANYSAFE	.\\include\\curl\\curl.h	/^#define CURLAUTH_ANYSAFE /;"	d
CURLAUTH_BASIC	.\\include\\curl\\curl.h	/^#define CURLAUTH_BASIC /;"	d
CURLAUTH_DIGEST	.\\include\\curl\\curl.h	/^#define CURLAUTH_DIGEST /;"	d
CURLAUTH_DIGEST_IE	.\\include\\curl\\curl.h	/^#define CURLAUTH_DIGEST_IE /;"	d
CURLAUTH_GSSNEGOTIATE	.\\include\\curl\\curl.h	/^#define CURLAUTH_GSSNEGOTIATE /;"	d
CURLAUTH_NEGOTIATE	.\\include\\curl\\curl.h	/^#define CURLAUTH_NEGOTIATE /;"	d
CURLAUTH_NONE	.\\include\\curl\\curl.h	/^#define CURLAUTH_NONE /;"	d
CURLAUTH_NTLM	.\\include\\curl\\curl.h	/^#define CURLAUTH_NTLM /;"	d
CURLAUTH_NTLM_WB	.\\include\\curl\\curl.h	/^#define CURLAUTH_NTLM_WB /;"	d
CURLAUTH_ONLY	.\\include\\curl\\curl.h	/^#define CURLAUTH_ONLY /;"	d
CURLCLOSEPOLICY_CALLBACK	.\\include\\curl\\curl.h	/^  CURLCLOSEPOLICY_CALLBACK,$/;"	e	enum:__anon529bf04d1703
CURLCLOSEPOLICY_LAST	.\\include\\curl\\curl.h	/^  CURLCLOSEPOLICY_LAST \/* last, never use this *\/$/;"	e	enum:__anon529bf04d1703
CURLCLOSEPOLICY_LEAST_RECENTLY_USED	.\\include\\curl\\curl.h	/^  CURLCLOSEPOLICY_LEAST_RECENTLY_USED,$/;"	e	enum:__anon529bf04d1703
CURLCLOSEPOLICY_LEAST_TRAFFIC	.\\include\\curl\\curl.h	/^  CURLCLOSEPOLICY_LEAST_TRAFFIC,$/;"	e	enum:__anon529bf04d1703
CURLCLOSEPOLICY_NONE	.\\include\\curl\\curl.h	/^  CURLCLOSEPOLICY_NONE, \/* first, never use this *\/$/;"	e	enum:__anon529bf04d1703
CURLCLOSEPOLICY_OLDEST	.\\include\\curl\\curl.h	/^  CURLCLOSEPOLICY_OLDEST,$/;"	e	enum:__anon529bf04d1703
CURLCLOSEPOLICY_SLOWEST	.\\include\\curl\\curl.h	/^  CURLCLOSEPOLICY_SLOWEST,$/;"	e	enum:__anon529bf04d1703
CURLE_ABORTED_BY_CALLBACK	.\\include\\curl\\curl.h	/^  CURLE_ABORTED_BY_CALLBACK,     \/* 42 *\/$/;"	e	enum:__anon529bf04d0703
CURLE_AGAIN	.\\include\\curl\\curl.h	/^  CURLE_AGAIN,                   \/* 81 - socket is not ready for send\/recv,$/;"	e	enum:__anon529bf04d0703
CURLE_ALREADY_COMPLETE	.\\include\\curl\\curl.h	/^#define CURLE_ALREADY_COMPLETE /;"	d
CURLE_BAD_CALLING_ORDER	.\\include\\curl\\curl.h	/^#define CURLE_BAD_CALLING_ORDER /;"	d
CURLE_BAD_CONTENT_ENCODING	.\\include\\curl\\curl.h	/^  CURLE_BAD_CONTENT_ENCODING,    \/* 61 - Unrecognized\/bad encoding *\/$/;"	e	enum:__anon529bf04d0703
CURLE_BAD_DOWNLOAD_RESUME	.\\include\\curl\\curl.h	/^  CURLE_BAD_DOWNLOAD_RESUME,     \/* 36 - couldn't resume download *\/$/;"	e	enum:__anon529bf04d0703
CURLE_BAD_FUNCTION_ARGUMENT	.\\include\\curl\\curl.h	/^  CURLE_BAD_FUNCTION_ARGUMENT,   \/* 43 *\/$/;"	e	enum:__anon529bf04d0703
CURLE_BAD_PASSWORD_ENTERED	.\\include\\curl\\curl.h	/^#define CURLE_BAD_PASSWORD_ENTERED /;"	d
CURLE_CHUNK_FAILED	.\\include\\curl\\curl.h	/^  CURLE_CHUNK_FAILED,            \/* 88 - chunk callback reported error *\/$/;"	e	enum:__anon529bf04d0703
CURLE_CONV_FAILED	.\\include\\curl\\curl.h	/^  CURLE_CONV_FAILED,             \/* 75 - conversion failed *\/$/;"	e	enum:__anon529bf04d0703
CURLE_CONV_REQD	.\\include\\curl\\curl.h	/^  CURLE_CONV_REQD,               \/* 76 - caller must register conversion$/;"	e	enum:__anon529bf04d0703
CURLE_COULDNT_CONNECT	.\\include\\curl\\curl.h	/^  CURLE_COULDNT_CONNECT,         \/* 7 *\/$/;"	e	enum:__anon529bf04d0703
CURLE_COULDNT_RESOLVE_HOST	.\\include\\curl\\curl.h	/^  CURLE_COULDNT_RESOLVE_HOST,    \/* 6 *\/$/;"	e	enum:__anon529bf04d0703
CURLE_COULDNT_RESOLVE_PROXY	.\\include\\curl\\curl.h	/^  CURLE_COULDNT_RESOLVE_PROXY,   \/* 5 *\/$/;"	e	enum:__anon529bf04d0703
CURLE_FAILED_INIT	.\\include\\curl\\curl.h	/^  CURLE_FAILED_INIT,             \/* 2 *\/$/;"	e	enum:__anon529bf04d0703
CURLE_FILESIZE_EXCEEDED	.\\include\\curl\\curl.h	/^  CURLE_FILESIZE_EXCEEDED,       \/* 63 - Maximum file size exceeded *\/$/;"	e	enum:__anon529bf04d0703
CURLE_FILE_COULDNT_READ_FILE	.\\include\\curl\\curl.h	/^  CURLE_FILE_COULDNT_READ_FILE,  \/* 37 *\/$/;"	e	enum:__anon529bf04d0703
CURLE_FTP_ACCEPT_FAILED	.\\include\\curl\\curl.h	/^  CURLE_FTP_ACCEPT_FAILED,       \/* 10 - [was obsoleted in April 2006 for$/;"	e	enum:__anon529bf04d0703
CURLE_FTP_ACCEPT_TIMEOUT	.\\include\\curl\\curl.h	/^  CURLE_FTP_ACCEPT_TIMEOUT,      \/* 12 - timeout occurred accepting server$/;"	e	enum:__anon529bf04d0703
CURLE_FTP_ACCESS_DENIED	.\\include\\curl\\curl.h	/^#define CURLE_FTP_ACCESS_DENIED /;"	d
CURLE_FTP_BAD_DOWNLOAD_RESUME	.\\include\\curl\\curl.h	/^#define CURLE_FTP_BAD_DOWNLOAD_RESUME /;"	d
CURLE_FTP_BAD_FILE_LIST	.\\include\\curl\\curl.h	/^  CURLE_FTP_BAD_FILE_LIST,       \/* 87 - unable to parse FTP file list *\/$/;"	e	enum:__anon529bf04d0703
CURLE_FTP_CANT_GET_HOST	.\\include\\curl\\curl.h	/^  CURLE_FTP_CANT_GET_HOST,       \/* 15 *\/$/;"	e	enum:__anon529bf04d0703
CURLE_FTP_CANT_RECONNECT	.\\include\\curl\\curl.h	/^#define CURLE_FTP_CANT_RECONNECT /;"	d
CURLE_FTP_COULDNT_GET_SIZE	.\\include\\curl\\curl.h	/^#define CURLE_FTP_COULDNT_GET_SIZE /;"	d
CURLE_FTP_COULDNT_RETR_FILE	.\\include\\curl\\curl.h	/^  CURLE_FTP_COULDNT_RETR_FILE,   \/* 19 *\/$/;"	e	enum:__anon529bf04d0703
CURLE_FTP_COULDNT_SET_ASCII	.\\include\\curl\\curl.h	/^#define CURLE_FTP_COULDNT_SET_ASCII /;"	d
CURLE_FTP_COULDNT_SET_BINARY	.\\include\\curl\\curl.h	/^#define CURLE_FTP_COULDNT_SET_BINARY /;"	d
CURLE_FTP_COULDNT_SET_TYPE	.\\include\\curl\\curl.h	/^  CURLE_FTP_COULDNT_SET_TYPE,    \/* 17 *\/$/;"	e	enum:__anon529bf04d0703
CURLE_FTP_COULDNT_STOR_FILE	.\\include\\curl\\curl.h	/^#define CURLE_FTP_COULDNT_STOR_FILE /;"	d
CURLE_FTP_COULDNT_USE_REST	.\\include\\curl\\curl.h	/^  CURLE_FTP_COULDNT_USE_REST,    \/* 31 - the REST command failed *\/$/;"	e	enum:__anon529bf04d0703
CURLE_FTP_PARTIAL_FILE	.\\include\\curl\\curl.h	/^#define CURLE_FTP_PARTIAL_FILE /;"	d
CURLE_FTP_PORT_FAILED	.\\include\\curl\\curl.h	/^  CURLE_FTP_PORT_FAILED,         \/* 30 - FTP PORT operation failed *\/$/;"	e	enum:__anon529bf04d0703
CURLE_FTP_PRET_FAILED	.\\include\\curl\\curl.h	/^  CURLE_FTP_PRET_FAILED,         \/* 84 - a PRET command failed *\/$/;"	e	enum:__anon529bf04d0703
CURLE_FTP_QUOTE_ERROR	.\\include\\curl\\curl.h	/^#define CURLE_FTP_QUOTE_ERROR /;"	d
CURLE_FTP_SSL_FAILED	.\\include\\curl\\curl.h	/^#define CURLE_FTP_SSL_FAILED /;"	d
CURLE_FTP_USER_PASSWORD_INCORRECT	.\\include\\curl\\curl.h	/^#define CURLE_FTP_USER_PASSWORD_INCORRECT /;"	d
CURLE_FTP_WEIRD_227_FORMAT	.\\include\\curl\\curl.h	/^  CURLE_FTP_WEIRD_227_FORMAT,    \/* 14 *\/$/;"	e	enum:__anon529bf04d0703
CURLE_FTP_WEIRD_PASS_REPLY	.\\include\\curl\\curl.h	/^  CURLE_FTP_WEIRD_PASS_REPLY,    \/* 11 *\/$/;"	e	enum:__anon529bf04d0703
CURLE_FTP_WEIRD_PASV_REPLY	.\\include\\curl\\curl.h	/^  CURLE_FTP_WEIRD_PASV_REPLY,    \/* 13 *\/$/;"	e	enum:__anon529bf04d0703
CURLE_FTP_WEIRD_SERVER_REPLY	.\\include\\curl\\curl.h	/^  CURLE_FTP_WEIRD_SERVER_REPLY,  \/* 8 *\/$/;"	e	enum:__anon529bf04d0703
CURLE_FTP_WEIRD_USER_REPLY	.\\include\\curl\\curl.h	/^#define CURLE_FTP_WEIRD_USER_REPLY /;"	d
CURLE_FTP_WRITE_ERROR	.\\include\\curl\\curl.h	/^#define CURLE_FTP_WRITE_ERROR /;"	d
CURLE_FUNCTION_NOT_FOUND	.\\include\\curl\\curl.h	/^  CURLE_FUNCTION_NOT_FOUND,      \/* 41 *\/$/;"	e	enum:__anon529bf04d0703
CURLE_GOT_NOTHING	.\\include\\curl\\curl.h	/^  CURLE_GOT_NOTHING,             \/* 52 - when this is a specific error *\/$/;"	e	enum:__anon529bf04d0703
CURLE_HTTP2	.\\include\\curl\\curl.h	/^  CURLE_HTTP2,                   \/* 16 - A problem in the http2 framing layer.$/;"	e	enum:__anon529bf04d0703
CURLE_HTTP2_STREAM	.\\include\\curl\\curl.h	/^  CURLE_HTTP2_STREAM,            \/* 92 - stream error in HTTP\/2 framing layer$/;"	e	enum:__anon529bf04d0703
CURLE_HTTP_NOT_FOUND	.\\include\\curl\\curl.h	/^#define CURLE_HTTP_NOT_FOUND /;"	d
CURLE_HTTP_PORT_FAILED	.\\include\\curl\\curl.h	/^#define CURLE_HTTP_PORT_FAILED /;"	d
CURLE_HTTP_POST_ERROR	.\\include\\curl\\curl.h	/^  CURLE_HTTP_POST_ERROR,         \/* 34 *\/$/;"	e	enum:__anon529bf04d0703
CURLE_HTTP_RANGE_ERROR	.\\include\\curl\\curl.h	/^#define CURLE_HTTP_RANGE_ERROR /;"	d
CURLE_HTTP_RETURNED_ERROR	.\\include\\curl\\curl.h	/^  CURLE_HTTP_RETURNED_ERROR,     \/* 22 *\/$/;"	e	enum:__anon529bf04d0703
CURLE_INTERFACE_FAILED	.\\include\\curl\\curl.h	/^  CURLE_INTERFACE_FAILED,        \/* 45 - CURLOPT_INTERFACE failed *\/$/;"	e	enum:__anon529bf04d0703
CURLE_LDAP_CANNOT_BIND	.\\include\\curl\\curl.h	/^  CURLE_LDAP_CANNOT_BIND,        \/* 38 *\/$/;"	e	enum:__anon529bf04d0703
CURLE_LDAP_INVALID_URL	.\\include\\curl\\curl.h	/^  CURLE_LDAP_INVALID_URL,        \/* 62 - Invalid LDAP URL *\/$/;"	e	enum:__anon529bf04d0703
CURLE_LDAP_SEARCH_FAILED	.\\include\\curl\\curl.h	/^  CURLE_LDAP_SEARCH_FAILED,      \/* 39 *\/$/;"	e	enum:__anon529bf04d0703
CURLE_LIBRARY_NOT_FOUND	.\\include\\curl\\curl.h	/^#define CURLE_LIBRARY_NOT_FOUND /;"	d
CURLE_LOGIN_DENIED	.\\include\\curl\\curl.h	/^  CURLE_LOGIN_DENIED,            \/* 67 - user, password or similar was not$/;"	e	enum:__anon529bf04d0703
CURLE_MALFORMAT_USER	.\\include\\curl\\curl.h	/^#define CURLE_MALFORMAT_USER /;"	d
CURLE_NOT_BUILT_IN	.\\include\\curl\\curl.h	/^  CURLE_NOT_BUILT_IN,            \/* 4 - [was obsoleted in August 2007 for$/;"	e	enum:__anon529bf04d0703
CURLE_NO_CONNECTION_AVAILABLE	.\\include\\curl\\curl.h	/^  CURLE_NO_CONNECTION_AVAILABLE, \/* 89 - No connection available, the$/;"	e	enum:__anon529bf04d0703
CURLE_OBSOLETE	.\\include\\curl\\curl.h	/^#define CURLE_OBSOLETE /;"	d
CURLE_OBSOLETE10	.\\include\\curl\\curl.h	/^#define CURLE_OBSOLETE10 /;"	d
CURLE_OBSOLETE12	.\\include\\curl\\curl.h	/^#define CURLE_OBSOLETE12 /;"	d
CURLE_OBSOLETE16	.\\include\\curl\\curl.h	/^#define CURLE_OBSOLETE16 /;"	d
CURLE_OBSOLETE20	.\\include\\curl\\curl.h	/^  CURLE_OBSOLETE20,              \/* 20 - NOT USED *\/$/;"	e	enum:__anon529bf04d0703
CURLE_OBSOLETE24	.\\include\\curl\\curl.h	/^  CURLE_OBSOLETE24,              \/* 24 - NOT USED *\/$/;"	e	enum:__anon529bf04d0703
CURLE_OBSOLETE29	.\\include\\curl\\curl.h	/^  CURLE_OBSOLETE29,              \/* 29 - NOT USED *\/$/;"	e	enum:__anon529bf04d0703
CURLE_OBSOLETE32	.\\include\\curl\\curl.h	/^  CURLE_OBSOLETE32,              \/* 32 - NOT USED *\/$/;"	e	enum:__anon529bf04d0703
CURLE_OBSOLETE40	.\\include\\curl\\curl.h	/^  CURLE_OBSOLETE40,              \/* 40 - NOT USED *\/$/;"	e	enum:__anon529bf04d0703
CURLE_OBSOLETE44	.\\include\\curl\\curl.h	/^  CURLE_OBSOLETE44,              \/* 44 - NOT USED *\/$/;"	e	enum:__anon529bf04d0703
CURLE_OBSOLETE46	.\\include\\curl\\curl.h	/^  CURLE_OBSOLETE46,              \/* 46 - NOT USED *\/$/;"	e	enum:__anon529bf04d0703
CURLE_OBSOLETE50	.\\include\\curl\\curl.h	/^  CURLE_OBSOLETE50,              \/* 50 - NOT USED *\/$/;"	e	enum:__anon529bf04d0703
CURLE_OBSOLETE57	.\\include\\curl\\curl.h	/^  CURLE_OBSOLETE57,              \/* 57 - NOT IN USE *\/$/;"	e	enum:__anon529bf04d0703
CURLE_OK	.\\include\\curl\\curl.h	/^  CURLE_OK = 0,$/;"	e	enum:__anon529bf04d0703
CURLE_OPERATION_TIMEDOUT	.\\include\\curl\\curl.h	/^  CURLE_OPERATION_TIMEDOUT,      \/* 28 - the timeout time was reached *\/$/;"	e	enum:__anon529bf04d0703
CURLE_OPERATION_TIMEOUTED	.\\include\\curl\\curl.h	/^#define CURLE_OPERATION_TIMEOUTED /;"	d
CURLE_OUT_OF_MEMORY	.\\include\\curl\\curl.h	/^  CURLE_OUT_OF_MEMORY,           \/* 27 *\/$/;"	e	enum:__anon529bf04d0703
CURLE_PARTIAL_FILE	.\\include\\curl\\curl.h	/^  CURLE_PARTIAL_FILE,            \/* 18 *\/$/;"	e	enum:__anon529bf04d0703
CURLE_PEER_FAILED_VERIFICATION	.\\include\\curl\\curl.h	/^  CURLE_PEER_FAILED_VERIFICATION, \/* 51 - peer's certificate or fingerprint$/;"	e	enum:__anon529bf04d0703
CURLE_QUOTE_ERROR	.\\include\\curl\\curl.h	/^  CURLE_QUOTE_ERROR,             \/* 21 - quote command failure *\/$/;"	e	enum:__anon529bf04d0703
CURLE_RANGE_ERROR	.\\include\\curl\\curl.h	/^  CURLE_RANGE_ERROR,             \/* 33 - RANGE "command" didn't work *\/$/;"	e	enum:__anon529bf04d0703
CURLE_READ_ERROR	.\\include\\curl\\curl.h	/^  CURLE_READ_ERROR,              \/* 26 - couldn't open\/read from file *\/$/;"	e	enum:__anon529bf04d0703
CURLE_RECV_ERROR	.\\include\\curl\\curl.h	/^  CURLE_RECV_ERROR,              \/* 56 - failure in receiving network data *\/$/;"	e	enum:__anon529bf04d0703
CURLE_REMOTE_ACCESS_DENIED	.\\include\\curl\\curl.h	/^  CURLE_REMOTE_ACCESS_DENIED,    \/* 9 a service was denied by the server$/;"	e	enum:__anon529bf04d0703
CURLE_REMOTE_DISK_FULL	.\\include\\curl\\curl.h	/^  CURLE_REMOTE_DISK_FULL,        \/* 70 - out of disk space on server *\/$/;"	e	enum:__anon529bf04d0703
CURLE_REMOTE_FILE_EXISTS	.\\include\\curl\\curl.h	/^  CURLE_REMOTE_FILE_EXISTS,      \/* 73 - File already exists *\/$/;"	e	enum:__anon529bf04d0703
CURLE_REMOTE_FILE_NOT_FOUND	.\\include\\curl\\curl.h	/^  CURLE_REMOTE_FILE_NOT_FOUND,   \/* 78 - remote file not found *\/$/;"	e	enum:__anon529bf04d0703
CURLE_RTSP_CSEQ_ERROR	.\\include\\curl\\curl.h	/^  CURLE_RTSP_CSEQ_ERROR,         \/* 85 - mismatch of RTSP CSeq numbers *\/$/;"	e	enum:__anon529bf04d0703
CURLE_RTSP_SESSION_ERROR	.\\include\\curl\\curl.h	/^  CURLE_RTSP_SESSION_ERROR,      \/* 86 - mismatch of RTSP Session Ids *\/$/;"	e	enum:__anon529bf04d0703
CURLE_SEND_ERROR	.\\include\\curl\\curl.h	/^  CURLE_SEND_ERROR,              \/* 55 - failed sending network data *\/$/;"	e	enum:__anon529bf04d0703
CURLE_SEND_FAIL_REWIND	.\\include\\curl\\curl.h	/^  CURLE_SEND_FAIL_REWIND,        \/* 65 - Sending the data requires a rewind$/;"	e	enum:__anon529bf04d0703
CURLE_SHARE_IN_USE	.\\include\\curl\\curl.h	/^#define CURLE_SHARE_IN_USE /;"	d
CURLE_SSH	.\\include\\curl\\curl.h	/^  CURLE_SSH,                     \/* 79 - error from the SSH layer, somewhat$/;"	e	enum:__anon529bf04d0703
CURLE_SSL_CACERT	.\\include\\curl\\curl.h	/^  CURLE_SSL_CACERT,              \/* 60 - problem with the CA cert (path?) *\/$/;"	e	enum:__anon529bf04d0703
CURLE_SSL_CACERT_BADFILE	.\\include\\curl\\curl.h	/^  CURLE_SSL_CACERT_BADFILE,      \/* 77 - could not load CACERT file, missing$/;"	e	enum:__anon529bf04d0703
CURLE_SSL_CERTPROBLEM	.\\include\\curl\\curl.h	/^  CURLE_SSL_CERTPROBLEM,         \/* 58 - problem with the local certificate *\/$/;"	e	enum:__anon529bf04d0703
CURLE_SSL_CIPHER	.\\include\\curl\\curl.h	/^  CURLE_SSL_CIPHER,              \/* 59 - couldn't use specified cipher *\/$/;"	e	enum:__anon529bf04d0703
CURLE_SSL_CONNECT_ERROR	.\\include\\curl\\curl.h	/^  CURLE_SSL_CONNECT_ERROR,       \/* 35 - wrong when connecting with SSL *\/$/;"	e	enum:__anon529bf04d0703
CURLE_SSL_CRL_BADFILE	.\\include\\curl\\curl.h	/^  CURLE_SSL_CRL_BADFILE,         \/* 82 - could not load CRL file, missing or$/;"	e	enum:__anon529bf04d0703
CURLE_SSL_ENGINE_INITFAILED	.\\include\\curl\\curl.h	/^  CURLE_SSL_ENGINE_INITFAILED,   \/* 66 - failed to initialise ENGINE *\/$/;"	e	enum:__anon529bf04d0703
CURLE_SSL_ENGINE_NOTFOUND	.\\include\\curl\\curl.h	/^  CURLE_SSL_ENGINE_NOTFOUND,     \/* 53 - SSL crypto engine not found *\/$/;"	e	enum:__anon529bf04d0703
CURLE_SSL_ENGINE_SETFAILED	.\\include\\curl\\curl.h	/^  CURLE_SSL_ENGINE_SETFAILED,    \/* 54 - can not set SSL crypto engine as$/;"	e	enum:__anon529bf04d0703
CURLE_SSL_INVALIDCERTSTATUS	.\\include\\curl\\curl.h	/^  CURLE_SSL_INVALIDCERTSTATUS,   \/* 91 - invalid certificate status *\/$/;"	e	enum:__anon529bf04d0703
CURLE_SSL_ISSUER_ERROR	.\\include\\curl\\curl.h	/^  CURLE_SSL_ISSUER_ERROR,        \/* 83 - Issuer check failed.  (Added in$/;"	e	enum:__anon529bf04d0703
CURLE_SSL_PEER_CERTIFICATE	.\\include\\curl\\curl.h	/^#define CURLE_SSL_PEER_CERTIFICATE /;"	d
CURLE_SSL_PINNEDPUBKEYNOTMATCH	.\\include\\curl\\curl.h	/^  CURLE_SSL_PINNEDPUBKEYNOTMATCH, \/* 90 - specified pinned public key did not$/;"	e	enum:__anon529bf04d0703
CURLE_SSL_SHUTDOWN_FAILED	.\\include\\curl\\curl.h	/^  CURLE_SSL_SHUTDOWN_FAILED,     \/* 80 - Failed to shut down the SSL$/;"	e	enum:__anon529bf04d0703
CURLE_TELNET_OPTION_SYNTAX	.\\include\\curl\\curl.h	/^  CURLE_TELNET_OPTION_SYNTAX,    \/* 49 - Malformed telnet option *\/$/;"	e	enum:__anon529bf04d0703
CURLE_TFTP_DISKFULL	.\\include\\curl\\curl.h	/^#define CURLE_TFTP_DISKFULL /;"	d
CURLE_TFTP_EXISTS	.\\include\\curl\\curl.h	/^#define CURLE_TFTP_EXISTS /;"	d
CURLE_TFTP_ILLEGAL	.\\include\\curl\\curl.h	/^  CURLE_TFTP_ILLEGAL,            \/* 71 - Illegal TFTP operation *\/$/;"	e	enum:__anon529bf04d0703
CURLE_TFTP_NOSUCHUSER	.\\include\\curl\\curl.h	/^  CURLE_TFTP_NOSUCHUSER,         \/* 74 - No such user *\/$/;"	e	enum:__anon529bf04d0703
CURLE_TFTP_NOTFOUND	.\\include\\curl\\curl.h	/^  CURLE_TFTP_NOTFOUND,           \/* 68 - file not found on server *\/$/;"	e	enum:__anon529bf04d0703
CURLE_TFTP_PERM	.\\include\\curl\\curl.h	/^  CURLE_TFTP_PERM,               \/* 69 - permission problem on server *\/$/;"	e	enum:__anon529bf04d0703
CURLE_TFTP_UNKNOWNID	.\\include\\curl\\curl.h	/^  CURLE_TFTP_UNKNOWNID,          \/* 72 - Unknown transfer ID *\/$/;"	e	enum:__anon529bf04d0703
CURLE_TOO_MANY_REDIRECTS	.\\include\\curl\\curl.h	/^  CURLE_TOO_MANY_REDIRECTS,      \/* 47 - catch endless re-direct loops *\/$/;"	e	enum:__anon529bf04d0703
CURLE_UNKNOWN_OPTION	.\\include\\curl\\curl.h	/^  CURLE_UNKNOWN_OPTION,          \/* 48 - User specified an unknown option *\/$/;"	e	enum:__anon529bf04d0703
CURLE_UNKNOWN_TELNET_OPTION	.\\include\\curl\\curl.h	/^#define CURLE_UNKNOWN_TELNET_OPTION /;"	d
CURLE_UNSUPPORTED_PROTOCOL	.\\include\\curl\\curl.h	/^  CURLE_UNSUPPORTED_PROTOCOL,    \/* 1 *\/$/;"	e	enum:__anon529bf04d0703
CURLE_UPLOAD_FAILED	.\\include\\curl\\curl.h	/^  CURLE_UPLOAD_FAILED,           \/* 25 - failed upload "command" *\/$/;"	e	enum:__anon529bf04d0703
CURLE_URL_MALFORMAT	.\\include\\curl\\curl.h	/^  CURLE_URL_MALFORMAT,           \/* 3 *\/$/;"	e	enum:__anon529bf04d0703
CURLE_URL_MALFORMAT_USER	.\\include\\curl\\curl.h	/^#define CURLE_URL_MALFORMAT_USER /;"	d
CURLE_USE_SSL_FAILED	.\\include\\curl\\curl.h	/^  CURLE_USE_SSL_FAILED,          \/* 64 - Requested FTP SSL level failed *\/$/;"	e	enum:__anon529bf04d0703
CURLE_WRITE_ERROR	.\\include\\curl\\curl.h	/^  CURLE_WRITE_ERROR,             \/* 23 *\/$/;"	e	enum:__anon529bf04d0703
CURLFILETYPE_DEVICE_BLOCK	.\\include\\curl\\curl.h	/^  CURLFILETYPE_DEVICE_BLOCK,$/;"	e	enum:__anon529bf04d0103
CURLFILETYPE_DEVICE_CHAR	.\\include\\curl\\curl.h	/^  CURLFILETYPE_DEVICE_CHAR,$/;"	e	enum:__anon529bf04d0103
CURLFILETYPE_DIRECTORY	.\\include\\curl\\curl.h	/^  CURLFILETYPE_DIRECTORY,$/;"	e	enum:__anon529bf04d0103
CURLFILETYPE_DOOR	.\\include\\curl\\curl.h	/^  CURLFILETYPE_DOOR, \/* is possible only on Sun Solaris now *\/$/;"	e	enum:__anon529bf04d0103
CURLFILETYPE_FILE	.\\include\\curl\\curl.h	/^  CURLFILETYPE_FILE = 0,$/;"	e	enum:__anon529bf04d0103
CURLFILETYPE_NAMEDPIPE	.\\include\\curl\\curl.h	/^  CURLFILETYPE_NAMEDPIPE,$/;"	e	enum:__anon529bf04d0103
CURLFILETYPE_SOCKET	.\\include\\curl\\curl.h	/^  CURLFILETYPE_SOCKET,$/;"	e	enum:__anon529bf04d0103
CURLFILETYPE_SYMLINK	.\\include\\curl\\curl.h	/^  CURLFILETYPE_SYMLINK,$/;"	e	enum:__anon529bf04d0103
CURLFILETYPE_UNKNOWN	.\\include\\curl\\curl.h	/^  CURLFILETYPE_UNKNOWN \/* should never occur *\/$/;"	e	enum:__anon529bf04d0103
CURLFINFOFLAG_KNOWN_FILENAME	.\\include\\curl\\curl.h	/^#define CURLFINFOFLAG_KNOWN_FILENAME /;"	d
CURLFINFOFLAG_KNOWN_FILETYPE	.\\include\\curl\\curl.h	/^#define CURLFINFOFLAG_KNOWN_FILETYPE /;"	d
CURLFINFOFLAG_KNOWN_GID	.\\include\\curl\\curl.h	/^#define CURLFINFOFLAG_KNOWN_GID /;"	d
CURLFINFOFLAG_KNOWN_HLINKCOUNT	.\\include\\curl\\curl.h	/^#define CURLFINFOFLAG_KNOWN_HLINKCOUNT /;"	d
CURLFINFOFLAG_KNOWN_PERM	.\\include\\curl\\curl.h	/^#define CURLFINFOFLAG_KNOWN_PERM /;"	d
CURLFINFOFLAG_KNOWN_SIZE	.\\include\\curl\\curl.h	/^#define CURLFINFOFLAG_KNOWN_SIZE /;"	d
CURLFINFOFLAG_KNOWN_TIME	.\\include\\curl\\curl.h	/^#define CURLFINFOFLAG_KNOWN_TIME /;"	d
CURLFINFOFLAG_KNOWN_UID	.\\include\\curl\\curl.h	/^#define CURLFINFOFLAG_KNOWN_UID /;"	d
CURLFORM_LASTENTRY	.\\include\\curl\\curl.h	/^  CURLFORM_LASTENTRY \/* the last unused *\/$/;"	e	enum:__anon529bf04d1303
CURLFORMcode	.\\include\\curl\\curl.h	/^} CURLFORMcode;$/;"	t	typeref:enum:__anon529bf04d1403
CURLFTPAUTH_DEFAULT	.\\include\\curl\\curl.h	/^  CURLFTPAUTH_DEFAULT, \/* let libcurl decide *\/$/;"	e	enum:__anon529bf04d0b03
CURLFTPAUTH_LAST	.\\include\\curl\\curl.h	/^  CURLFTPAUTH_LAST \/* not an option, never use *\/$/;"	e	enum:__anon529bf04d0b03
CURLFTPAUTH_SSL	.\\include\\curl\\curl.h	/^  CURLFTPAUTH_SSL,     \/* use "AUTH SSL" *\/$/;"	e	enum:__anon529bf04d0b03
CURLFTPAUTH_TLS	.\\include\\curl\\curl.h	/^  CURLFTPAUTH_TLS,     \/* use "AUTH TLS" *\/$/;"	e	enum:__anon529bf04d0b03
CURLFTPMETHOD_DEFAULT	.\\include\\curl\\curl.h	/^  CURLFTPMETHOD_DEFAULT,   \/* let libcurl pick *\/$/;"	e	enum:__anon529bf04d0d03
CURLFTPMETHOD_LAST	.\\include\\curl\\curl.h	/^  CURLFTPMETHOD_LAST       \/* not an option, never use *\/$/;"	e	enum:__anon529bf04d0d03
CURLFTPMETHOD_MULTICWD	.\\include\\curl\\curl.h	/^  CURLFTPMETHOD_MULTICWD,  \/* single CWD operation for each path part *\/$/;"	e	enum:__anon529bf04d0d03
CURLFTPMETHOD_NOCWD	.\\include\\curl\\curl.h	/^  CURLFTPMETHOD_NOCWD,     \/* no CWD at all *\/$/;"	e	enum:__anon529bf04d0d03
CURLFTPMETHOD_SINGLECWD	.\\include\\curl\\curl.h	/^  CURLFTPMETHOD_SINGLECWD, \/* one CWD to full dir, then work on file *\/$/;"	e	enum:__anon529bf04d0d03
CURLFTPSSL_ALL	.\\include\\curl\\curl.h	/^#define CURLFTPSSL_ALL /;"	d
CURLFTPSSL_CCC_ACTIVE	.\\include\\curl\\curl.h	/^  CURLFTPSSL_CCC_ACTIVE,  \/* Initiate the shutdown *\/$/;"	e	enum:__anon529bf04d0a03
CURLFTPSSL_CCC_LAST	.\\include\\curl\\curl.h	/^  CURLFTPSSL_CCC_LAST     \/* not an option, never use *\/$/;"	e	enum:__anon529bf04d0a03
CURLFTPSSL_CCC_NONE	.\\include\\curl\\curl.h	/^  CURLFTPSSL_CCC_NONE,    \/* do not send CCC *\/$/;"	e	enum:__anon529bf04d0a03
CURLFTPSSL_CCC_PASSIVE	.\\include\\curl\\curl.h	/^  CURLFTPSSL_CCC_PASSIVE, \/* Let the server initiate the shutdown *\/$/;"	e	enum:__anon529bf04d0a03
CURLFTPSSL_CONTROL	.\\include\\curl\\curl.h	/^#define CURLFTPSSL_CONTROL /;"	d
CURLFTPSSL_LAST	.\\include\\curl\\curl.h	/^#define CURLFTPSSL_LAST /;"	d
CURLFTPSSL_NONE	.\\include\\curl\\curl.h	/^#define CURLFTPSSL_NONE /;"	d
CURLFTPSSL_TRY	.\\include\\curl\\curl.h	/^#define CURLFTPSSL_TRY /;"	d
CURLFTP_CREATE_DIR	.\\include\\curl\\curl.h	/^  CURLFTP_CREATE_DIR,       \/* (FTP\/SFTP) if CWD fails, try MKD and then CWD$/;"	e	enum:__anon529bf04d0c03
CURLFTP_CREATE_DIR_LAST	.\\include\\curl\\curl.h	/^  CURLFTP_CREATE_DIR_LAST   \/* not an option, never use *\/$/;"	e	enum:__anon529bf04d0c03
CURLFTP_CREATE_DIR_NONE	.\\include\\curl\\curl.h	/^  CURLFTP_CREATE_DIR_NONE,  \/* do NOT create missing dirs! *\/$/;"	e	enum:__anon529bf04d0c03
CURLFTP_CREATE_DIR_RETRY	.\\include\\curl\\curl.h	/^  CURLFTP_CREATE_DIR_RETRY, \/* (FTP only) if CWD fails, try MKD and then CWD$/;"	e	enum:__anon529bf04d0c03
CURLGSSAPI_DELEGATION_FLAG	.\\include\\curl\\curl.h	/^#define CURLGSSAPI_DELEGATION_FLAG /;"	d
CURLGSSAPI_DELEGATION_NONE	.\\include\\curl\\curl.h	/^#define CURLGSSAPI_DELEGATION_NONE /;"	d
CURLGSSAPI_DELEGATION_POLICY_FLAG	.\\include\\curl\\curl.h	/^#define CURLGSSAPI_DELEGATION_POLICY_FLAG /;"	d
CURLHEADER_SEPARATE	.\\include\\curl\\curl.h	/^#define CURLHEADER_SEPARATE /;"	d
CURLHEADER_UNIFIED	.\\include\\curl\\curl.h	/^#define CURLHEADER_UNIFIED /;"	d
CURLINFO	.\\include\\curl\\curl.h	/^} CURLINFO;$/;"	t	typeref:enum:__anon529bf04d1603
CURLINFO_ACTIVESOCKET	.\\include\\curl\\curl.h	/^  CURLINFO_ACTIVESOCKET     = CURLINFO_SOCKET + 44,$/;"	e	enum:__anon529bf04d1603
CURLINFO_APPCONNECT_TIME	.\\include\\curl\\curl.h	/^  CURLINFO_APPCONNECT_TIME  = CURLINFO_DOUBLE + 33,$/;"	e	enum:__anon529bf04d1603
CURLINFO_CERTINFO	.\\include\\curl\\curl.h	/^  CURLINFO_CERTINFO         = CURLINFO_SLIST  + 34,$/;"	e	enum:__anon529bf04d1603
CURLINFO_CONDITION_UNMET	.\\include\\curl\\curl.h	/^  CURLINFO_CONDITION_UNMET  = CURLINFO_LONG   + 35,$/;"	e	enum:__anon529bf04d1603
CURLINFO_CONNECT_TIME	.\\include\\curl\\curl.h	/^  CURLINFO_CONNECT_TIME     = CURLINFO_DOUBLE + 5,$/;"	e	enum:__anon529bf04d1603
CURLINFO_CONTENT_LENGTH_DOWNLOAD	.\\include\\curl\\curl.h	/^  CURLINFO_CONTENT_LENGTH_DOWNLOAD   = CURLINFO_DOUBLE + 15,$/;"	e	enum:__anon529bf04d1603
CURLINFO_CONTENT_LENGTH_UPLOAD	.\\include\\curl\\curl.h	/^  CURLINFO_CONTENT_LENGTH_UPLOAD     = CURLINFO_DOUBLE + 16,$/;"	e	enum:__anon529bf04d1603
CURLINFO_CONTENT_TYPE	.\\include\\curl\\curl.h	/^  CURLINFO_CONTENT_TYPE     = CURLINFO_STRING + 18,$/;"	e	enum:__anon529bf04d1603
CURLINFO_COOKIELIST	.\\include\\curl\\curl.h	/^  CURLINFO_COOKIELIST       = CURLINFO_SLIST  + 28,$/;"	e	enum:__anon529bf04d1603
CURLINFO_DATA_IN	.\\include\\curl\\curl.h	/^  CURLINFO_DATA_IN,      \/* 3 *\/$/;"	e	enum:__anon529bf04d0603
CURLINFO_DATA_OUT	.\\include\\curl\\curl.h	/^  CURLINFO_DATA_OUT,     \/* 4 *\/$/;"	e	enum:__anon529bf04d0603
CURLINFO_DOUBLE	.\\include\\curl\\curl.h	/^#define CURLINFO_DOUBLE /;"	d
CURLINFO_EFFECTIVE_URL	.\\include\\curl\\curl.h	/^  CURLINFO_EFFECTIVE_URL    = CURLINFO_STRING + 1,$/;"	e	enum:__anon529bf04d1603
CURLINFO_END	.\\include\\curl\\curl.h	/^  CURLINFO_END$/;"	e	enum:__anon529bf04d0603
CURLINFO_FILETIME	.\\include\\curl\\curl.h	/^  CURLINFO_FILETIME         = CURLINFO_LONG   + 14,$/;"	e	enum:__anon529bf04d1603
CURLINFO_FTP_ENTRY_PATH	.\\include\\curl\\curl.h	/^  CURLINFO_FTP_ENTRY_PATH   = CURLINFO_STRING + 30,$/;"	e	enum:__anon529bf04d1603
CURLINFO_HEADER_IN	.\\include\\curl\\curl.h	/^  CURLINFO_HEADER_IN,    \/* 1 *\/$/;"	e	enum:__anon529bf04d0603
CURLINFO_HEADER_OUT	.\\include\\curl\\curl.h	/^  CURLINFO_HEADER_OUT,   \/* 2 *\/$/;"	e	enum:__anon529bf04d0603
CURLINFO_HEADER_SIZE	.\\include\\curl\\curl.h	/^  CURLINFO_HEADER_SIZE      = CURLINFO_LONG   + 11,$/;"	e	enum:__anon529bf04d1603
CURLINFO_HTTPAUTH_AVAIL	.\\include\\curl\\curl.h	/^  CURLINFO_HTTPAUTH_AVAIL   = CURLINFO_LONG   + 23,$/;"	e	enum:__anon529bf04d1603
CURLINFO_HTTP_CODE	.\\include\\curl\\curl.h	/^#define CURLINFO_HTTP_CODE /;"	d
CURLINFO_HTTP_CONNECTCODE	.\\include\\curl\\curl.h	/^  CURLINFO_HTTP_CONNECTCODE = CURLINFO_LONG   + 22,$/;"	e	enum:__anon529bf04d1603
CURLINFO_HTTP_VERSION	.\\include\\curl\\curl.h	/^  CURLINFO_HTTP_VERSION     = CURLINFO_LONG   + 46,$/;"	e	enum:__anon529bf04d1603
CURLINFO_LASTONE	.\\include\\curl\\curl.h	/^  CURLINFO_LASTONE          = 46$/;"	e	enum:__anon529bf04d1603
CURLINFO_LASTSOCKET	.\\include\\curl\\curl.h	/^  CURLINFO_LASTSOCKET       = CURLINFO_LONG   + 29,$/;"	e	enum:__anon529bf04d1603
CURLINFO_LOCAL_IP	.\\include\\curl\\curl.h	/^  CURLINFO_LOCAL_IP         = CURLINFO_STRING + 41,$/;"	e	enum:__anon529bf04d1603
CURLINFO_LOCAL_PORT	.\\include\\curl\\curl.h	/^  CURLINFO_LOCAL_PORT       = CURLINFO_LONG   + 42,$/;"	e	enum:__anon529bf04d1603
CURLINFO_LONG	.\\include\\curl\\curl.h	/^#define CURLINFO_LONG /;"	d
CURLINFO_MASK	.\\include\\curl\\curl.h	/^#define CURLINFO_MASK /;"	d
CURLINFO_NAMELOOKUP_TIME	.\\include\\curl\\curl.h	/^  CURLINFO_NAMELOOKUP_TIME  = CURLINFO_DOUBLE + 4,$/;"	e	enum:__anon529bf04d1603
CURLINFO_NONE	.\\include\\curl\\curl.h	/^  CURLINFO_NONE, \/* first, never use this *\/$/;"	e	enum:__anon529bf04d1603
CURLINFO_NUM_CONNECTS	.\\include\\curl\\curl.h	/^  CURLINFO_NUM_CONNECTS     = CURLINFO_LONG   + 26,$/;"	e	enum:__anon529bf04d1603
CURLINFO_OS_ERRNO	.\\include\\curl\\curl.h	/^  CURLINFO_OS_ERRNO         = CURLINFO_LONG   + 25,$/;"	e	enum:__anon529bf04d1603
CURLINFO_PRETRANSFER_TIME	.\\include\\curl\\curl.h	/^  CURLINFO_PRETRANSFER_TIME = CURLINFO_DOUBLE + 6,$/;"	e	enum:__anon529bf04d1603
CURLINFO_PRIMARY_IP	.\\include\\curl\\curl.h	/^  CURLINFO_PRIMARY_IP       = CURLINFO_STRING + 32,$/;"	e	enum:__anon529bf04d1603
CURLINFO_PRIMARY_PORT	.\\include\\curl\\curl.h	/^  CURLINFO_PRIMARY_PORT     = CURLINFO_LONG   + 40,$/;"	e	enum:__anon529bf04d1603
CURLINFO_PRIVATE	.\\include\\curl\\curl.h	/^  CURLINFO_PRIVATE          = CURLINFO_STRING + 21,$/;"	e	enum:__anon529bf04d1603
CURLINFO_PROXYAUTH_AVAIL	.\\include\\curl\\curl.h	/^  CURLINFO_PROXYAUTH_AVAIL  = CURLINFO_LONG   + 24,$/;"	e	enum:__anon529bf04d1603
CURLINFO_REDIRECT_COUNT	.\\include\\curl\\curl.h	/^  CURLINFO_REDIRECT_COUNT   = CURLINFO_LONG   + 20,$/;"	e	enum:__anon529bf04d1603
CURLINFO_REDIRECT_TIME	.\\include\\curl\\curl.h	/^  CURLINFO_REDIRECT_TIME    = CURLINFO_DOUBLE + 19,$/;"	e	enum:__anon529bf04d1603
CURLINFO_REDIRECT_URL	.\\include\\curl\\curl.h	/^  CURLINFO_REDIRECT_URL     = CURLINFO_STRING + 31,$/;"	e	enum:__anon529bf04d1603
CURLINFO_REQUEST_SIZE	.\\include\\curl\\curl.h	/^  CURLINFO_REQUEST_SIZE     = CURLINFO_LONG   + 12,$/;"	e	enum:__anon529bf04d1603
CURLINFO_RESPONSE_CODE	.\\include\\curl\\curl.h	/^  CURLINFO_RESPONSE_CODE    = CURLINFO_LONG   + 2,$/;"	e	enum:__anon529bf04d1603
CURLINFO_RTSP_CLIENT_CSEQ	.\\include\\curl\\curl.h	/^  CURLINFO_RTSP_CLIENT_CSEQ = CURLINFO_LONG   + 37,$/;"	e	enum:__anon529bf04d1603
CURLINFO_RTSP_CSEQ_RECV	.\\include\\curl\\curl.h	/^  CURLINFO_RTSP_CSEQ_RECV   = CURLINFO_LONG   + 39,$/;"	e	enum:__anon529bf04d1603
CURLINFO_RTSP_SERVER_CSEQ	.\\include\\curl\\curl.h	/^  CURLINFO_RTSP_SERVER_CSEQ = CURLINFO_LONG   + 38,$/;"	e	enum:__anon529bf04d1603
CURLINFO_RTSP_SESSION_ID	.\\include\\curl\\curl.h	/^  CURLINFO_RTSP_SESSION_ID  = CURLINFO_STRING + 36,$/;"	e	enum:__anon529bf04d1603
CURLINFO_SIZE_DOWNLOAD	.\\include\\curl\\curl.h	/^  CURLINFO_SIZE_DOWNLOAD    = CURLINFO_DOUBLE + 8,$/;"	e	enum:__anon529bf04d1603
CURLINFO_SIZE_UPLOAD	.\\include\\curl\\curl.h	/^  CURLINFO_SIZE_UPLOAD      = CURLINFO_DOUBLE + 7,$/;"	e	enum:__anon529bf04d1603
CURLINFO_SLIST	.\\include\\curl\\curl.h	/^#define CURLINFO_SLIST /;"	d
CURLINFO_SOCKET	.\\include\\curl\\curl.h	/^#define CURLINFO_SOCKET /;"	d
CURLINFO_SPEED_DOWNLOAD	.\\include\\curl\\curl.h	/^  CURLINFO_SPEED_DOWNLOAD   = CURLINFO_DOUBLE + 9,$/;"	e	enum:__anon529bf04d1603
CURLINFO_SPEED_UPLOAD	.\\include\\curl\\curl.h	/^  CURLINFO_SPEED_UPLOAD     = CURLINFO_DOUBLE + 10,$/;"	e	enum:__anon529bf04d1603
CURLINFO_SSL_DATA_IN	.\\include\\curl\\curl.h	/^  CURLINFO_SSL_DATA_IN,  \/* 5 *\/$/;"	e	enum:__anon529bf04d0603
CURLINFO_SSL_DATA_OUT	.\\include\\curl\\curl.h	/^  CURLINFO_SSL_DATA_OUT, \/* 6 *\/$/;"	e	enum:__anon529bf04d0603
CURLINFO_SSL_ENGINES	.\\include\\curl\\curl.h	/^  CURLINFO_SSL_ENGINES      = CURLINFO_SLIST  + 27,$/;"	e	enum:__anon529bf04d1603
CURLINFO_SSL_VERIFYRESULT	.\\include\\curl\\curl.h	/^  CURLINFO_SSL_VERIFYRESULT = CURLINFO_LONG   + 13,$/;"	e	enum:__anon529bf04d1603
CURLINFO_STARTTRANSFER_TIME	.\\include\\curl\\curl.h	/^  CURLINFO_STARTTRANSFER_TIME = CURLINFO_DOUBLE + 17,$/;"	e	enum:__anon529bf04d1603
CURLINFO_STRING	.\\include\\curl\\curl.h	/^#define CURLINFO_STRING /;"	d
CURLINFO_TEXT	.\\include\\curl\\curl.h	/^  CURLINFO_TEXT = 0,$/;"	e	enum:__anon529bf04d0603
CURLINFO_TLS_SESSION	.\\include\\curl\\curl.h	/^  CURLINFO_TLS_SESSION      = CURLINFO_SLIST  + 43,$/;"	e	enum:__anon529bf04d1603
CURLINFO_TLS_SSL_PTR	.\\include\\curl\\curl.h	/^  CURLINFO_TLS_SSL_PTR      = CURLINFO_SLIST  + 45,$/;"	e	enum:__anon529bf04d1603
CURLINFO_TOTAL_TIME	.\\include\\curl\\curl.h	/^  CURLINFO_TOTAL_TIME       = CURLINFO_DOUBLE + 3,$/;"	e	enum:__anon529bf04d1603
CURLINFO_TYPEMASK	.\\include\\curl\\curl.h	/^#define CURLINFO_TYPEMASK /;"	d
CURLIOCMD_LAST	.\\include\\curl\\curl.h	/^  CURLIOCMD_LAST         \/* never use *\/$/;"	e	enum:__anon529bf04d0503
CURLIOCMD_NOP	.\\include\\curl\\curl.h	/^  CURLIOCMD_NOP,         \/* no operation *\/$/;"	e	enum:__anon529bf04d0503
CURLIOCMD_RESTARTREAD	.\\include\\curl\\curl.h	/^  CURLIOCMD_RESTARTREAD, \/* restart the read stream from start *\/$/;"	e	enum:__anon529bf04d0503
CURLIOE_FAILRESTART	.\\include\\curl\\curl.h	/^  CURLIOE_FAILRESTART,   \/* failed to restart the read *\/$/;"	e	enum:__anon529bf04d0403
CURLIOE_LAST	.\\include\\curl\\curl.h	/^  CURLIOE_LAST           \/* never use *\/$/;"	e	enum:__anon529bf04d0403
CURLIOE_OK	.\\include\\curl\\curl.h	/^  CURLIOE_OK,            \/* I\/O operation successful *\/$/;"	e	enum:__anon529bf04d0403
CURLIOE_UNKNOWNCMD	.\\include\\curl\\curl.h	/^  CURLIOE_UNKNOWNCMD,    \/* command was unknown to callback *\/$/;"	e	enum:__anon529bf04d0403
CURLKHMATCH_LAST	.\\include\\curl\\curl.h	/^  CURLKHMATCH_LAST      \/* not for use, only a marker for last-in-list *\/$/;"	e	enum:curl_khmatch
CURLKHMATCH_MISMATCH	.\\include\\curl\\curl.h	/^  CURLKHMATCH_MISMATCH, \/* host found, key mismatch! *\/$/;"	e	enum:curl_khmatch
CURLKHMATCH_MISSING	.\\include\\curl\\curl.h	/^  CURLKHMATCH_MISSING,  \/* no matching host\/key found *\/$/;"	e	enum:curl_khmatch
CURLKHMATCH_OK	.\\include\\curl\\curl.h	/^  CURLKHMATCH_OK,       \/* match *\/$/;"	e	enum:curl_khmatch
CURLKHSTAT_DEFER	.\\include\\curl\\curl.h	/^  CURLKHSTAT_DEFER,  \/* do not accept it, but we can't answer right now so$/;"	e	enum:curl_khstat
CURLKHSTAT_FINE	.\\include\\curl\\curl.h	/^  CURLKHSTAT_FINE,$/;"	e	enum:curl_khstat
CURLKHSTAT_FINE_ADD_TO_FILE	.\\include\\curl\\curl.h	/^  CURLKHSTAT_FINE_ADD_TO_FILE,$/;"	e	enum:curl_khstat
CURLKHSTAT_LAST	.\\include\\curl\\curl.h	/^  CURLKHSTAT_LAST    \/* not for use, only a marker for last-in-list *\/$/;"	e	enum:curl_khstat
CURLKHSTAT_REJECT	.\\include\\curl\\curl.h	/^  CURLKHSTAT_REJECT, \/* reject the connection, return an error *\/$/;"	e	enum:curl_khstat
CURLKHTYPE_DSS	.\\include\\curl\\curl.h	/^  CURLKHTYPE_DSS$/;"	e	enum:curl_khtype
CURLKHTYPE_RSA	.\\include\\curl\\curl.h	/^  CURLKHTYPE_RSA,$/;"	e	enum:curl_khtype
CURLKHTYPE_RSA1	.\\include\\curl\\curl.h	/^  CURLKHTYPE_RSA1,$/;"	e	enum:curl_khtype
CURLKHTYPE_UNKNOWN	.\\include\\curl\\curl.h	/^  CURLKHTYPE_UNKNOWN,$/;"	e	enum:curl_khtype
CURLM	.\\include\\curl\\multi.h	/^typedef struct Curl_multi CURLM;$/;"	t	typeref:struct:Curl_multi
CURLMOPT_LASTENTRY	.\\include\\curl\\multi.h	/^  CURLMOPT_LASTENTRY \/* the last unused *\/$/;"	e	enum:__anona7791d620403
CURLMSG	.\\include\\curl\\multi.h	/^} CURLMSG;$/;"	t	typeref:enum:__anona7791d620203
CURLMSG_DONE	.\\include\\curl\\multi.h	/^  CURLMSG_DONE, \/* This easy handle has completed. 'result' contains$/;"	e	enum:__anona7791d620203
CURLMSG_LAST	.\\include\\curl\\multi.h	/^  CURLMSG_LAST \/* last, not used *\/$/;"	e	enum:__anona7791d620203
CURLMSG_NONE	.\\include\\curl\\multi.h	/^  CURLMSG_NONE, \/* first, not used *\/$/;"	e	enum:__anona7791d620203
CURLM_ADDED_ALREADY	.\\include\\curl\\multi.h	/^  CURLM_ADDED_ALREADY,   \/* an easy handle already added to a multi handle was$/;"	e	enum:__anona7791d620103
CURLM_BAD_EASY_HANDLE	.\\include\\curl\\multi.h	/^  CURLM_BAD_EASY_HANDLE, \/* an easy handle was not good\/valid *\/$/;"	e	enum:__anona7791d620103
CURLM_BAD_HANDLE	.\\include\\curl\\multi.h	/^  CURLM_BAD_HANDLE,      \/* the passed-in handle is not a valid CURLM handle *\/$/;"	e	enum:__anona7791d620103
CURLM_BAD_SOCKET	.\\include\\curl\\multi.h	/^  CURLM_BAD_SOCKET,      \/* the passed in socket argument did not match *\/$/;"	e	enum:__anona7791d620103
CURLM_CALL_MULTI_PERFORM	.\\include\\curl\\multi.h	/^  CURLM_CALL_MULTI_PERFORM = -1, \/* please call curl_multi_perform() or$/;"	e	enum:__anona7791d620103
CURLM_CALL_MULTI_SOCKET	.\\include\\curl\\multi.h	/^#define CURLM_CALL_MULTI_SOCKET /;"	d
CURLM_INTERNAL_ERROR	.\\include\\curl\\multi.h	/^  CURLM_INTERNAL_ERROR,  \/* this is a libcurl bug *\/$/;"	e	enum:__anona7791d620103
CURLM_LAST	.\\include\\curl\\multi.h	/^  CURLM_LAST$/;"	e	enum:__anona7791d620103
CURLM_OK	.\\include\\curl\\multi.h	/^  CURLM_OK,$/;"	e	enum:__anona7791d620103
CURLM_OUT_OF_MEMORY	.\\include\\curl\\multi.h	/^  CURLM_OUT_OF_MEMORY,   \/* if you ever get this, you're in deep sh*t *\/$/;"	e	enum:__anona7791d620103
CURLM_UNKNOWN_OPTION	.\\include\\curl\\multi.h	/^  CURLM_UNKNOWN_OPTION,  \/* curl_multi_setopt() with unsupported option *\/$/;"	e	enum:__anona7791d620103
CURLMcode	.\\include\\curl\\multi.h	/^} CURLMcode;$/;"	t	typeref:enum:__anona7791d620103
CURLMoption	.\\include\\curl\\multi.h	/^} CURLMoption;$/;"	t	typeref:enum:__anona7791d620403
CURLMsg	.\\include\\curl\\multi.h	/^struct CURLMsg {$/;"	s
CURLMsg	.\\include\\curl\\multi.h	/^typedef struct CURLMsg CURLMsg;$/;"	t	typeref:struct:CURLMsg
CURLOPTTYPE_FUNCTIONPOINT	.\\include\\curl\\curl.h	/^#define CURLOPTTYPE_FUNCTIONPOINT /;"	d
CURLOPTTYPE_LONG	.\\include\\curl\\curl.h	/^#define CURLOPTTYPE_LONG /;"	d
CURLOPTTYPE_OBJECTPOINT	.\\include\\curl\\curl.h	/^#define CURLOPTTYPE_OBJECTPOINT /;"	d
CURLOPTTYPE_OFF_T	.\\include\\curl\\curl.h	/^#define CURLOPTTYPE_OFF_T /;"	d
CURLOPTTYPE_STRINGPOINT	.\\include\\curl\\curl.h	/^#define CURLOPTTYPE_STRINGPOINT /;"	d
CURLOPT_CLOSEPOLICY	.\\include\\curl\\curl.h	/^#define CURLOPT_CLOSEPOLICY /;"	d
CURLOPT_ENCODING	.\\include\\curl\\curl.h	/^#define CURLOPT_ENCODING /;"	d
CURLOPT_FILE	.\\include\\curl\\curl.h	/^#define CURLOPT_FILE /;"	d
CURLOPT_FTPAPPEND	.\\include\\curl\\curl.h	/^#define CURLOPT_FTPAPPEND /;"	d
CURLOPT_FTPLISTONLY	.\\include\\curl\\curl.h	/^#define CURLOPT_FTPLISTONLY /;"	d
CURLOPT_FTP_SSL	.\\include\\curl\\curl.h	/^#define CURLOPT_FTP_SSL /;"	d
CURLOPT_INFILE	.\\include\\curl\\curl.h	/^#define CURLOPT_INFILE /;"	d
CURLOPT_KRB4LEVEL	.\\include\\curl\\curl.h	/^#define CURLOPT_KRB4LEVEL /;"	d
CURLOPT_LASTENTRY	.\\include\\curl\\curl.h	/^  CURLOPT_LASTENTRY \/* the last unused *\/$/;"	e	enum:__anon529bf04d0e03
CURLOPT_POST301	.\\include\\curl\\curl.h	/^#define CURLOPT_POST301 /;"	d
CURLOPT_RTSPHEADER	.\\include\\curl\\curl.h	/^#define CURLOPT_RTSPHEADER /;"	d
CURLOPT_SERVER_RESPONSE_TIMEOUT	.\\include\\curl\\curl.h	/^#define CURLOPT_SERVER_RESPONSE_TIMEOUT /;"	d
CURLOPT_SSLCERTPASSWD	.\\include\\curl\\curl.h	/^#define CURLOPT_SSLCERTPASSWD /;"	d
CURLOPT_SSLKEYPASSWD	.\\include\\curl\\curl.h	/^#define CURLOPT_SSLKEYPASSWD /;"	d
CURLOPT_WRITEHEADER	.\\include\\curl\\curl.h	/^#define CURLOPT_WRITEHEADER /;"	d
CURLOPT_WRITEINFO	.\\include\\curl\\curl.h	/^#define CURLOPT_WRITEINFO /;"	d
CURLOPT_XFERINFODATA	.\\include\\curl\\curl.h	/^#define CURLOPT_XFERINFODATA /;"	d
CURLPAUSE_ALL	.\\include\\curl\\curl.h	/^#define CURLPAUSE_ALL /;"	d
CURLPAUSE_CONT	.\\include\\curl\\curl.h	/^#define CURLPAUSE_CONT /;"	d
CURLPAUSE_RECV	.\\include\\curl\\curl.h	/^#define CURLPAUSE_RECV /;"	d
CURLPAUSE_RECV_CONT	.\\include\\curl\\curl.h	/^#define CURLPAUSE_RECV_CONT /;"	d
CURLPAUSE_SEND	.\\include\\curl\\curl.h	/^#define CURLPAUSE_SEND /;"	d
CURLPAUSE_SEND_CONT	.\\include\\curl\\curl.h	/^#define CURLPAUSE_SEND_CONT /;"	d
CURLPIPE_HTTP1	.\\include\\curl\\multi.h	/^#define CURLPIPE_HTTP1 /;"	d
CURLPIPE_MULTIPLEX	.\\include\\curl\\multi.h	/^#define CURLPIPE_MULTIPLEX /;"	d
CURLPIPE_NOTHING	.\\include\\curl\\multi.h	/^#define CURLPIPE_NOTHING /;"	d
CURLPROTO_ALL	.\\include\\curl\\curl.h	/^#define CURLPROTO_ALL /;"	d
CURLPROTO_DICT	.\\include\\curl\\curl.h	/^#define CURLPROTO_DICT /;"	d
CURLPROTO_FILE	.\\include\\curl\\curl.h	/^#define CURLPROTO_FILE /;"	d
CURLPROTO_FTP	.\\include\\curl\\curl.h	/^#define CURLPROTO_FTP /;"	d
CURLPROTO_FTPS	.\\include\\curl\\curl.h	/^#define CURLPROTO_FTPS /;"	d
CURLPROTO_GOPHER	.\\include\\curl\\curl.h	/^#define CURLPROTO_GOPHER /;"	d
CURLPROTO_HTTP	.\\include\\curl\\curl.h	/^#define CURLPROTO_HTTP /;"	d
CURLPROTO_HTTPS	.\\include\\curl\\curl.h	/^#define CURLPROTO_HTTPS /;"	d
CURLPROTO_IMAP	.\\include\\curl\\curl.h	/^#define CURLPROTO_IMAP /;"	d
CURLPROTO_IMAPS	.\\include\\curl\\curl.h	/^#define CURLPROTO_IMAPS /;"	d
CURLPROTO_LDAP	.\\include\\curl\\curl.h	/^#define CURLPROTO_LDAP /;"	d
CURLPROTO_LDAPS	.\\include\\curl\\curl.h	/^#define CURLPROTO_LDAPS /;"	d
CURLPROTO_POP3	.\\include\\curl\\curl.h	/^#define CURLPROTO_POP3 /;"	d
CURLPROTO_POP3S	.\\include\\curl\\curl.h	/^#define CURLPROTO_POP3S /;"	d
CURLPROTO_RTMP	.\\include\\curl\\curl.h	/^#define CURLPROTO_RTMP /;"	d
CURLPROTO_RTMPE	.\\include\\curl\\curl.h	/^#define CURLPROTO_RTMPE /;"	d
CURLPROTO_RTMPS	.\\include\\curl\\curl.h	/^#define CURLPROTO_RTMPS /;"	d
CURLPROTO_RTMPT	.\\include\\curl\\curl.h	/^#define CURLPROTO_RTMPT /;"	d
CURLPROTO_RTMPTE	.\\include\\curl\\curl.h	/^#define CURLPROTO_RTMPTE /;"	d
CURLPROTO_RTMPTS	.\\include\\curl\\curl.h	/^#define CURLPROTO_RTMPTS /;"	d
CURLPROTO_RTSP	.\\include\\curl\\curl.h	/^#define CURLPROTO_RTSP /;"	d
CURLPROTO_SCP	.\\include\\curl\\curl.h	/^#define CURLPROTO_SCP /;"	d
CURLPROTO_SFTP	.\\include\\curl\\curl.h	/^#define CURLPROTO_SFTP /;"	d
CURLPROTO_SMB	.\\include\\curl\\curl.h	/^#define CURLPROTO_SMB /;"	d
CURLPROTO_SMBS	.\\include\\curl\\curl.h	/^#define CURLPROTO_SMBS /;"	d
CURLPROTO_SMTP	.\\include\\curl\\curl.h	/^#define CURLPROTO_SMTP /;"	d
CURLPROTO_SMTPS	.\\include\\curl\\curl.h	/^#define CURLPROTO_SMTPS /;"	d
CURLPROTO_TELNET	.\\include\\curl\\curl.h	/^#define CURLPROTO_TELNET /;"	d
CURLPROTO_TFTP	.\\include\\curl\\curl.h	/^#define CURLPROTO_TFTP /;"	d
CURLPROXY_HTTP	.\\include\\curl\\curl.h	/^  CURLPROXY_HTTP = 0,   \/* added in 7.10, new in 7.19.4 default is to use$/;"	e	enum:__anon529bf04d0803
CURLPROXY_HTTP_1_0	.\\include\\curl\\curl.h	/^  CURLPROXY_HTTP_1_0 = 1,   \/* added in 7.19.4, force to use CONNECT$/;"	e	enum:__anon529bf04d0803
CURLPROXY_SOCKS4	.\\include\\curl\\curl.h	/^  CURLPROXY_SOCKS4 = 4, \/* support added in 7.15.2, enum existed already$/;"	e	enum:__anon529bf04d0803
CURLPROXY_SOCKS4A	.\\include\\curl\\curl.h	/^  CURLPROXY_SOCKS4A = 6, \/* added in 7.18.0 *\/$/;"	e	enum:__anon529bf04d0803
CURLPROXY_SOCKS5	.\\include\\curl\\curl.h	/^  CURLPROXY_SOCKS5 = 5, \/* added in 7.10 *\/$/;"	e	enum:__anon529bf04d0803
CURLPROXY_SOCKS5_HOSTNAME	.\\include\\curl\\curl.h	/^  CURLPROXY_SOCKS5_HOSTNAME = 7 \/* Use the SOCKS5 protocol but pass along the$/;"	e	enum:__anon529bf04d0803
CURLSH	.\\include\\curl\\curl.h	/^typedef struct Curl_share CURLSH;$/;"	t	typeref:struct:Curl_share
CURLSHE_BAD_OPTION	.\\include\\curl\\curl.h	/^  CURLSHE_BAD_OPTION, \/* 1 *\/$/;"	e	enum:__anon529bf04d1a03
CURLSHE_INVALID	.\\include\\curl\\curl.h	/^  CURLSHE_INVALID,    \/* 3 *\/$/;"	e	enum:__anon529bf04d1a03
CURLSHE_IN_USE	.\\include\\curl\\curl.h	/^  CURLSHE_IN_USE,     \/* 2 *\/$/;"	e	enum:__anon529bf04d1a03
CURLSHE_LAST	.\\include\\curl\\curl.h	/^  CURLSHE_LAST        \/* never use *\/$/;"	e	enum:__anon529bf04d1a03
CURLSHE_NOMEM	.\\include\\curl\\curl.h	/^  CURLSHE_NOMEM,      \/* 4 out of memory *\/$/;"	e	enum:__anon529bf04d1a03
CURLSHE_NOT_BUILT_IN	.\\include\\curl\\curl.h	/^  CURLSHE_NOT_BUILT_IN, \/* 5 feature not present in lib *\/$/;"	e	enum:__anon529bf04d1a03
CURLSHE_OK	.\\include\\curl\\curl.h	/^  CURLSHE_OK,  \/* all is fine *\/$/;"	e	enum:__anon529bf04d1a03
CURLSHOPT_LAST	.\\include\\curl\\curl.h	/^  CURLSHOPT_LAST  \/* never use *\/$/;"	e	enum:__anon529bf04d1b03
CURLSHOPT_LOCKFUNC	.\\include\\curl\\curl.h	/^  CURLSHOPT_LOCKFUNC,   \/* pass in a 'curl_lock_function' pointer *\/$/;"	e	enum:__anon529bf04d1b03
CURLSHOPT_NONE	.\\include\\curl\\curl.h	/^  CURLSHOPT_NONE,  \/* don't use *\/$/;"	e	enum:__anon529bf04d1b03
CURLSHOPT_SHARE	.\\include\\curl\\curl.h	/^  CURLSHOPT_SHARE,   \/* specify a data type to share *\/$/;"	e	enum:__anon529bf04d1b03
CURLSHOPT_UNLOCKFUNC	.\\include\\curl\\curl.h	/^  CURLSHOPT_UNLOCKFUNC, \/* pass in a 'curl_unlock_function' pointer *\/$/;"	e	enum:__anon529bf04d1b03
CURLSHOPT_UNSHARE	.\\include\\curl\\curl.h	/^  CURLSHOPT_UNSHARE, \/* specify which data type to stop sharing *\/$/;"	e	enum:__anon529bf04d1b03
CURLSHOPT_USERDATA	.\\include\\curl\\curl.h	/^  CURLSHOPT_USERDATA,   \/* pass in a user data pointer used in the lock\/unlock$/;"	e	enum:__anon529bf04d1b03
CURLSHcode	.\\include\\curl\\curl.h	/^} CURLSHcode;$/;"	t	typeref:enum:__anon529bf04d1a03
CURLSHoption	.\\include\\curl\\curl.h	/^} CURLSHoption;$/;"	t	typeref:enum:__anon529bf04d1b03
CURLSOCKTYPE_ACCEPT	.\\include\\curl\\curl.h	/^  CURLSOCKTYPE_ACCEPT, \/* socket created by accept() call *\/$/;"	e	enum:__anon529bf04d0303
CURLSOCKTYPE_IPCXN	.\\include\\curl\\curl.h	/^  CURLSOCKTYPE_IPCXN,  \/* socket created for a specific IP connection *\/$/;"	e	enum:__anon529bf04d0303
CURLSOCKTYPE_LAST	.\\include\\curl\\curl.h	/^  CURLSOCKTYPE_LAST    \/* never use *\/$/;"	e	enum:__anon529bf04d0303
CURLSSH_AUTH_AGENT	.\\include\\curl\\curl.h	/^#define CURLSSH_AUTH_AGENT /;"	d
CURLSSH_AUTH_ANY	.\\include\\curl\\curl.h	/^#define CURLSSH_AUTH_ANY /;"	d
CURLSSH_AUTH_DEFAULT	.\\include\\curl\\curl.h	/^#define CURLSSH_AUTH_DEFAULT /;"	d
CURLSSH_AUTH_HOST	.\\include\\curl\\curl.h	/^#define CURLSSH_AUTH_HOST /;"	d
CURLSSH_AUTH_KEYBOARD	.\\include\\curl\\curl.h	/^#define CURLSSH_AUTH_KEYBOARD /;"	d
CURLSSH_AUTH_NONE	.\\include\\curl\\curl.h	/^#define CURLSSH_AUTH_NONE /;"	d
CURLSSH_AUTH_PASSWORD	.\\include\\curl\\curl.h	/^#define CURLSSH_AUTH_PASSWORD /;"	d
CURLSSH_AUTH_PUBLICKEY	.\\include\\curl\\curl.h	/^#define CURLSSH_AUTH_PUBLICKEY /;"	d
CURLSSLBACKEND_AXTLS	.\\include\\curl\\curl.h	/^  CURLSSLBACKEND_AXTLS = 10,$/;"	e	enum:__anon529bf04d1503
CURLSSLBACKEND_BORINGSSL	.\\include\\curl\\curl.h	/^#define CURLSSLBACKEND_BORINGSSL /;"	d
CURLSSLBACKEND_CYASSL	.\\include\\curl\\curl.h	/^  CURLSSLBACKEND_CYASSL = 7,$/;"	e	enum:__anon529bf04d1503
CURLSSLBACKEND_DARWINSSL	.\\include\\curl\\curl.h	/^  CURLSSLBACKEND_DARWINSSL = 9,$/;"	e	enum:__anon529bf04d1503
CURLSSLBACKEND_GNUTLS	.\\include\\curl\\curl.h	/^  CURLSSLBACKEND_GNUTLS = 2,$/;"	e	enum:__anon529bf04d1503
CURLSSLBACKEND_GSKIT	.\\include\\curl\\curl.h	/^  CURLSSLBACKEND_GSKIT = 5,$/;"	e	enum:__anon529bf04d1503
CURLSSLBACKEND_LIBRESSL	.\\include\\curl\\curl.h	/^#define CURLSSLBACKEND_LIBRESSL /;"	d
CURLSSLBACKEND_MBEDTLS	.\\include\\curl\\curl.h	/^  CURLSSLBACKEND_MBEDTLS = 11$/;"	e	enum:__anon529bf04d1503
CURLSSLBACKEND_NONE	.\\include\\curl\\curl.h	/^  CURLSSLBACKEND_NONE = 0,$/;"	e	enum:__anon529bf04d1503
CURLSSLBACKEND_NSS	.\\include\\curl\\curl.h	/^  CURLSSLBACKEND_NSS = 3,$/;"	e	enum:__anon529bf04d1503
CURLSSLBACKEND_OBSOLETE4	.\\include\\curl\\curl.h	/^  CURLSSLBACKEND_OBSOLETE4 = 4,  \/* Was QSOSSL. *\/$/;"	e	enum:__anon529bf04d1503
CURLSSLBACKEND_OPENSSL	.\\include\\curl\\curl.h	/^  CURLSSLBACKEND_OPENSSL = 1,$/;"	e	enum:__anon529bf04d1503
CURLSSLBACKEND_POLARSSL	.\\include\\curl\\curl.h	/^  CURLSSLBACKEND_POLARSSL = 6,$/;"	e	enum:__anon529bf04d1503
CURLSSLBACKEND_SCHANNEL	.\\include\\curl\\curl.h	/^  CURLSSLBACKEND_SCHANNEL = 8,$/;"	e	enum:__anon529bf04d1503
CURLSSLBACKEND_WOLFSSL	.\\include\\curl\\curl.h	/^#define CURLSSLBACKEND_WOLFSSL /;"	d
CURLSSLOPT_ALLOW_BEAST	.\\include\\curl\\curl.h	/^#define CURLSSLOPT_ALLOW_BEAST /;"	d
CURLSSLOPT_NO_REVOKE	.\\include\\curl\\curl.h	/^#define CURLSSLOPT_NO_REVOKE /;"	d
CURLUSESSL_ALL	.\\include\\curl\\curl.h	/^  CURLUSESSL_ALL,     \/* SSL for all communication or fail *\/$/;"	e	enum:__anon529bf04d0903
CURLUSESSL_CONTROL	.\\include\\curl\\curl.h	/^  CURLUSESSL_CONTROL, \/* SSL for the control connection or fail *\/$/;"	e	enum:__anon529bf04d0903
CURLUSESSL_LAST	.\\include\\curl\\curl.h	/^  CURLUSESSL_LAST     \/* not an option, never use *\/$/;"	e	enum:__anon529bf04d0903
CURLUSESSL_NONE	.\\include\\curl\\curl.h	/^  CURLUSESSL_NONE,    \/* do not attempt to use SSL *\/$/;"	e	enum:__anon529bf04d0903
CURLUSESSL_TRY	.\\include\\curl\\curl.h	/^  CURLUSESSL_TRY,     \/* try using SSL, proceed anyway otherwise *\/$/;"	e	enum:__anon529bf04d0903
CURLVERSION_FIRST	.\\include\\curl\\curl.h	/^  CURLVERSION_FIRST,$/;"	e	enum:__anon529bf04d1c03
CURLVERSION_FOURTH	.\\include\\curl\\curl.h	/^  CURLVERSION_FOURTH,$/;"	e	enum:__anon529bf04d1c03
CURLVERSION_LAST	.\\include\\curl\\curl.h	/^  CURLVERSION_LAST \/* never actually use this *\/$/;"	e	enum:__anon529bf04d1c03
CURLVERSION_NOW	.\\include\\curl\\curl.h	/^#define CURLVERSION_NOW /;"	d
CURLVERSION_SECOND	.\\include\\curl\\curl.h	/^  CURLVERSION_SECOND,$/;"	e	enum:__anon529bf04d1c03
CURLVERSION_THIRD	.\\include\\curl\\curl.h	/^  CURLVERSION_THIRD,$/;"	e	enum:__anon529bf04d1c03
CURL_AT_LEAST_VERSION	.\\include\\curl\\curlver.h	/^#define CURL_AT_LEAST_VERSION(/;"	d
CURL_CHUNK_BGN_FUNC_FAIL	.\\include\\curl\\curl.h	/^#define CURL_CHUNK_BGN_FUNC_FAIL /;"	d
CURL_CHUNK_BGN_FUNC_OK	.\\include\\curl\\curl.h	/^#define CURL_CHUNK_BGN_FUNC_OK /;"	d
CURL_CHUNK_BGN_FUNC_SKIP	.\\include\\curl\\curl.h	/^#define CURL_CHUNK_BGN_FUNC_SKIP /;"	d
CURL_CHUNK_END_FUNC_FAIL	.\\include\\curl\\curl.h	/^#define CURL_CHUNK_END_FUNC_FAIL /;"	d
CURL_CHUNK_END_FUNC_OK	.\\include\\curl\\curl.h	/^#define CURL_CHUNK_END_FUNC_OK /;"	d
CURL_CSELECT_ERR	.\\include\\curl\\multi.h	/^#define CURL_CSELECT_ERR /;"	d
CURL_CSELECT_IN	.\\include\\curl\\multi.h	/^#define CURL_CSELECT_IN /;"	d
CURL_CSELECT_OUT	.\\include\\curl\\multi.h	/^#define CURL_CSELECT_OUT /;"	d
CURL_DID_MEMORY_FUNC_TYPEDEFS	.\\include\\curl\\curl.h	/^#define CURL_DID_MEMORY_FUNC_TYPEDEFS$/;"	d
CURL_ERROR_SIZE	.\\include\\curl\\curl.h	/^#define CURL_ERROR_SIZE /;"	d
CURL_EXTERN	.\\include\\curl\\curl.h	/^#    define CURL_EXTERN /;"	d
CURL_EXTERN	.\\include\\curl\\curl.h	/^#  define CURL_EXTERN /;"	d
CURL_EXTERN	.\\include\\curl\\curl.h	/^#  define CURL_EXTERN$/;"	d
CURL_FNMATCHFUNC_FAIL	.\\include\\curl\\curl.h	/^#define CURL_FNMATCHFUNC_FAIL /;"	d
CURL_FNMATCHFUNC_MATCH	.\\include\\curl\\curl.h	/^#define CURL_FNMATCHFUNC_MATCH /;"	d
CURL_FNMATCHFUNC_NOMATCH	.\\include\\curl\\curl.h	/^#define CURL_FNMATCHFUNC_NOMATCH /;"	d
CURL_FORMADD_DISABLED	.\\include\\curl\\curl.h	/^  CURL_FORMADD_DISABLED, \/* libcurl was built with this disabled *\/$/;"	e	enum:__anon529bf04d1403
CURL_FORMADD_ILLEGAL_ARRAY	.\\include\\curl\\curl.h	/^  CURL_FORMADD_ILLEGAL_ARRAY,$/;"	e	enum:__anon529bf04d1403
CURL_FORMADD_INCOMPLETE	.\\include\\curl\\curl.h	/^  CURL_FORMADD_INCOMPLETE,$/;"	e	enum:__anon529bf04d1403
CURL_FORMADD_LAST	.\\include\\curl\\curl.h	/^  CURL_FORMADD_LAST \/* last *\/$/;"	e	enum:__anon529bf04d1403
CURL_FORMADD_MEMORY	.\\include\\curl\\curl.h	/^  CURL_FORMADD_MEMORY,$/;"	e	enum:__anon529bf04d1403
CURL_FORMADD_NULL	.\\include\\curl\\curl.h	/^  CURL_FORMADD_NULL,$/;"	e	enum:__anon529bf04d1403
CURL_FORMADD_OK	.\\include\\curl\\curl.h	/^  CURL_FORMADD_OK, \/* first, no error *\/$/;"	e	enum:__anon529bf04d1403
CURL_FORMADD_OPTION_TWICE	.\\include\\curl\\curl.h	/^  CURL_FORMADD_OPTION_TWICE,$/;"	e	enum:__anon529bf04d1403
CURL_FORMADD_UNKNOWN_OPTION	.\\include\\curl\\curl.h	/^  CURL_FORMADD_UNKNOWN_OPTION,$/;"	e	enum:__anon529bf04d1403
CURL_FORMAT_CURL_OFF_T	.\\include\\curl\\curlbuild.h	/^#    define CURL_FORMAT_CURL_OFF_T /;"	d
CURL_FORMAT_CURL_OFF_TU	.\\include\\curl\\curlbuild.h	/^#    define CURL_FORMAT_CURL_OFF_TU /;"	d
CURL_FORMAT_OFF_T	.\\include\\curl\\curlbuild.h	/^#    define CURL_FORMAT_OFF_T /;"	d
CURL_GLOBAL_ACK_EINTR	.\\include\\curl\\curl.h	/^#define CURL_GLOBAL_ACK_EINTR /;"	d
CURL_GLOBAL_ALL	.\\include\\curl\\curl.h	/^#define CURL_GLOBAL_ALL /;"	d
CURL_GLOBAL_DEFAULT	.\\include\\curl\\curl.h	/^#define CURL_GLOBAL_DEFAULT /;"	d
CURL_GLOBAL_NOTHING	.\\include\\curl\\curl.h	/^#define CURL_GLOBAL_NOTHING /;"	d
CURL_GLOBAL_SSL	.\\include\\curl\\curl.h	/^#define CURL_GLOBAL_SSL /;"	d
CURL_GLOBAL_WIN32	.\\include\\curl\\curl.h	/^#define CURL_GLOBAL_WIN32 /;"	d
CURL_HTTPPOST_BUFFER	.\\include\\curl\\curl.h	/^#define CURL_HTTPPOST_BUFFER /;"	d
CURL_HTTPPOST_CALLBACK	.\\include\\curl\\curl.h	/^#define CURL_HTTPPOST_CALLBACK /;"	d
CURL_HTTPPOST_FILENAME	.\\include\\curl\\curl.h	/^#define CURL_HTTPPOST_FILENAME /;"	d
CURL_HTTPPOST_LARGE	.\\include\\curl\\curl.h	/^#define CURL_HTTPPOST_LARGE /;"	d
CURL_HTTPPOST_PTRBUFFER	.\\include\\curl\\curl.h	/^#define CURL_HTTPPOST_PTRBUFFER /;"	d
CURL_HTTPPOST_PTRCONTENTS	.\\include\\curl\\curl.h	/^#define CURL_HTTPPOST_PTRCONTENTS /;"	d
CURL_HTTPPOST_PTRNAME	.\\include\\curl\\curl.h	/^#define CURL_HTTPPOST_PTRNAME /;"	d
CURL_HTTPPOST_READFILE	.\\include\\curl\\curl.h	/^#define CURL_HTTPPOST_READFILE /;"	d
CURL_HTTP_VERSION_1_0	.\\include\\curl\\curl.h	/^  CURL_HTTP_VERSION_1_0,  \/* please use HTTP 1.0 in the request *\/$/;"	e	enum:__anon529bf04d0f03
CURL_HTTP_VERSION_1_1	.\\include\\curl\\curl.h	/^  CURL_HTTP_VERSION_1_1,  \/* please use HTTP 1.1 in the request *\/$/;"	e	enum:__anon529bf04d0f03
CURL_HTTP_VERSION_2	.\\include\\curl\\curl.h	/^#define CURL_HTTP_VERSION_2 /;"	d
CURL_HTTP_VERSION_2TLS	.\\include\\curl\\curl.h	/^  CURL_HTTP_VERSION_2TLS, \/* use version 2 for HTTPS, version 1.1 for HTTP *\/$/;"	e	enum:__anon529bf04d0f03
CURL_HTTP_VERSION_2_0	.\\include\\curl\\curl.h	/^  CURL_HTTP_VERSION_2_0,  \/* please use HTTP 2 in the request *\/$/;"	e	enum:__anon529bf04d0f03
CURL_HTTP_VERSION_2_PRIOR_KNOWLEDGE	.\\include\\curl\\curl.h	/^  CURL_HTTP_VERSION_2_PRIOR_KNOWLEDGE,  \/* please use HTTP 2 without HTTP\/1.1$/;"	e	enum:__anon529bf04d0f03
CURL_HTTP_VERSION_LAST	.\\include\\curl\\curl.h	/^  CURL_HTTP_VERSION_LAST \/* *ILLEGAL* http version *\/$/;"	e	enum:__anon529bf04d0f03
CURL_HTTP_VERSION_NONE	.\\include\\curl\\curl.h	/^  CURL_HTTP_VERSION_NONE, \/* setting this means we don't care, and that we'd$/;"	e	enum:__anon529bf04d0f03
CURL_IPRESOLVE_V4	.\\include\\curl\\curl.h	/^#define CURL_IPRESOLVE_V4 /;"	d
CURL_IPRESOLVE_V6	.\\include\\curl\\curl.h	/^#define CURL_IPRESOLVE_V6 /;"	d
CURL_IPRESOLVE_WHATEVER	.\\include\\curl\\curl.h	/^#define CURL_IPRESOLVE_WHATEVER /;"	d
CURL_ISOCPP	.\\include\\curl\\curlrules.h	/^#define CURL_ISOCPP$/;"	d
CURL_LAST	.\\include\\curl\\curl.h	/^  CURL_LAST \/* never use! *\/$/;"	e	enum:__anon529bf04d0703
CURL_LOCK_ACCESS_LAST	.\\include\\curl\\curl.h	/^  CURL_LOCK_ACCESS_LAST        \/* never use *\/$/;"	e	enum:__anon529bf04d1903
CURL_LOCK_ACCESS_NONE	.\\include\\curl\\curl.h	/^  CURL_LOCK_ACCESS_NONE = 0,   \/* unspecified action *\/$/;"	e	enum:__anon529bf04d1903
CURL_LOCK_ACCESS_SHARED	.\\include\\curl\\curl.h	/^  CURL_LOCK_ACCESS_SHARED = 1, \/* for read perhaps *\/$/;"	e	enum:__anon529bf04d1903
CURL_LOCK_ACCESS_SINGLE	.\\include\\curl\\curl.h	/^  CURL_LOCK_ACCESS_SINGLE = 2, \/* for write perhaps *\/$/;"	e	enum:__anon529bf04d1903
CURL_LOCK_DATA_CONNECT	.\\include\\curl\\curl.h	/^  CURL_LOCK_DATA_CONNECT,$/;"	e	enum:__anon529bf04d1803
CURL_LOCK_DATA_COOKIE	.\\include\\curl\\curl.h	/^  CURL_LOCK_DATA_COOKIE,$/;"	e	enum:__anon529bf04d1803
CURL_LOCK_DATA_DNS	.\\include\\curl\\curl.h	/^  CURL_LOCK_DATA_DNS,$/;"	e	enum:__anon529bf04d1803
CURL_LOCK_DATA_LAST	.\\include\\curl\\curl.h	/^  CURL_LOCK_DATA_LAST$/;"	e	enum:__anon529bf04d1803
CURL_LOCK_DATA_NONE	.\\include\\curl\\curl.h	/^  CURL_LOCK_DATA_NONE = 0,$/;"	e	enum:__anon529bf04d1803
CURL_LOCK_DATA_SHARE	.\\include\\curl\\curl.h	/^  CURL_LOCK_DATA_SHARE,$/;"	e	enum:__anon529bf04d1803
CURL_LOCK_DATA_SSL_SESSION	.\\include\\curl\\curl.h	/^  CURL_LOCK_DATA_SSL_SESSION,$/;"	e	enum:__anon529bf04d1803
CURL_MAX_HTTP_HEADER	.\\include\\curl\\curl.h	/^#define CURL_MAX_HTTP_HEADER /;"	d
CURL_MAX_WRITE_SIZE	.\\include\\curl\\curl.h	/^#define CURL_MAX_WRITE_SIZE /;"	d
CURL_NETRC_IGNORED	.\\include\\curl\\curl.h	/^  CURL_NETRC_IGNORED,     \/* The .netrc will never be read.$/;"	e	enum:CURL_NETRC_OPTION
CURL_NETRC_LAST	.\\include\\curl\\curl.h	/^  CURL_NETRC_LAST$/;"	e	enum:CURL_NETRC_OPTION
CURL_NETRC_OPTION	.\\include\\curl\\curl.h	/^enum CURL_NETRC_OPTION {$/;"	g
CURL_NETRC_OPTIONAL	.\\include\\curl\\curl.h	/^  CURL_NETRC_OPTIONAL,    \/* A user:password in the URL will be preferred$/;"	e	enum:CURL_NETRC_OPTION
CURL_NETRC_REQUIRED	.\\include\\curl\\curl.h	/^  CURL_NETRC_REQUIRED,    \/* A user:password in the URL will be ignored.$/;"	e	enum:CURL_NETRC_OPTION
CURL_OFF_TU_C	.\\include\\curl\\curlrules.h	/^#  define CURL_OFF_TU_C(/;"	d
CURL_OFF_T_C	.\\include\\curl\\curlrules.h	/^#  define CURL_OFF_T_C(/;"	d
CURL_POLL_IN	.\\include\\curl\\multi.h	/^#define CURL_POLL_IN /;"	d
CURL_POLL_INOUT	.\\include\\curl\\multi.h	/^#define CURL_POLL_INOUT /;"	d
CURL_POLL_NONE	.\\include\\curl\\multi.h	/^#define CURL_POLL_NONE /;"	d
CURL_POLL_OUT	.\\include\\curl\\multi.h	/^#define CURL_POLL_OUT /;"	d
CURL_POLL_REMOVE	.\\include\\curl\\multi.h	/^#define CURL_POLL_REMOVE /;"	d
CURL_PUSH_DENY	.\\include\\curl\\multi.h	/^#define CURL_PUSH_DENY /;"	d
CURL_PUSH_OK	.\\include\\curl\\multi.h	/^#define CURL_PUSH_OK /;"	d
CURL_READFUNC_ABORT	.\\include\\curl\\curl.h	/^#define CURL_READFUNC_ABORT /;"	d
CURL_READFUNC_PAUSE	.\\include\\curl\\curl.h	/^#define CURL_READFUNC_PAUSE /;"	d
CURL_REDIR_GET_ALL	.\\include\\curl\\curl.h	/^#define CURL_REDIR_GET_ALL /;"	d
CURL_REDIR_POST_301	.\\include\\curl\\curl.h	/^#define CURL_REDIR_POST_301 /;"	d
CURL_REDIR_POST_302	.\\include\\curl\\curl.h	/^#define CURL_REDIR_POST_302 /;"	d
CURL_REDIR_POST_303	.\\include\\curl\\curl.h	/^#define CURL_REDIR_POST_303 /;"	d
CURL_REDIR_POST_ALL	.\\include\\curl\\curl.h	/^#define CURL_REDIR_POST_ALL /;"	d
CURL_RTSPREQ_ANNOUNCE	.\\include\\curl\\curl.h	/^    CURL_RTSPREQ_ANNOUNCE,$/;"	e	enum:__anon529bf04d1003
CURL_RTSPREQ_DESCRIBE	.\\include\\curl\\curl.h	/^    CURL_RTSPREQ_DESCRIBE,$/;"	e	enum:__anon529bf04d1003
CURL_RTSPREQ_GET_PARAMETER	.\\include\\curl\\curl.h	/^    CURL_RTSPREQ_GET_PARAMETER,$/;"	e	enum:__anon529bf04d1003
CURL_RTSPREQ_LAST	.\\include\\curl\\curl.h	/^    CURL_RTSPREQ_LAST \/* last in list *\/$/;"	e	enum:__anon529bf04d1003
CURL_RTSPREQ_NONE	.\\include\\curl\\curl.h	/^    CURL_RTSPREQ_NONE, \/* first in list *\/$/;"	e	enum:__anon529bf04d1003
CURL_RTSPREQ_OPTIONS	.\\include\\curl\\curl.h	/^    CURL_RTSPREQ_OPTIONS,$/;"	e	enum:__anon529bf04d1003
CURL_RTSPREQ_PAUSE	.\\include\\curl\\curl.h	/^    CURL_RTSPREQ_PAUSE,$/;"	e	enum:__anon529bf04d1003
CURL_RTSPREQ_PLAY	.\\include\\curl\\curl.h	/^    CURL_RTSPREQ_PLAY,$/;"	e	enum:__anon529bf04d1003
CURL_RTSPREQ_RECEIVE	.\\include\\curl\\curl.h	/^    CURL_RTSPREQ_RECEIVE,$/;"	e	enum:__anon529bf04d1003
CURL_RTSPREQ_RECORD	.\\include\\curl\\curl.h	/^    CURL_RTSPREQ_RECORD,$/;"	e	enum:__anon529bf04d1003
CURL_RTSPREQ_SETUP	.\\include\\curl\\curl.h	/^    CURL_RTSPREQ_SETUP,$/;"	e	enum:__anon529bf04d1003
CURL_RTSPREQ_SET_PARAMETER	.\\include\\curl\\curl.h	/^    CURL_RTSPREQ_SET_PARAMETER,$/;"	e	enum:__anon529bf04d1003
CURL_RTSPREQ_TEARDOWN	.\\include\\curl\\curl.h	/^    CURL_RTSPREQ_TEARDOWN,$/;"	e	enum:__anon529bf04d1003
CURL_SEEKFUNC_CANTSEEK	.\\include\\curl\\curl.h	/^#define CURL_SEEKFUNC_CANTSEEK /;"	d
CURL_SEEKFUNC_FAIL	.\\include\\curl\\curl.h	/^#define CURL_SEEKFUNC_FAIL /;"	d
CURL_SEEKFUNC_OK	.\\include\\curl\\curl.h	/^#define CURL_SEEKFUNC_OK /;"	d
CURL_SIZEOF_CURL_OFF_T	.\\include\\curl\\curlbuild.h	/^#    define CURL_SIZEOF_CURL_OFF_T /;"	d
CURL_SIZEOF_CURL_SOCKLEN_T	.\\include\\curl\\curlbuild.h	/^#  define CURL_SIZEOF_CURL_SOCKLEN_T /;"	d
CURL_SIZEOF_LONG	.\\include\\curl\\curlbuild.h	/^#    define CURL_SIZEOF_LONG /;"	d
CURL_SOCKET_BAD	.\\include\\curl\\curl.h	/^#define CURL_SOCKET_BAD /;"	d
CURL_SOCKET_TIMEOUT	.\\include\\curl\\multi.h	/^#define CURL_SOCKET_TIMEOUT /;"	d
CURL_SOCKOPT_ALREADY_CONNECTED	.\\include\\curl\\curl.h	/^#define CURL_SOCKOPT_ALREADY_CONNECTED /;"	d
CURL_SOCKOPT_ERROR	.\\include\\curl\\curl.h	/^#define CURL_SOCKOPT_ERROR /;"	d
CURL_SOCKOPT_OK	.\\include\\curl\\curl.h	/^#define CURL_SOCKOPT_OK /;"	d
CURL_SSLVERSION_DEFAULT	.\\include\\curl\\curl.h	/^  CURL_SSLVERSION_DEFAULT,$/;"	e	enum:__anon529bf04d1103
CURL_SSLVERSION_LAST	.\\include\\curl\\curl.h	/^  CURL_SSLVERSION_LAST \/* never use, keep last *\/$/;"	e	enum:__anon529bf04d1103
CURL_SSLVERSION_SSLv2	.\\include\\curl\\curl.h	/^  CURL_SSLVERSION_SSLv2,$/;"	e	enum:__anon529bf04d1103
CURL_SSLVERSION_SSLv3	.\\include\\curl\\curl.h	/^  CURL_SSLVERSION_SSLv3,$/;"	e	enum:__anon529bf04d1103
CURL_SSLVERSION_TLSv1	.\\include\\curl\\curl.h	/^  CURL_SSLVERSION_TLSv1, \/* TLS 1.x *\/$/;"	e	enum:__anon529bf04d1103
CURL_SSLVERSION_TLSv1_0	.\\include\\curl\\curl.h	/^  CURL_SSLVERSION_TLSv1_0,$/;"	e	enum:__anon529bf04d1103
CURL_SSLVERSION_TLSv1_1	.\\include\\curl\\curl.h	/^  CURL_SSLVERSION_TLSv1_1,$/;"	e	enum:__anon529bf04d1103
CURL_SSLVERSION_TLSv1_2	.\\include\\curl\\curl.h	/^  CURL_SSLVERSION_TLSv1_2,$/;"	e	enum:__anon529bf04d1103
CURL_SUFFIX_CURL_OFF_T	.\\include\\curl\\curlbuild.h	/^#    define CURL_SUFFIX_CURL_OFF_T /;"	d
CURL_SUFFIX_CURL_OFF_TU	.\\include\\curl\\curlbuild.h	/^#    define CURL_SUFFIX_CURL_OFF_TU /;"	d
CURL_TIMECOND_IFMODSINCE	.\\include\\curl\\curl.h	/^  CURL_TIMECOND_IFMODSINCE,$/;"	e	enum:__anon529bf04d1203
CURL_TIMECOND_IFUNMODSINCE	.\\include\\curl\\curl.h	/^  CURL_TIMECOND_IFUNMODSINCE,$/;"	e	enum:__anon529bf04d1203
CURL_TIMECOND_LAST	.\\include\\curl\\curl.h	/^  CURL_TIMECOND_LAST$/;"	e	enum:__anon529bf04d1203
CURL_TIMECOND_LASTMOD	.\\include\\curl\\curl.h	/^  CURL_TIMECOND_LASTMOD,$/;"	e	enum:__anon529bf04d1203
CURL_TIMECOND_NONE	.\\include\\curl\\curl.h	/^  CURL_TIMECOND_NONE,$/;"	e	enum:__anon529bf04d1203
CURL_TLSAUTH	.\\include\\curl\\curl.h	/^enum CURL_TLSAUTH {$/;"	g
CURL_TLSAUTH_LAST	.\\include\\curl\\curl.h	/^  CURL_TLSAUTH_LAST \/* never use, keep last *\/$/;"	e	enum:CURL_TLSAUTH
CURL_TLSAUTH_NONE	.\\include\\curl\\curl.h	/^  CURL_TLSAUTH_NONE,$/;"	e	enum:CURL_TLSAUTH
CURL_TLSAUTH_SRP	.\\include\\curl\\curl.h	/^  CURL_TLSAUTH_SRP,$/;"	e	enum:CURL_TLSAUTH
CURL_TYPEOF_CURL_OFF_T	.\\include\\curl\\curlbuild.h	/^#    define CURL_TYPEOF_CURL_OFF_T /;"	d
CURL_TYPEOF_CURL_SOCKLEN_T	.\\include\\curl\\curlbuild.h	/^#  define CURL_TYPEOF_CURL_SOCKLEN_T /;"	d
CURL_VERSION_ASYNCHDNS	.\\include\\curl\\curl.h	/^#define CURL_VERSION_ASYNCHDNS /;"	d
CURL_VERSION_BITS	.\\include\\curl\\curlver.h	/^#define CURL_VERSION_BITS(/;"	d
CURL_VERSION_CONV	.\\include\\curl\\curl.h	/^#define CURL_VERSION_CONV /;"	d
CURL_VERSION_CURLDEBUG	.\\include\\curl\\curl.h	/^#define CURL_VERSION_CURLDEBUG /;"	d
CURL_VERSION_DEBUG	.\\include\\curl\\curl.h	/^#define CURL_VERSION_DEBUG /;"	d
CURL_VERSION_GSSAPI	.\\include\\curl\\curl.h	/^#define CURL_VERSION_GSSAPI /;"	d
CURL_VERSION_GSSNEGOTIATE	.\\include\\curl\\curl.h	/^#define CURL_VERSION_GSSNEGOTIATE /;"	d
CURL_VERSION_HTTP2	.\\include\\curl\\curl.h	/^#define CURL_VERSION_HTTP2 /;"	d
CURL_VERSION_IDN	.\\include\\curl\\curl.h	/^#define CURL_VERSION_IDN /;"	d
CURL_VERSION_IPV6	.\\include\\curl\\curl.h	/^#define CURL_VERSION_IPV6 /;"	d
CURL_VERSION_KERBEROS4	.\\include\\curl\\curl.h	/^#define CURL_VERSION_KERBEROS4 /;"	d
CURL_VERSION_KERBEROS5	.\\include\\curl\\curl.h	/^#define CURL_VERSION_KERBEROS5 /;"	d
CURL_VERSION_LARGEFILE	.\\include\\curl\\curl.h	/^#define CURL_VERSION_LARGEFILE /;"	d
CURL_VERSION_LIBZ	.\\include\\curl\\curl.h	/^#define CURL_VERSION_LIBZ /;"	d
CURL_VERSION_NTLM	.\\include\\curl\\curl.h	/^#define CURL_VERSION_NTLM /;"	d
CURL_VERSION_NTLM_WB	.\\include\\curl\\curl.h	/^#define CURL_VERSION_NTLM_WB /;"	d
CURL_VERSION_PSL	.\\include\\curl\\curl.h	/^#define CURL_VERSION_PSL /;"	d
CURL_VERSION_SPNEGO	.\\include\\curl\\curl.h	/^#define CURL_VERSION_SPNEGO /;"	d
CURL_VERSION_SSL	.\\include\\curl\\curl.h	/^#define CURL_VERSION_SSL /;"	d
CURL_VERSION_SSPI	.\\include\\curl\\curl.h	/^#define CURL_VERSION_SSPI /;"	d
CURL_VERSION_TLSAUTH_SRP	.\\include\\curl\\curl.h	/^#define CURL_VERSION_TLSAUTH_SRP /;"	d
CURL_VERSION_UNIX_SOCKETS	.\\include\\curl\\curl.h	/^#define CURL_VERSION_UNIX_SOCKETS /;"	d
CURL_WAIT_POLLIN	.\\include\\curl\\multi.h	/^#define CURL_WAIT_POLLIN /;"	d
CURL_WAIT_POLLOUT	.\\include\\curl\\multi.h	/^#define CURL_WAIT_POLLOUT /;"	d
CURL_WAIT_POLLPRI	.\\include\\curl\\multi.h	/^#define CURL_WAIT_POLLPRI /;"	d
CURL_WRITEFUNC_PAUSE	.\\include\\curl\\curl.h	/^#define CURL_WRITEFUNC_PAUSE /;"	d
CURLcode	.\\include\\curl\\curl.h	/^} CURLcode;$/;"	t	typeref:enum:__anon529bf04d0703
CURLformoption	.\\include\\curl\\curl.h	/^} CURLformoption;$/;"	t	typeref:enum:__anon529bf04d1303
CURLoption	.\\include\\curl\\curl.h	/^} CURLoption;$/;"	t	typeref:enum:__anon529bf04d0e03
CURLversion	.\\include\\curl\\curl.h	/^} CURLversion;$/;"	t	typeref:enum:__anon529bf04d1c03
C_space	.\\include\\freetype\\ftwinfnt.h	/^    FT_UShort  C_space;$/;"	m	struct:FT_WinFNT_HeaderRec_	typeref:typename:FT_UShort
CapHeight	.\\include\\freetype\\tttables.h	/^    FT_UShort  CapHeight;$/;"	m	struct:TT_PCLT_	typeref:typename:FT_UShort
Character	.\\include\\Window.h	/^struct Character {$/;"	s
CharacterComplement	.\\include\\freetype\\tttables.h	/^    FT_Char    CharacterComplement[8];$/;"	m	struct:TT_PCLT_	typeref:typename:FT_Char[8]
CheckSum	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ULong  CheckSum;      \/* uncompressed checksum     *\/$/;"	m	struct:WOFF_TableRec_	typeref:typename:FT_ULong
CheckSum	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ULong  CheckSum;   \/*    table checksum *\/$/;"	m	struct:TT_TableRec_	typeref:typename:FT_ULong
CheckSum_Adjust	.\\include\\freetype\\tttables.h	/^    FT_Long    CheckSum_Adjust;$/;"	m	struct:TT_Header_	typeref:typename:FT_Long
ClearExtensionVariables	.\\src\\gl_core_3_3.cpp	/^static void ClearExtensionVariables(void)$/;"	f	typeref:typename:void	file:
CompLength	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ULong  CompLength;    \/* compressed table length   *\/$/;"	m	struct:WOFF_TableRec_	typeref:typename:FT_ULong
Created	.\\include\\freetype\\tttables.h	/^    FT_Long    Created [2];$/;"	m	struct:TT_Header_	typeref:typename:FT_Long[2]
CurlchkszEQ	.\\include\\curl\\curlrules.h	/^#define CurlchkszEQ(/;"	d
CurlchkszGE	.\\include\\curl\\curlrules.h	/^#define CurlchkszGE(/;"	d
DEPS	.\\makefile	/^DEPS=$(patsubst %,$(INCDIR)\/%,$(_DEPS))$/;"	m
Descender	.\\include\\freetype\\internal\\t1types.h	/^    FT_Fixed       Descender;$/;"	m	struct:AFM_FontInfoRec_	typeref:typename:FT_Fixed
Descender	.\\include\\freetype\\tttables.h	/^    FT_Short   Descender;$/;"	m	struct:TT_HoriHeader_	typeref:typename:FT_Short
Descender	.\\include\\freetype\\tttables.h	/^    FT_Short   Descender;$/;"	m	struct:TT_VertHeader_	typeref:typename:FT_Short
F2DOT14_TO_FIXED	.\\include\\freetype\\internal\\ftcalc.h	/^#define F2DOT14_TO_FIXED(/;"	d
FALSE	.\\include\\freetype\\internal\\ftobjs.h	/^#define FALSE /;"	d
FIXED_TO_INT	.\\include\\freetype\\internal\\ftcalc.h	/^#define FIXED_TO_INT(/;"	d
FLOAT_TO_FIXED	.\\include\\freetype\\internal\\ftcalc.h	/^#define FLOAT_TO_FIXED(/;"	d
FREETYPE_H_	.\\include\\freetype\\freetype.h	/^#define FREETYPE_H_$/;"	d
FREETYPE_MAJOR	.\\include\\freetype\\freetype.h	/^#define FREETYPE_MAJOR /;"	d
FREETYPE_MINOR	.\\include\\freetype\\freetype.h	/^#define FREETYPE_MINOR /;"	d
FREETYPE_PATCH	.\\include\\freetype\\freetype.h	/^#define FREETYPE_PATCH /;"	d
FT2BUILD_H_	.\\include\\ft2build.h	/^#define FT2BUILD_H_$/;"	d
FTADVANC_H_	.\\include\\freetype\\ftadvanc.h	/^#define FTADVANC_H_$/;"	d
FTAUTOH_H_	.\\include\\freetype\\ftautoh.h	/^#define FTAUTOH_H_$/;"	d
FTBBOX_H_	.\\include\\freetype\\ftbbox.h	/^#define FTBBOX_H_$/;"	d
FTBDF_H_	.\\include\\freetype\\ftbdf.h	/^#define FTBDF_H_$/;"	d
FTBITMAP_H_	.\\include\\freetype\\ftbitmap.h	/^#define FTBITMAP_H_$/;"	d
FTBZIP2_H_	.\\include\\freetype\\ftbzip2.h	/^#define FTBZIP2_H_$/;"	d
FTCACHE_H_	.\\include\\freetype\\ftcache.h	/^#define FTCACHE_H_$/;"	d
FTCALC_H_	.\\include\\freetype\\internal\\ftcalc.h	/^#define FTCALC_H_$/;"	d
FTCFFDRV_H_	.\\include\\freetype\\ftcffdrv.h	/^#define FTCFFDRV_H_$/;"	d
FTCID_H_	.\\include\\freetype\\ftcid.h	/^#define FTCID_H_$/;"	d
FTCONFIG_H_	.\\include\\freetype\\config\\ftconfig.h	/^#define FTCONFIG_H_$/;"	d
FTC_CMapCache	.\\include\\freetype\\ftcache.h	/^  typedef struct FTC_CMapCacheRec_*  FTC_CMapCache;$/;"	t	typeref:struct:FTC_CMapCacheRec_ *
FTC_FaceID	.\\include\\freetype\\ftcache.h	/^  typedef FT_Pointer  FTC_FaceID;$/;"	t	typeref:typename:FT_Pointer
FTC_Face_Requester	.\\include\\freetype\\ftcache.h	/^  (*FTC_Face_Requester)( FTC_FaceID  face_id,$/;"	t	typeref:typename:FT_Error (*)(FTC_FaceID face_id,FT_Library library,FT_Pointer req_data,FT_Face * aface)
FTC_IMAGE_TYPE_COMPARE	.\\include\\freetype\\ftcache.h	/^#define FTC_IMAGE_TYPE_COMPARE(/;"	d
FTC_ImageCache	.\\include\\freetype\\ftcache.h	/^  typedef struct FTC_ImageCacheRec_*  FTC_ImageCache;$/;"	t	typeref:struct:FTC_ImageCacheRec_ *
FTC_ImageType	.\\include\\freetype\\ftcache.h	/^  typedef struct FTC_ImageTypeRec_*  FTC_ImageType;$/;"	t	typeref:struct:FTC_ImageTypeRec_ *
FTC_ImageTypeRec	.\\include\\freetype\\ftcache.h	/^  } FTC_ImageTypeRec;$/;"	t	typeref:struct:FTC_ImageTypeRec_
FTC_ImageTypeRec_	.\\include\\freetype\\ftcache.h	/^  typedef struct  FTC_ImageTypeRec_$/;"	s
FTC_Manager	.\\include\\freetype\\ftcache.h	/^  typedef struct FTC_ManagerRec_*  FTC_Manager;$/;"	t	typeref:struct:FTC_ManagerRec_ *
FTC_Node	.\\include\\freetype\\ftcache.h	/^  typedef struct FTC_NodeRec_*  FTC_Node;$/;"	t	typeref:struct:FTC_NodeRec_ *
FTC_SBit	.\\include\\freetype\\ftcache.h	/^  typedef struct FTC_SBitRec_*  FTC_SBit;$/;"	t	typeref:struct:FTC_SBitRec_ *
FTC_SBitCache	.\\include\\freetype\\ftcache.h	/^  typedef struct FTC_SBitCacheRec_*  FTC_SBitCache;$/;"	t	typeref:struct:FTC_SBitCacheRec_ *
FTC_SBitRec	.\\include\\freetype\\ftcache.h	/^  } FTC_SBitRec;$/;"	t	typeref:struct:FTC_SBitRec_
FTC_SBitRec_	.\\include\\freetype\\ftcache.h	/^  typedef struct  FTC_SBitRec_$/;"	s
FTC_Scaler	.\\include\\freetype\\ftcache.h	/^  typedef struct FTC_ScalerRec_*  FTC_Scaler;$/;"	t	typeref:struct:FTC_ScalerRec_ *
FTC_ScalerRec	.\\include\\freetype\\ftcache.h	/^  } FTC_ScalerRec;$/;"	t	typeref:struct:FTC_ScalerRec_
FTC_ScalerRec_	.\\include\\freetype\\ftcache.h	/^  typedef struct  FTC_ScalerRec_$/;"	s
FTDEBUG_H_	.\\include\\freetype\\internal\\ftdebug.h	/^#define FTDEBUG_H_$/;"	d
FTDRIVER_H_	.\\include\\freetype\\internal\\ftdriver.h	/^#define FTDRIVER_H_$/;"	d
FTERRORS_H_	.\\include\\freetype\\fterrors.h	/^#define FTERRORS_H_$/;"	d
FTFNTFMT_H_	.\\include\\freetype\\ftfntfmt.h	/^#define FTFNTFMT_H_$/;"	d
FTGASP_H_	.\\include\\freetype\\ftgasp.h	/^#define FTGASP_H_$/;"	d
FTGLOADR_H_	.\\include\\freetype\\internal\\ftgloadr.h	/^#define FTGLOADR_H_$/;"	d
FTGLYPH_H_	.\\include\\freetype\\ftglyph.h	/^#define FTGLYPH_H_$/;"	d
FTGXVAL_H_	.\\include\\freetype\\ftgxval.h	/^#define FTGXVAL_H_$/;"	d
FTGZIP_H_	.\\include\\freetype\\ftgzip.h	/^#define FTGZIP_H_$/;"	d
FTHASH_H_	.\\include\\freetype\\internal\\fthash.h	/^#define FTHASH_H_$/;"	d
FTHEADER_H_	.\\include\\freetype\\config\\ftheader.h	/^#define FTHEADER_H_$/;"	d
FTIMAGE_H_	.\\include\\freetype\\ftimage.h	/^#define FTIMAGE_H_$/;"	d
FTINCREM_H_	.\\include\\freetype\\ftincrem.h	/^#define FTINCREM_H_$/;"	d
FTLCDFIL_H_	.\\include\\freetype\\ftlcdfil.h	/^#define FTLCDFIL_H_$/;"	d
FTLIST_H_	.\\include\\freetype\\ftlist.h	/^#define FTLIST_H_$/;"	d
FTLZW_H_	.\\include\\freetype\\ftlzw.h	/^#define FTLZW_H_$/;"	d
FTMAC_H_	.\\include\\freetype\\ftmac.h	/^#define FTMAC_H_$/;"	d
FTMEMORY_H_	.\\include\\freetype\\internal\\ftmemory.h	/^#define FTMEMORY_H_$/;"	d
FTMM_H_	.\\include\\freetype\\ftmm.h	/^#define FTMM_H_$/;"	d
FTMODAPI_H_	.\\include\\freetype\\ftmodapi.h	/^#define FTMODAPI_H_$/;"	d
FTMODERR_H_	.\\include\\freetype\\ftmoderr.h	/^#define FTMODERR_H_$/;"	d
FTOBJS_H_	.\\include\\freetype\\internal\\ftobjs.h	/^#define FTOBJS_H_$/;"	d
FTOPTION_H_	.\\include\\freetype\\config\\ftoption.h	/^#define FTOPTION_H_$/;"	d
FTOTVAL_H_	.\\include\\freetype\\ftotval.h	/^#define FTOTVAL_H_$/;"	d
FTOUTLN_H_	.\\include\\freetype\\ftoutln.h	/^#define FTOUTLN_H_$/;"	d
FTPFR_H_	.\\include\\freetype\\ftpfr.h	/^#define FTPFR_H_$/;"	d
FTPIC_H_	.\\include\\freetype\\internal\\ftpic.h	/^#define FTPIC_H_$/;"	d
FTRENDER_H_	.\\include\\freetype\\ftrender.h	/^#define FTRENDER_H_$/;"	d
FTRFORK_H_	.\\include\\freetype\\internal\\ftrfork.h	/^#define FTRFORK_H_$/;"	d
FTRenderer_getCBox	.\\include\\freetype\\ftrender.h	/^#define FTRenderer_getCBox /;"	d
FTRenderer_render	.\\include\\freetype\\ftrender.h	/^#define FTRenderer_render /;"	d
FTRenderer_setMode	.\\include\\freetype\\ftrender.h	/^#define FTRenderer_setMode /;"	d
FTRenderer_transform	.\\include\\freetype\\ftrender.h	/^#define FTRenderer_transform /;"	d
FTSERV_H_	.\\include\\freetype\\internal\\ftserv.h	/^#define FTSERV_H_$/;"	d
FTSIZES_H_	.\\include\\freetype\\ftsizes.h	/^#define FTSIZES_H_$/;"	d
FTSNAMES_H_	.\\include\\freetype\\ftsnames.h	/^#define FTSNAMES_H_$/;"	d
FTSTDLIB_H_	.\\include\\freetype\\config\\ftstdlib.h	/^#define FTSTDLIB_H_$/;"	d
FTSTREAM_H_	.\\include\\freetype\\internal\\ftstream.h	/^#define FTSTREAM_H_$/;"	d
FTSTROKE_H_	.\\include\\freetype\\ftstroke.h	/^#define FTSTROKE_H_$/;"	d
FTSYNTH_H_	.\\include\\freetype\\ftsynth.h	/^#define FTSYNTH_H_$/;"	d
FTSYSTEM_H_	.\\include\\freetype\\ftsystem.h	/^#define FTSYSTEM_H_$/;"	d
FTTRIGON_H_	.\\include\\freetype\\fttrigon.h	/^#define FTTRIGON_H_$/;"	d
FTTTDRV_H_	.\\include\\freetype\\ftttdrv.h	/^#define FTTTDRV_H_$/;"	d
FTTYPES_H_	.\\include\\freetype\\fttypes.h	/^#define FTTYPES_H_$/;"	d
FTVALID_H_	.\\include\\freetype\\internal\\ftvalid.h	/^#define FTVALID_H_$/;"	d
FTWINFNT_H_	.\\include\\freetype\\ftwinfnt.h	/^#define FTWINFNT_H_$/;"	d
FT_ABS	.\\include\\freetype\\internal\\ftobjs.h	/^#define FT_ABS(/;"	d
FT_ADVANCES_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_ADVANCES_H /;"	d
FT_ADVANCE_FLAG_FAST_ONLY	.\\include\\freetype\\ftadvanc.h	/^#define FT_ADVANCE_FLAG_FAST_ONLY /;"	d
FT_ALLOC	.\\include\\freetype\\internal\\ftmemory.h	/^#define FT_ALLOC(/;"	d
FT_ALLOC_MULT	.\\include\\freetype\\internal\\ftmemory.h	/^#define FT_ALLOC_MULT(/;"	d
FT_ANGLE_2PI	.\\include\\freetype\\fttrigon.h	/^#define FT_ANGLE_2PI /;"	d
FT_ANGLE_PI	.\\include\\freetype\\fttrigon.h	/^#define FT_ANGLE_PI /;"	d
FT_ANGLE_PI2	.\\include\\freetype\\fttrigon.h	/^#define FT_ANGLE_PI2 /;"	d
FT_ANGLE_PI4	.\\include\\freetype\\fttrigon.h	/^#define FT_ANGLE_PI4 /;"	d
FT_ARRAY_CHECK	.\\include\\freetype\\internal\\ftmemory.h	/^#define FT_ARRAY_CHECK(/;"	d
FT_ARRAY_COPY	.\\include\\freetype\\internal\\ftmemory.h	/^#define FT_ARRAY_COPY(/;"	d
FT_ARRAY_MAX	.\\include\\freetype\\internal\\ftmemory.h	/^#define FT_ARRAY_MAX(/;"	d
FT_ARRAY_MOVE	.\\include\\freetype\\internal\\ftmemory.h	/^#define FT_ARRAY_MOVE(/;"	d
FT_ARRAY_ZERO	.\\include\\freetype\\internal\\ftmemory.h	/^#define FT_ARRAY_ZERO(/;"	d
FT_ASSERT	.\\include\\freetype\\internal\\ftdebug.h	/^#define FT_ASSERT(/;"	d
FT_ASSIGNP	.\\include\\freetype\\internal\\ftmemory.h	/^#define FT_ASSIGNP(/;"	d
FT_ASSIGNP_INNER	.\\include\\freetype\\internal\\ftmemory.h	/^#define FT_ASSIGNP_INNER(/;"	d
FT_AUTOHINTER_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_AUTOHINTER_H /;"	d
FT_AUTOHINTER_SCRIPT_CJK	.\\include\\freetype\\ftautoh.h	/^#define FT_AUTOHINTER_SCRIPT_CJK /;"	d
FT_AUTOHINTER_SCRIPT_INDIC	.\\include\\freetype\\ftautoh.h	/^#define FT_AUTOHINTER_SCRIPT_INDIC /;"	d
FT_AUTOHINTER_SCRIPT_LATIN	.\\include\\freetype\\ftautoh.h	/^#define FT_AUTOHINTER_SCRIPT_LATIN /;"	d
FT_AUTOHINTER_SCRIPT_NONE	.\\include\\freetype\\ftautoh.h	/^#define FT_AUTOHINTER_SCRIPT_NONE /;"	d
FT_Alloc_Func	.\\include\\freetype\\ftsystem.h	/^  (*FT_Alloc_Func)( FT_Memory  memory,$/;"	t	typeref:typename:void * (*)(FT_Memory memory,long size)
FT_Angle	.\\include\\freetype\\fttrigon.h	/^  typedef FT_Fixed  FT_Angle;$/;"	t	typeref:typename:FT_Fixed
FT_AutoHinter	.\\include\\freetype\\internal\\autohint.h	/^  typedef struct FT_AutoHinterRec_  *FT_AutoHinter;$/;"	t	typeref:struct:FT_AutoHinterRec_ *
FT_AutoHinter_GlobalDoneFunc	.\\include\\freetype\\internal\\autohint.h	/^  (*FT_AutoHinter_GlobalDoneFunc)( FT_AutoHinter  hinter,$/;"	t	typeref:typename:void (*)(FT_AutoHinter hinter,void * global)
FT_AutoHinter_GlobalGetFunc	.\\include\\freetype\\internal\\autohint.h	/^  (*FT_AutoHinter_GlobalGetFunc)( FT_AutoHinter  hinter,$/;"	t	typeref:typename:void (*)(FT_AutoHinter hinter,FT_Face face,void ** global_hints,long * global_len)
FT_AutoHinter_GlobalResetFunc	.\\include\\freetype\\internal\\autohint.h	/^  (*FT_AutoHinter_GlobalResetFunc)( FT_AutoHinter  hinter,$/;"	t	typeref:typename:void (*)(FT_AutoHinter hinter,FT_Face face)
FT_AutoHinter_GlyphLoadFunc	.\\include\\freetype\\internal\\autohint.h	/^  (*FT_AutoHinter_GlyphLoadFunc)( FT_AutoHinter  hinter,$/;"	t	typeref:typename:FT_Error (*)(FT_AutoHinter hinter,FT_GlyphSlot slot,FT_Size size,FT_UInt glyph_index,FT_Int32 load_flags)
FT_AutoHinter_Interface	.\\include\\freetype\\internal\\autohint.h	/^  } FT_AutoHinter_InterfaceRec, *FT_AutoHinter_Interface;$/;"	t	typeref:struct:FT_AutoHinter_InterfaceRec_ *
FT_AutoHinter_InterfaceRec	.\\include\\freetype\\internal\\autohint.h	/^  } FT_AutoHinter_InterfaceRec, *FT_AutoHinter_Interface;$/;"	t	typeref:struct:FT_AutoHinter_InterfaceRec_
FT_AutoHinter_InterfaceRec_	.\\include\\freetype\\internal\\autohint.h	/^  typedef struct  FT_AutoHinter_InterfaceRec_$/;"	s
FT_BASE	.\\include\\freetype\\config\\ftconfig.h	/^#define FT_BASE(/;"	d
FT_BASE_DEF	.\\include\\freetype\\config\\ftconfig.h	/^#define FT_BASE_DEF(/;"	d
FT_BBOX_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_BBOX_H /;"	d
FT_BBox	.\\include\\freetype\\ftimage.h	/^  } FT_BBox;$/;"	t	typeref:struct:FT_BBox_
FT_BBox_	.\\include\\freetype\\ftimage.h	/^  typedef struct  FT_BBox_$/;"	s
FT_BDF_GetCharsetIdFunc	.\\include\\freetype\\internal\\services\\svbdf.h	/^  (*FT_BDF_GetCharsetIdFunc)( FT_Face       face,$/;"	t	typeref:typename:FT_Error (*)(FT_Face face,const char ** acharset_encoding,const char ** acharset_registry)
FT_BDF_GetPropertyFunc	.\\include\\freetype\\internal\\services\\svbdf.h	/^  (*FT_BDF_GetPropertyFunc)( FT_Face           face,$/;"	t	typeref:typename:FT_Error (*)(FT_Face face,const char * prop_name,BDF_PropertyRec * aproperty)
FT_BDF_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_BDF_H /;"	d
FT_BEGIN_HEADER	.\\include\\freetype\\config\\ftheader.h	/^#define FT_BEGIN_HEADER /;"	d
FT_BEGIN_STMNT	.\\include\\freetype\\config\\ftconfig.h	/^#define FT_BEGIN_STMNT /;"	d
FT_BITMAP_GLYPH	.\\include\\freetype\\internal\\ftobjs.h	/^#define FT_BITMAP_GLYPH(/;"	d
FT_BITMAP_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_BITMAP_H /;"	d
FT_BOOL	.\\include\\freetype\\fttypes.h	/^#define FT_BOOL(/;"	d
FT_BYTE_	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_BYTE_(/;"	d
FT_BYTE_U16	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_BYTE_U16(/;"	d
FT_BYTE_U32	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_BYTE_U32(/;"	d
FT_BZIP2_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_BZIP2_H /;"	d
FT_Bitmap	.\\include\\freetype\\ftimage.h	/^  } FT_Bitmap;$/;"	t	typeref:struct:FT_Bitmap_
FT_BitmapGlyph	.\\include\\freetype\\ftglyph.h	/^  typedef struct FT_BitmapGlyphRec_*  FT_BitmapGlyph;$/;"	t	typeref:struct:FT_BitmapGlyphRec_ *
FT_BitmapGlyphRec	.\\include\\freetype\\ftglyph.h	/^  } FT_BitmapGlyphRec;$/;"	t	typeref:struct:FT_BitmapGlyphRec_
FT_BitmapGlyphRec_	.\\include\\freetype\\ftglyph.h	/^  typedef struct  FT_BitmapGlyphRec_$/;"	s
FT_Bitmap_	.\\include\\freetype\\ftimage.h	/^  typedef struct  FT_Bitmap_$/;"	s
FT_Bitmap_LcdFilterFunc	.\\include\\freetype\\internal\\ftobjs.h	/^  typedef void  (*FT_Bitmap_LcdFilterFunc)( FT_Bitmap*      bitmap,$/;"	t	typeref:typename:void (*)(FT_Bitmap * bitmap,FT_Render_Mode render_mode,FT_Library library)
FT_Bitmap_Size	.\\include\\freetype\\freetype.h	/^  } FT_Bitmap_Size;$/;"	t	typeref:struct:FT_Bitmap_Size_
FT_Bitmap_Size_	.\\include\\freetype\\freetype.h	/^  typedef struct  FT_Bitmap_Size_$/;"	s
FT_Bool	.\\include\\freetype\\fttypes.h	/^  typedef unsigned char  FT_Bool;$/;"	t	typeref:typename:unsigned char
FT_Byte	.\\include\\freetype\\fttypes.h	/^  typedef unsigned char  FT_Byte;$/;"	t	typeref:typename:unsigned char
FT_Bytes	.\\include\\freetype\\fttypes.h	/^  typedef const FT_Byte*  FT_Bytes;$/;"	t	typeref:typename:const FT_Byte *
FT_CACHE_CHARMAP_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_CACHE_CHARMAP_H /;"	d
FT_CACHE_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_CACHE_H /;"	d
FT_CACHE_IMAGE_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_CACHE_IMAGE_H /;"	d
FT_CACHE_INTERNAL_CACHE_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_CACHE_INTERNAL_CACHE_H /;"	d
FT_CACHE_INTERNAL_GLYPH_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_CACHE_INTERNAL_GLYPH_H /;"	d
FT_CACHE_INTERNAL_IMAGE_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_CACHE_INTERNAL_IMAGE_H /;"	d
FT_CACHE_INTERNAL_MANAGER_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_CACHE_INTERNAL_MANAGER_H /;"	d
FT_CACHE_INTERNAL_MRU_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_CACHE_INTERNAL_MRU_H /;"	d
FT_CACHE_INTERNAL_SBITS_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_CACHE_INTERNAL_SBITS_H /;"	d
FT_CACHE_MANAGER_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_CACHE_MANAGER_H /;"	d
FT_CACHE_SMALL_BITMAPS_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_CACHE_SMALL_BITMAPS_H /;"	d
FT_CALLBACK_DEF	.\\include\\freetype\\config\\ftconfig.h	/^#define FT_CALLBACK_DEF(/;"	d
FT_CALLBACK_TABLE	.\\include\\freetype\\config\\ftconfig.h	/^#define FT_CALLBACK_TABLE /;"	d
FT_CALLBACK_TABLE_DEF	.\\include\\freetype\\config\\ftconfig.h	/^#define FT_CALLBACK_TABLE_DEF /;"	d
FT_CFF_DRIVER_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_CFF_DRIVER_H /;"	d
FT_CFF_HINTING_ADOBE	.\\include\\freetype\\ftcffdrv.h	/^#define FT_CFF_HINTING_ADOBE /;"	d
FT_CFF_HINTING_FREETYPE	.\\include\\freetype\\ftcffdrv.h	/^#define FT_CFF_HINTING_FREETYPE /;"	d
FT_CHAR_BIT	.\\include\\freetype\\config\\ftconfig.h	/^#define FT_CHAR_BIT /;"	d
FT_CHAR_BIT	.\\include\\freetype\\config\\ftstdlib.h	/^#define FT_CHAR_BIT /;"	d
FT_CID_GetCIDFromGlyphIndexFunc	.\\include\\freetype\\internal\\services\\svcid.h	/^  (*FT_CID_GetCIDFromGlyphIndexFunc)( FT_Face   face,$/;"	t	typeref:typename:FT_Error (*)(FT_Face face,FT_UInt glyph_index,FT_UInt * cid)
FT_CID_GetIsInternallyCIDKeyedFunc	.\\include\\freetype\\internal\\services\\svcid.h	/^  (*FT_CID_GetIsInternallyCIDKeyedFunc)( FT_Face   face,$/;"	t	typeref:typename:FT_Error (*)(FT_Face face,FT_Bool * is_cid)
FT_CID_GetRegistryOrderingSupplementFunc	.\\include\\freetype\\internal\\services\\svcid.h	/^  (*FT_CID_GetRegistryOrderingSupplementFunc)( FT_Face       face,$/;"	t	typeref:typename:FT_Error (*)(FT_Face face,const char ** registry,const char ** ordering,FT_Int * supplement)
FT_CID_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_CID_H /;"	d
FT_CMAP	.\\include\\freetype\\internal\\ftobjs.h	/^#define FT_CMAP(/;"	d
FT_CMAP_ENCODING	.\\include\\freetype\\internal\\ftobjs.h	/^#define FT_CMAP_ENCODING(/;"	d
FT_CMAP_ENCODING_ID	.\\include\\freetype\\internal\\ftobjs.h	/^#define FT_CMAP_ENCODING_ID(/;"	d
FT_CMAP_FACE	.\\include\\freetype\\internal\\ftobjs.h	/^#define FT_CMAP_FACE(/;"	d
FT_CMAP_PLATFORM_ID	.\\include\\freetype\\internal\\ftobjs.h	/^#define FT_CMAP_PLATFORM_ID(/;"	d
FT_CMap	.\\include\\freetype\\internal\\ftobjs.h	/^  typedef struct FT_CMapRec_*              FT_CMap;$/;"	t	typeref:struct:FT_CMapRec_ *
FT_CMapRec	.\\include\\freetype\\internal\\ftobjs.h	/^  } FT_CMapRec;$/;"	t	typeref:struct:FT_CMapRec_
FT_CMapRec_	.\\include\\freetype\\internal\\ftobjs.h	/^  typedef struct  FT_CMapRec_$/;"	s
FT_CMap_CharIndexFunc	.\\include\\freetype\\internal\\ftobjs.h	/^  (*FT_CMap_CharIndexFunc)( FT_CMap    cmap,$/;"	t	typeref:typename:FT_UInt (*)(FT_CMap cmap,FT_UInt32 char_code)
FT_CMap_CharNextFunc	.\\include\\freetype\\internal\\ftobjs.h	/^  (*FT_CMap_CharNextFunc)( FT_CMap     cmap,$/;"	t	typeref:typename:FT_UInt (*)(FT_CMap cmap,FT_UInt32 * achar_code)
FT_CMap_CharVarIndexFunc	.\\include\\freetype\\internal\\ftobjs.h	/^  (*FT_CMap_CharVarIndexFunc)( FT_CMap    cmap,$/;"	t	typeref:typename:FT_UInt (*)(FT_CMap cmap,FT_CMap unicode_cmap,FT_UInt32 char_code,FT_UInt32 variant_selector)
FT_CMap_CharVarIsDefaultFunc	.\\include\\freetype\\internal\\ftobjs.h	/^  (*FT_CMap_CharVarIsDefaultFunc)( FT_CMap    cmap,$/;"	t	typeref:typename:FT_Bool (*)(FT_CMap cmap,FT_UInt32 char_code,FT_UInt32 variant_selector)
FT_CMap_CharVariantListFunc	.\\include\\freetype\\internal\\ftobjs.h	/^  (*FT_CMap_CharVariantListFunc)( FT_CMap    cmap,$/;"	t	typeref:typename:FT_UInt32 * (*)(FT_CMap cmap,FT_Memory mem,FT_UInt32 char_code)
FT_CMap_Class	.\\include\\freetype\\internal\\ftobjs.h	/^  typedef const struct FT_CMap_ClassRec_*  FT_CMap_Class;$/;"	t	typeref:typename:const struct FT_CMap_ClassRec_ *
FT_CMap_ClassRec	.\\include\\freetype\\internal\\ftobjs.h	/^  } FT_CMap_ClassRec;$/;"	t	typeref:struct:FT_CMap_ClassRec_
FT_CMap_ClassRec_	.\\include\\freetype\\internal\\ftobjs.h	/^  typedef struct  FT_CMap_ClassRec_$/;"	s
FT_CMap_DoneFunc	.\\include\\freetype\\internal\\ftobjs.h	/^  (*FT_CMap_DoneFunc)( FT_CMap  cmap );$/;"	t	typeref:typename:void (*)(FT_CMap cmap)
FT_CMap_InitFunc	.\\include\\freetype\\internal\\ftobjs.h	/^  (*FT_CMap_InitFunc)( FT_CMap     cmap,$/;"	t	typeref:typename:FT_Error (*)(FT_CMap cmap,FT_Pointer init_data)
FT_CMap_VariantCharListFunc	.\\include\\freetype\\internal\\ftobjs.h	/^  (*FT_CMap_VariantCharListFunc)( FT_CMap    cmap,$/;"	t	typeref:typename:FT_UInt32 * (*)(FT_CMap cmap,FT_Memory mem,FT_UInt32 variant_selector)
FT_CMap_VariantListFunc	.\\include\\freetype\\internal\\ftobjs.h	/^  (*FT_CMap_VariantListFunc)( FT_CMap    cmap,$/;"	t	typeref:typename:FT_UInt32 * (*)(FT_CMap cmap,FT_Memory mem)
FT_CONFIG_CONFIG_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_CONFIG_CONFIG_H /;"	d
FT_CONFIG_MODULES_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_CONFIG_MODULES_H /;"	d
FT_CONFIG_OPTIONS_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_CONFIG_OPTIONS_H /;"	d
FT_CONFIG_OPTION_ADOBE_GLYPH_LIST	.\\include\\freetype\\config\\ftoption.h	/^#define FT_CONFIG_OPTION_ADOBE_GLYPH_LIST$/;"	d
FT_CONFIG_OPTION_GUESSING_EMBEDDED_RFORK	.\\include\\freetype\\config\\ftoption.h	/^#define FT_CONFIG_OPTION_GUESSING_EMBEDDED_RFORK$/;"	d
FT_CONFIG_OPTION_INCREMENTAL	.\\include\\freetype\\config\\ftoption.h	/^#define FT_CONFIG_OPTION_INCREMENTAL$/;"	d
FT_CONFIG_OPTION_INLINE_MULFIX	.\\include\\freetype\\config\\ftoption.h	/^#define FT_CONFIG_OPTION_INLINE_MULFIX$/;"	d
FT_CONFIG_OPTION_MAC_FONTS	.\\include\\freetype\\config\\ftoption.h	/^#define FT_CONFIG_OPTION_MAC_FONTS$/;"	d
FT_CONFIG_OPTION_POSTSCRIPT_NAMES	.\\include\\freetype\\config\\ftoption.h	/^#define FT_CONFIG_OPTION_POSTSCRIPT_NAMES$/;"	d
FT_CONFIG_OPTION_USE_LZW	.\\include\\freetype\\config\\ftoption.h	/^#define FT_CONFIG_OPTION_USE_LZW$/;"	d
FT_CONFIG_OPTION_USE_ZLIB	.\\include\\freetype\\config\\ftoption.h	/^#define FT_CONFIG_OPTION_USE_ZLIB$/;"	d
FT_CONFIG_STANDARD_LIBRARY_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_CONFIG_STANDARD_LIBRARY_H /;"	d
FT_CURVE_TAG	.\\include\\freetype\\ftimage.h	/^#define FT_CURVE_TAG(/;"	d
FT_CURVE_TAG_CONIC	.\\include\\freetype\\ftimage.h	/^#define FT_CURVE_TAG_CONIC /;"	d
FT_CURVE_TAG_CUBIC	.\\include\\freetype\\ftimage.h	/^#define FT_CURVE_TAG_CUBIC /;"	d
FT_CURVE_TAG_HAS_SCANMODE	.\\include\\freetype\\ftimage.h	/^#define FT_CURVE_TAG_HAS_SCANMODE /;"	d
FT_CURVE_TAG_ON	.\\include\\freetype\\ftimage.h	/^#define FT_CURVE_TAG_ON /;"	d
FT_CURVE_TAG_TOUCH_BOTH	.\\include\\freetype\\ftimage.h	/^#define FT_CURVE_TAG_TOUCH_BOTH /;"	d
FT_CURVE_TAG_TOUCH_X	.\\include\\freetype\\ftimage.h	/^#define FT_CURVE_TAG_TOUCH_X /;"	d
FT_CURVE_TAG_TOUCH_Y	.\\include\\freetype\\ftimage.h	/^#define FT_CURVE_TAG_TOUCH_Y /;"	d
FT_Char	.\\include\\freetype\\fttypes.h	/^  typedef signed char  FT_Char;$/;"	t	typeref:typename:signed char
FT_CharMap	.\\include\\freetype\\freetype.h	/^  typedef struct FT_CharMapRec_*  FT_CharMap;$/;"	t	typeref:struct:FT_CharMapRec_ *
FT_CharMapRec	.\\include\\freetype\\freetype.h	/^  } FT_CharMapRec;$/;"	t	typeref:struct:FT_CharMapRec_
FT_CharMapRec_	.\\include\\freetype\\freetype.h	/^  typedef struct  FT_CharMapRec_$/;"	s
FT_CharMap_CharIndexFunc	.\\include\\freetype\\internal\\ftdriver.h	/^  (*FT_CharMap_CharIndexFunc)( FT_CharMap  charmap,$/;"	t	typeref:typename:FT_UInt (*)(FT_CharMap charmap,FT_Long charcode)
FT_CharMap_CharNextFunc	.\\include\\freetype\\internal\\ftdriver.h	/^  (*FT_CharMap_CharNextFunc)( FT_CharMap  charmap,$/;"	t	typeref:typename:FT_Long (*)(FT_CharMap charmap,FT_Long charcode)
FT_Curve_Tag_Conic	.\\include\\freetype\\ftimage.h	/^#define FT_Curve_Tag_Conic /;"	d
FT_Curve_Tag_Cubic	.\\include\\freetype\\ftimage.h	/^#define FT_Curve_Tag_Cubic /;"	d
FT_Curve_Tag_On	.\\include\\freetype\\ftimage.h	/^#define FT_Curve_Tag_On /;"	d
FT_Curve_Tag_Touch_X	.\\include\\freetype\\ftimage.h	/^#define FT_Curve_Tag_Touch_X /;"	d
FT_Curve_Tag_Touch_Y	.\\include\\freetype\\ftimage.h	/^#define FT_Curve_Tag_Touch_Y /;"	d
FT_DEBUG_HOOK_TRUETYPE	.\\include\\freetype\\internal\\ftobjs.h	/^#define FT_DEBUG_HOOK_TRUETYPE /;"	d
FT_DEBUG_INNER	.\\include\\freetype\\internal\\ftmemory.h	/^#define FT_DEBUG_INNER(/;"	d
FT_DEBUG_LEVEL_ERROR	.\\include\\freetype\\internal\\ftdebug.h	/^#define FT_DEBUG_LEVEL_ERROR$/;"	d
FT_DECLARE_CMAP_CLASS	.\\include\\freetype\\internal\\ftobjs.h	/^#define FT_DECLARE_CMAP_CLASS(/;"	d
FT_DECLARE_DRIVER	.\\include\\freetype\\internal\\ftdriver.h	/^#define FT_DECLARE_DRIVER(/;"	d
FT_DECLARE_MODULE	.\\include\\freetype\\internal\\ftobjs.h	/^#define FT_DECLARE_MODULE(/;"	d
FT_DECLARE_RENDERER	.\\include\\freetype\\internal\\ftobjs.h	/^#define FT_DECLARE_RENDERER(/;"	d
FT_DEFINE_AUTOHINTER_INTERFACE	.\\include\\freetype\\internal\\autohint.h	/^          load_glyph_ )                                            \\$/;"	d
FT_DEFINE_AUTOHINTER_INTERFACE	.\\include\\freetype\\internal\\autohint.h	/^          load_glyph_ )                       \\$/;"	d
FT_DEFINE_CMAP_CLASS	.\\include\\freetype\\internal\\ftobjs.h	/^          variantchar_list_ )                            \\$/;"	d
FT_DEFINE_CMAP_CLASS	.\\include\\freetype\\internal\\ftobjs.h	/^          variantchar_list_ )       \\$/;"	d
FT_DEFINE_DRIVER	.\\include\\freetype\\internal\\ftdriver.h	/^          select_size_ )                                         \\$/;"	d
FT_DEFINE_DRIVER	.\\include\\freetype\\internal\\ftdriver.h	/^          select_size_ )                     \\$/;"	d
FT_DEFINE_GLYPH	.\\include\\freetype\\internal\\ftobjs.h	/^          prepare_ )                                  \\$/;"	d
FT_DEFINE_GLYPH	.\\include\\freetype\\internal\\ftobjs.h	/^          prepare_ )              \\$/;"	d
FT_DEFINE_MODULE	.\\include\\freetype\\internal\\ftobjs.h	/^          get_interface_ )                                       \\$/;"	d
FT_DEFINE_MODULE	.\\include\\freetype\\internal\\ftobjs.h	/^          get_interface_ )        \\$/;"	d
FT_DEFINE_OUTLINE_FUNCS	.\\include\\freetype\\internal\\ftobjs.h	/^          delta_ )                                   \\$/;"	d
FT_DEFINE_OUTLINE_FUNCS	.\\include\\freetype\\internal\\ftobjs.h	/^          delta_ )                         \\$/;"	d
FT_DEFINE_PSHINTER_INTERFACE	.\\include\\freetype\\internal\\pshints.h	/^          get_t2_funcs_ )                                  \\$/;"	d
FT_DEFINE_PSHINTER_INTERFACE	.\\include\\freetype\\internal\\pshints.h	/^          get_t2_funcs_ )                    \\$/;"	d
FT_DEFINE_RASTER_FUNCS	.\\include\\freetype\\internal\\ftobjs.h	/^          raster_done_ )                               \\$/;"	d
FT_DEFINE_RASTER_FUNCS	.\\include\\freetype\\internal\\ftobjs.h	/^          raster_done_ )           \\$/;"	d
FT_DEFINE_RENDERER	.\\include\\freetype\\internal\\ftobjs.h	/^          raster_class_ )                                        \\$/;"	d
FT_DEFINE_RENDERER	.\\include\\freetype\\internal\\ftobjs.h	/^          raster_class_ )                    \\$/;"	d
FT_DEFINE_ROOT_MODULE	.\\include\\freetype\\internal\\ftobjs.h	/^          get_interface_ )                          \\$/;"	d
FT_DEFINE_ROOT_MODULE	.\\include\\freetype\\internal\\ftobjs.h	/^          get_interface_ )      \\$/;"	d
FT_DEFINE_SERVICE	.\\include\\freetype\\internal\\ftserv.h	/^#define FT_DEFINE_SERVICE(/;"	d
FT_DEFINE_SERVICE	.\\include\\freetype\\internal\\services\\svbdf.h	/^  FT_DEFINE_SERVICE( BDF )$/;"	f
FT_DEFINE_SERVICE	.\\include\\freetype\\internal\\services\\svcid.h	/^  FT_DEFINE_SERVICE( CID )$/;"	f
FT_DEFINE_SERVICE	.\\include\\freetype\\internal\\services\\svgldict.h	/^  FT_DEFINE_SERVICE( GlyphDict )$/;"	f
FT_DEFINE_SERVICE	.\\include\\freetype\\internal\\services\\svgxval.h	/^  FT_DEFINE_SERVICE( CKERNvalidate )$/;"	f
FT_DEFINE_SERVICE	.\\include\\freetype\\internal\\services\\svgxval.h	/^  FT_DEFINE_SERVICE( GXvalidate )$/;"	f
FT_DEFINE_SERVICE	.\\include\\freetype\\internal\\services\\svkern.h	/^  FT_DEFINE_SERVICE( Kerning )$/;"	f
FT_DEFINE_SERVICE	.\\include\\freetype\\internal\\services\\svmm.h	/^  FT_DEFINE_SERVICE( MultiMasters )$/;"	f
FT_DEFINE_SERVICE	.\\include\\freetype\\internal\\services\\svotval.h	/^  FT_DEFINE_SERVICE( OTvalidate )$/;"	f
FT_DEFINE_SERVICE	.\\include\\freetype\\internal\\services\\svpfr.h	/^  FT_DEFINE_SERVICE( PfrMetrics )$/;"	f
FT_DEFINE_SERVICE	.\\include\\freetype\\internal\\services\\svpostnm.h	/^  FT_DEFINE_SERVICE( PsFontName )$/;"	f
FT_DEFINE_SERVICE	.\\include\\freetype\\internal\\services\\svprop.h	/^  FT_DEFINE_SERVICE( Properties )$/;"	f
FT_DEFINE_SERVICE	.\\include\\freetype\\internal\\services\\svpscmap.h	/^  FT_DEFINE_SERVICE( PsCMaps )$/;"	f
FT_DEFINE_SERVICE	.\\include\\freetype\\internal\\services\\svpsinfo.h	/^  FT_DEFINE_SERVICE( PsInfo )$/;"	f
FT_DEFINE_SERVICE	.\\include\\freetype\\internal\\services\\svsfnt.h	/^  FT_DEFINE_SERVICE( SFNT_Table )$/;"	f
FT_DEFINE_SERVICE	.\\include\\freetype\\internal\\services\\svttcmap.h	/^  FT_DEFINE_SERVICE( TTCMaps )$/;"	f
FT_DEFINE_SERVICE	.\\include\\freetype\\internal\\services\\svtteng.h	/^  FT_DEFINE_SERVICE( TrueTypeEngine )$/;"	f	typeref:typename:FT_BEGIN_HEADER
FT_DEFINE_SERVICE	.\\include\\freetype\\internal\\services\\svttglyf.h	/^  FT_DEFINE_SERVICE( TTGlyf )$/;"	f
FT_DEFINE_SERVICE	.\\include\\freetype\\internal\\services\\svwinfnt.h	/^  FT_DEFINE_SERVICE( WinFnt )$/;"	f
FT_DEFINE_SERVICEDESCREC1	.\\include\\freetype\\internal\\ftserv.h	/^                                   serv_id_1, serv_data_1 )                 \\$/;"	d
FT_DEFINE_SERVICEDESCREC2	.\\include\\freetype\\internal\\ftserv.h	/^                                   serv_id_2, serv_data_2 )                 \\$/;"	d
FT_DEFINE_SERVICEDESCREC3	.\\include\\freetype\\internal\\ftserv.h	/^                                   serv_id_3, serv_data_3 )                 \\$/;"	d
FT_DEFINE_SERVICEDESCREC4	.\\include\\freetype\\internal\\ftserv.h	/^                                   serv_id_4, serv_data_4 )                 \\$/;"	d
FT_DEFINE_SERVICEDESCREC5	.\\include\\freetype\\internal\\ftserv.h	/^                                   serv_id_5, serv_data_5 )                 \\$/;"	d
FT_DEFINE_SERVICEDESCREC6	.\\include\\freetype\\internal\\ftserv.h	/^                                   serv_id_6, serv_data_6 )                 \\$/;"	d
FT_DEFINE_SERVICEDESCREC7	.\\include\\freetype\\internal\\ftserv.h	/^                                   serv_id_7, serv_data_7 )                 \\$/;"	d
FT_DEFINE_SERVICE_BDFRec	.\\include\\freetype\\internal\\services\\svbdf.h	/^                                  get_property_ )                        \\$/;"	d
FT_DEFINE_SERVICE_CIDREC	.\\include\\freetype\\internal\\services\\svcid.h	/^                                  get_cid_from_glyph_index_ )               \\$/;"	d
FT_DEFINE_SERVICE_GLYPHDICTREC	.\\include\\freetype\\internal\\services\\svgldict.h	/^                                        name_index_)                   \\$/;"	d
FT_DEFINE_SERVICE_MULTIMASTERSREC	.\\include\\freetype\\internal\\services\\svmm.h	/^                                           set_var_design_ )                \\$/;"	d
FT_DEFINE_SERVICE_PROPERTIESREC	.\\include\\freetype\\internal\\services\\svprop.h	/^                                         get_property_ )        \\$/;"	d
FT_DEFINE_SERVICE_PROPERTIESREC	.\\include\\freetype\\internal\\services\\svprop.h	/^                                         get_property_ )  \\$/;"	d
FT_DEFINE_SERVICE_PSCMAPSREC	.\\include\\freetype\\internal\\services\\svpscmap.h	/^                                      adobe_expert_encoding_ )              \\$/;"	d
FT_DEFINE_SERVICE_PSFONTNAMEREC	.\\include\\freetype\\internal\\services\\svpostnm.h	/^#define FT_DEFINE_SERVICE_PSFONTNAMEREC(/;"	d
FT_DEFINE_SERVICE_PSINFOREC	.\\include\\freetype\\internal\\services\\svpsinfo.h	/^                                     get_font_value_ )           \\$/;"	d
FT_DEFINE_SERVICE_SFNT_TABLEREC	.\\include\\freetype\\internal\\services\\svsfnt.h	/^#define FT_DEFINE_SERVICE_SFNT_TABLEREC(/;"	d
FT_DEFINE_SERVICE_TTCMAPSREC	.\\include\\freetype\\internal\\services\\svttcmap.h	/^#define FT_DEFINE_SERVICE_TTCMAPSREC(/;"	d
FT_DEFINE_SERVICE_TTGLYFREC	.\\include\\freetype\\internal\\services\\svttglyf.h	/^#define FT_DEFINE_SERVICE_TTGLYFREC(/;"	d
FT_DEFINE_SFNT_INTERFACE	.\\include\\freetype\\internal\\sfnt.h	/^          get_name_ )                                   \\$/;"	d
FT_DEFINE_SFNT_INTERFACE	.\\include\\freetype\\internal\\sfnt.h	/^          get_name_ )                    \\$/;"	d
FT_DEPRECATED_ATTRIBUTE	.\\include\\freetype\\ftmac.h	/^#define FT_DEPRECATED_ATTRIBUTE /;"	d
FT_DRIVER	.\\include\\freetype\\internal\\ftobjs.h	/^#define FT_DRIVER(/;"	d
FT_DRIVER_CLASS	.\\include\\freetype\\internal\\ftobjs.h	/^#define FT_DRIVER_CLASS(/;"	d
FT_DRIVER_HAS_HINTER	.\\include\\freetype\\internal\\ftobjs.h	/^#define FT_DRIVER_HAS_HINTER(/;"	d
FT_DRIVER_HINTS_LIGHTLY	.\\include\\freetype\\internal\\ftobjs.h	/^#define FT_DRIVER_HINTS_LIGHTLY(/;"	d
FT_DRIVER_IS_SCALABLE	.\\include\\freetype\\internal\\ftobjs.h	/^#define FT_DRIVER_IS_SCALABLE(/;"	d
FT_DRIVER_USES_OUTLINES	.\\include\\freetype\\internal\\ftobjs.h	/^#define FT_DRIVER_USES_OUTLINES(/;"	d
FT_DUMMY_STMNT	.\\include\\freetype\\config\\ftconfig.h	/^#define FT_DUMMY_STMNT /;"	d
FT_DUP	.\\include\\freetype\\internal\\ftmemory.h	/^#define FT_DUP(/;"	d
FT_Data	.\\include\\freetype\\fttypes.h	/^  } FT_Data;$/;"	t	typeref:struct:FT_Data_
FT_Data_	.\\include\\freetype\\fttypes.h	/^  typedef struct  FT_Data_$/;"	s
FT_DebugHook_Func	.\\include\\freetype\\ftmodapi.h	/^  (*FT_DebugHook_Func)( void*  arg );$/;"	t	typeref:typename:void (*)(void * arg)
FT_Driver	.\\include\\freetype\\freetype.h	/^  typedef struct FT_DriverRec_*  FT_Driver;$/;"	t	typeref:struct:FT_DriverRec_ *
FT_DriverRec	.\\include\\freetype\\internal\\ftobjs.h	/^  } FT_DriverRec;$/;"	t	typeref:struct:FT_DriverRec_
FT_DriverRec_	.\\include\\freetype\\internal\\ftobjs.h	/^  typedef struct  FT_DriverRec_$/;"	s
FT_Driver_Class	.\\include\\freetype\\internal\\ftdriver.h	/^  } FT_Driver_ClassRec, *FT_Driver_Class;$/;"	t	typeref:struct:FT_Driver_ClassRec_ *
FT_Driver_ClassRec	.\\include\\freetype\\internal\\ftdriver.h	/^  } FT_Driver_ClassRec, *FT_Driver_Class;$/;"	t	typeref:struct:FT_Driver_ClassRec_
FT_Driver_ClassRec_	.\\include\\freetype\\internal\\ftdriver.h	/^  typedef struct  FT_Driver_ClassRec_$/;"	s
FT_ENCODING_MS_BIG5	.\\include\\freetype\\freetype.h	/^    FT_ENCODING_MS_BIG5    = FT_ENCODING_BIG5,$/;"	e	enum:FT_Encoding_
FT_ENCODING_MS_GB2312	.\\include\\freetype\\freetype.h	/^    FT_ENCODING_MS_GB2312  = FT_ENCODING_GB2312,$/;"	e	enum:FT_Encoding_
FT_ENCODING_MS_JOHAB	.\\include\\freetype\\freetype.h	/^    FT_ENCODING_MS_JOHAB   = FT_ENCODING_JOHAB,$/;"	e	enum:FT_Encoding_
FT_ENCODING_MS_SJIS	.\\include\\freetype\\freetype.h	/^    FT_ENCODING_MS_SJIS    = FT_ENCODING_SJIS,$/;"	e	enum:FT_Encoding_
FT_ENCODING_MS_WANSUNG	.\\include\\freetype\\freetype.h	/^    FT_ENCODING_MS_WANSUNG = FT_ENCODING_WANSUNG,$/;"	e	enum:FT_Encoding_
FT_ENC_TAG	.\\include\\freetype\\freetype.h	/^    FT_ENC_TAG( FT_ENCODING_ADOBE_CUSTOM,   'A', 'D', 'B', 'C' ),$/;"	e	enum:FT_Encoding_
FT_ENC_TAG	.\\include\\freetype\\freetype.h	/^    FT_ENC_TAG( FT_ENCODING_ADOBE_EXPERT,   'A', 'D', 'B', 'E' ),$/;"	e	enum:FT_Encoding_
FT_ENC_TAG	.\\include\\freetype\\freetype.h	/^    FT_ENC_TAG( FT_ENCODING_ADOBE_LATIN_1,  'l', 'a', 't', '1' ),$/;"	e	enum:FT_Encoding_
FT_ENC_TAG	.\\include\\freetype\\freetype.h	/^    FT_ENC_TAG( FT_ENCODING_ADOBE_STANDARD, 'A', 'D', 'O', 'B' ),$/;"	e	enum:FT_Encoding_
FT_ENC_TAG	.\\include\\freetype\\freetype.h	/^    FT_ENC_TAG( FT_ENCODING_APPLE_ROMAN, 'a', 'r', 'm', 'n' )$/;"	e	enum:FT_Encoding_
FT_ENC_TAG	.\\include\\freetype\\freetype.h	/^    FT_ENC_TAG( FT_ENCODING_BIG5,    'b', 'i', 'g', '5' ),$/;"	e	enum:FT_Encoding_
FT_ENC_TAG	.\\include\\freetype\\freetype.h	/^    FT_ENC_TAG( FT_ENCODING_GB2312,  'g', 'b', ' ', ' ' ),$/;"	e	enum:FT_Encoding_
FT_ENC_TAG	.\\include\\freetype\\freetype.h	/^    FT_ENC_TAG( FT_ENCODING_JOHAB,   'j', 'o', 'h', 'a' ),$/;"	e	enum:FT_Encoding_
FT_ENC_TAG	.\\include\\freetype\\freetype.h	/^    FT_ENC_TAG( FT_ENCODING_MS_SYMBOL, 's', 'y', 'm', 'b' ),$/;"	e	enum:FT_Encoding_
FT_ENC_TAG	.\\include\\freetype\\freetype.h	/^    FT_ENC_TAG( FT_ENCODING_NONE, 0, 0, 0, 0 ),$/;"	e	enum:FT_Encoding_
FT_ENC_TAG	.\\include\\freetype\\freetype.h	/^    FT_ENC_TAG( FT_ENCODING_OLD_LATIN_2, 'l', 'a', 't', '2' ),$/;"	e	enum:FT_Encoding_
FT_ENC_TAG	.\\include\\freetype\\freetype.h	/^    FT_ENC_TAG( FT_ENCODING_SJIS,    's', 'j', 'i', 's' ),$/;"	e	enum:FT_Encoding_
FT_ENC_TAG	.\\include\\freetype\\freetype.h	/^    FT_ENC_TAG( FT_ENCODING_UNICODE,   'u', 'n', 'i', 'c' ),$/;"	e	enum:FT_Encoding_
FT_ENC_TAG	.\\include\\freetype\\freetype.h	/^    FT_ENC_TAG( FT_ENCODING_WANSUNG, 'w', 'a', 'n', 's' ),$/;"	e	enum:FT_Encoding_
FT_ENC_TAG	.\\include\\freetype\\freetype.h	/^#define FT_ENC_TAG(/;"	d
FT_END_HEADER	.\\include\\freetype\\config\\ftheader.h	/^#define FT_END_HEADER /;"	d
FT_END_STMNT	.\\include\\freetype\\config\\ftconfig.h	/^#define FT_END_STMNT /;"	d
FT_ERR	.\\include\\freetype\\fttypes.h	/^#define FT_ERR(/;"	d
FT_ERROR	.\\include\\freetype\\internal\\ftdebug.h	/^#define FT_ERROR(/;"	d
FT_ERRORDEF	.\\include\\freetype\\fterrors.h	/^#define FT_ERRORDEF(/;"	d
FT_ERRORDEF_	.\\include\\freetype\\fterrors.h	/^#define FT_ERRORDEF_(/;"	d
FT_ERRORS_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_ERRORS_H /;"	d
FT_ERROR_BASE	.\\include\\freetype\\fttypes.h	/^#define FT_ERROR_BASE(/;"	d
FT_ERROR_DEFINITIONS_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_ERROR_DEFINITIONS_H /;"	d
FT_ERROR_END_LIST	.\\include\\freetype\\fterrors.h	/^#define FT_ERROR_END_LIST /;"	d
FT_ERROR_MODULE	.\\include\\freetype\\fttypes.h	/^#define FT_ERROR_MODULE(/;"	d
FT_ERROR_START_LIST	.\\include\\freetype\\fterrors.h	/^#define FT_ERROR_START_LIST /;"	d
FT_ERR_BASE	.\\include\\freetype\\fterrors.h	/^#define FT_ERR_BASE /;"	d
FT_ERR_CAT	.\\include\\freetype\\fttypes.h	/^#define FT_ERR_CAT(/;"	d
FT_ERR_EQ	.\\include\\freetype\\fttypes.h	/^#define FT_ERR_EQ(/;"	d
FT_ERR_NEQ	.\\include\\freetype\\fttypes.h	/^#define FT_ERR_NEQ(/;"	d
FT_ERR_PREFIX	.\\include\\freetype\\fterrors.h	/^#define FT_ERR_PREFIX /;"	d
FT_ERR_XCAT	.\\include\\freetype\\fttypes.h	/^#define FT_ERR_XCAT(/;"	d
FT_EXPORT	.\\include\\freetype\\config\\ftconfig.h	/^#define FT_EXPORT(/;"	d
FT_EXPORT_DEF	.\\include\\freetype\\config\\ftconfig.h	/^#define FT_EXPORT_DEF(/;"	d
FT_EXPORT_VAR	.\\include\\freetype\\config\\ftconfig.h	/^#define FT_EXPORT_VAR(/;"	d
FT_Encoding	.\\include\\freetype\\freetype.h	/^  } FT_Encoding;$/;"	t	typeref:enum:FT_Encoding_
FT_Encoding_	.\\include\\freetype\\freetype.h	/^  typedef enum  FT_Encoding_$/;"	g
FT_Error	.\\include\\freetype\\fttypes.h	/^  typedef int  FT_Error;$/;"	t	typeref:typename:int
FT_F26Dot6	.\\include\\freetype\\fttypes.h	/^  typedef signed long  FT_F26Dot6;$/;"	t	typeref:typename:signed long
FT_F2Dot14	.\\include\\freetype\\fttypes.h	/^  typedef signed short  FT_F2Dot14;$/;"	t	typeref:typename:signed short
FT_FACE	.\\include\\freetype\\internal\\ftobjs.h	/^#define FT_FACE(/;"	d
FT_FACE_DRIVER	.\\include\\freetype\\internal\\ftobjs.h	/^#define FT_FACE_DRIVER(/;"	d
FT_FACE_FIND_GLOBAL_SERVICE	.\\include\\freetype\\internal\\ftserv.h	/^#define FT_FACE_FIND_GLOBAL_SERVICE(/;"	d
FT_FACE_FIND_SERVICE	.\\include\\freetype\\internal\\ftserv.h	/^#define FT_FACE_FIND_SERVICE(/;"	d
FT_FACE_FLAG_CID_KEYED	.\\include\\freetype\\freetype.h	/^#define FT_FACE_FLAG_CID_KEYED /;"	d
FT_FACE_FLAG_COLOR	.\\include\\freetype\\freetype.h	/^#define FT_FACE_FLAG_COLOR /;"	d
FT_FACE_FLAG_EXTERNAL_STREAM	.\\include\\freetype\\freetype.h	/^#define FT_FACE_FLAG_EXTERNAL_STREAM /;"	d
FT_FACE_FLAG_FAST_GLYPHS	.\\include\\freetype\\freetype.h	/^#define FT_FACE_FLAG_FAST_GLYPHS /;"	d
FT_FACE_FLAG_FIXED_SIZES	.\\include\\freetype\\freetype.h	/^#define FT_FACE_FLAG_FIXED_SIZES /;"	d
FT_FACE_FLAG_FIXED_WIDTH	.\\include\\freetype\\freetype.h	/^#define FT_FACE_FLAG_FIXED_WIDTH /;"	d
FT_FACE_FLAG_GLYPH_NAMES	.\\include\\freetype\\freetype.h	/^#define FT_FACE_FLAG_GLYPH_NAMES /;"	d
FT_FACE_FLAG_HINTER	.\\include\\freetype\\freetype.h	/^#define FT_FACE_FLAG_HINTER /;"	d
FT_FACE_FLAG_HORIZONTAL	.\\include\\freetype\\freetype.h	/^#define FT_FACE_FLAG_HORIZONTAL /;"	d
FT_FACE_FLAG_KERNING	.\\include\\freetype\\freetype.h	/^#define FT_FACE_FLAG_KERNING /;"	d
FT_FACE_FLAG_MULTIPLE_MASTERS	.\\include\\freetype\\freetype.h	/^#define FT_FACE_FLAG_MULTIPLE_MASTERS /;"	d
FT_FACE_FLAG_SCALABLE	.\\include\\freetype\\freetype.h	/^#define FT_FACE_FLAG_SCALABLE /;"	d
FT_FACE_FLAG_SFNT	.\\include\\freetype\\freetype.h	/^#define FT_FACE_FLAG_SFNT /;"	d
FT_FACE_FLAG_TRICKY	.\\include\\freetype\\freetype.h	/^#define FT_FACE_FLAG_TRICKY /;"	d
FT_FACE_FLAG_VERTICAL	.\\include\\freetype\\freetype.h	/^#define FT_FACE_FLAG_VERTICAL /;"	d
FT_FACE_LIBRARY	.\\include\\freetype\\internal\\ftobjs.h	/^#define FT_FACE_LIBRARY(/;"	d
FT_FACE_LOOKUP_SERVICE	.\\include\\freetype\\internal\\ftserv.h	/^#define FT_FACE_LOOKUP_SERVICE(/;"	d
FT_FACE_MEMORY	.\\include\\freetype\\internal\\ftobjs.h	/^#define FT_FACE_MEMORY(/;"	d
FT_FACE_SIZE	.\\include\\freetype\\internal\\ftobjs.h	/^#define FT_FACE_SIZE(/;"	d
FT_FACE_SLOT	.\\include\\freetype\\internal\\ftobjs.h	/^#define FT_FACE_SLOT(/;"	d
FT_FACE_STREAM	.\\include\\freetype\\internal\\ftobjs.h	/^#define FT_FACE_STREAM(/;"	d
FT_FIELD_OFFSET	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_FIELD_OFFSET(/;"	d
FT_FIELD_SIZE	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_FIELD_SIZE(/;"	d
FT_FIELD_SIZE_DELTA	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_FIELD_SIZE_DELTA(/;"	d
FT_FILE	.\\include\\freetype\\config\\ftstdlib.h	/^#define FT_FILE /;"	d
FT_FONT_FORMATS_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_FONT_FORMATS_H /;"	d
FT_FONT_FORMAT_BDF	.\\include\\freetype\\internal\\services\\svfntfmt.h	/^#define FT_FONT_FORMAT_BDF /;"	d
FT_FONT_FORMAT_CFF	.\\include\\freetype\\internal\\services\\svfntfmt.h	/^#define FT_FONT_FORMAT_CFF /;"	d
FT_FONT_FORMAT_CID	.\\include\\freetype\\internal\\services\\svfntfmt.h	/^#define FT_FONT_FORMAT_CID /;"	d
FT_FONT_FORMAT_PCF	.\\include\\freetype\\internal\\services\\svfntfmt.h	/^#define FT_FONT_FORMAT_PCF /;"	d
FT_FONT_FORMAT_PFR	.\\include\\freetype\\internal\\services\\svfntfmt.h	/^#define FT_FONT_FORMAT_PFR /;"	d
FT_FONT_FORMAT_TRUETYPE	.\\include\\freetype\\internal\\services\\svfntfmt.h	/^#define FT_FONT_FORMAT_TRUETYPE /;"	d
FT_FONT_FORMAT_TYPE_1	.\\include\\freetype\\internal\\services\\svfntfmt.h	/^#define FT_FONT_FORMAT_TYPE_1 /;"	d
FT_FONT_FORMAT_TYPE_42	.\\include\\freetype\\internal\\services\\svfntfmt.h	/^#define FT_FONT_FORMAT_TYPE_42 /;"	d
FT_FONT_FORMAT_WINFNT	.\\include\\freetype\\internal\\services\\svfntfmt.h	/^#define FT_FONT_FORMAT_WINFNT /;"	d
FT_FRAME_BYTE	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_FRAME_BYTE(/;"	d
FT_FRAME_BYTES	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_FRAME_BYTES(/;"	d
FT_FRAME_CHAR	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_FRAME_CHAR(/;"	d
FT_FRAME_END	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_FRAME_END /;"	d
FT_FRAME_ENTER	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_FRAME_ENTER(/;"	d
FT_FRAME_EXIT	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_FRAME_EXIT(/;"	d
FT_FRAME_EXTRACT	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_FRAME_EXTRACT(/;"	d
FT_FRAME_FIELD	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_FRAME_FIELD(/;"	d
FT_FRAME_LONG	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_FRAME_LONG(/;"	d
FT_FRAME_LONG_LE	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_FRAME_LONG_LE(/;"	d
FT_FRAME_OFF3	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_FRAME_OFF3(/;"	d
FT_FRAME_OFF3_LE	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_FRAME_OFF3_LE(/;"	d
FT_FRAME_OP_BYTE	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_FRAME_OP_BYTE /;"	d
FT_FRAME_OP_BYTES	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_FRAME_OP_BYTES /;"	d
FT_FRAME_OP_COMMAND	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_FRAME_OP_COMMAND(/;"	d
FT_FRAME_OP_END	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_FRAME_OP_END /;"	d
FT_FRAME_OP_LITTLE	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_FRAME_OP_LITTLE /;"	d
FT_FRAME_OP_LONG	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_FRAME_OP_LONG /;"	d
FT_FRAME_OP_OFF3	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_FRAME_OP_OFF3 /;"	d
FT_FRAME_OP_SHIFT	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_FRAME_OP_SHIFT /;"	d
FT_FRAME_OP_SHORT	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_FRAME_OP_SHORT /;"	d
FT_FRAME_OP_SIGNED	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_FRAME_OP_SIGNED /;"	d
FT_FRAME_OP_START	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_FRAME_OP_START /;"	d
FT_FRAME_RELEASE	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_FRAME_RELEASE(/;"	d
FT_FRAME_SHORT	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_FRAME_SHORT(/;"	d
FT_FRAME_SHORT_LE	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_FRAME_SHORT_LE(/;"	d
FT_FRAME_SKIP_BYTE	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_FRAME_SKIP_BYTE /;"	d
FT_FRAME_SKIP_BYTES	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_FRAME_SKIP_BYTES(/;"	d
FT_FRAME_SKIP_LONG	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_FRAME_SKIP_LONG /;"	d
FT_FRAME_SKIP_SHORT	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_FRAME_SKIP_SHORT /;"	d
FT_FRAME_START	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_FRAME_START(/;"	d
FT_FRAME_ULONG	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_FRAME_ULONG(/;"	d
FT_FRAME_ULONG_LE	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_FRAME_ULONG_LE(/;"	d
FT_FRAME_UOFF3	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_FRAME_UOFF3(/;"	d
FT_FRAME_UOFF3_LE	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_FRAME_UOFF3_LE(/;"	d
FT_FRAME_USHORT	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_FRAME_USHORT(/;"	d
FT_FRAME_USHORT_LE	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_FRAME_USHORT_LE(/;"	d
FT_FREE	.\\include\\freetype\\internal\\ftmemory.h	/^#define FT_FREE(/;"	d
FT_FREETYPE_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_FREETYPE_H /;"	d
FT_FSTYPE_BITMAP_EMBEDDING_ONLY	.\\include\\freetype\\freetype.h	/^#define FT_FSTYPE_BITMAP_EMBEDDING_ONLY /;"	d
FT_FSTYPE_EDITABLE_EMBEDDING	.\\include\\freetype\\freetype.h	/^#define FT_FSTYPE_EDITABLE_EMBEDDING /;"	d
FT_FSTYPE_INSTALLABLE_EMBEDDING	.\\include\\freetype\\freetype.h	/^#define FT_FSTYPE_INSTALLABLE_EMBEDDING /;"	d
FT_FSTYPE_NO_SUBSETTING	.\\include\\freetype\\freetype.h	/^#define FT_FSTYPE_NO_SUBSETTING /;"	d
FT_FSTYPE_PREVIEW_AND_PRINT_EMBEDDING	.\\include\\freetype\\freetype.h	/^#define FT_FSTYPE_PREVIEW_AND_PRINT_EMBEDDING /;"	d
FT_FSTYPE_RESTRICTED_LICENSE_EMBEDDING	.\\include\\freetype\\freetype.h	/^#define FT_FSTYPE_RESTRICTED_LICENSE_EMBEDDING /;"	d
FT_FWord	.\\include\\freetype\\fttypes.h	/^  typedef signed short  FT_FWord;   \/* distance in FUnits *\/$/;"	t	typeref:typename:signed short
FT_Face	.\\include\\freetype\\freetype.h	/^  typedef struct FT_FaceRec_*  FT_Face;$/;"	t	typeref:struct:FT_FaceRec_ *
FT_FaceRec	.\\include\\freetype\\freetype.h	/^  } FT_FaceRec;$/;"	t	typeref:struct:FT_FaceRec_
FT_FaceRec_	.\\include\\freetype\\freetype.h	/^  typedef struct  FT_FaceRec_$/;"	s
FT_Face_AttachFunc	.\\include\\freetype\\internal\\ftdriver.h	/^  (*FT_Face_AttachFunc)( FT_Face    face,$/;"	t	typeref:typename:FT_Error (*)(FT_Face face,FT_Stream stream)
FT_Face_DoneFunc	.\\include\\freetype\\internal\\ftdriver.h	/^  (*FT_Face_DoneFunc)( FT_Face  face );$/;"	t	typeref:typename:void (*)(FT_Face face)
FT_Face_GetAdvancesFunc	.\\include\\freetype\\internal\\ftdriver.h	/^  (*FT_Face_GetAdvancesFunc)( FT_Face    face,$/;"	t	typeref:typename:FT_Error (*)(FT_Face face,FT_UInt first,FT_UInt count,FT_Int32 flags,FT_Fixed * advances)
FT_Face_GetGlyphNameFunc	.\\include\\freetype\\internal\\ftobjs.h	/^  (*FT_Face_GetGlyphNameFunc)( FT_Face     face,$/;"	t	typeref:typename:FT_Error (*)(FT_Face face,FT_UInt glyph_index,FT_Pointer buffer,FT_UInt buffer_max)
FT_Face_GetGlyphNameIndexFunc	.\\include\\freetype\\internal\\ftobjs.h	/^  (*FT_Face_GetGlyphNameIndexFunc)( FT_Face     face,$/;"	t	typeref:typename:FT_UInt (*)(FT_Face face,FT_String * glyph_name)
FT_Face_GetKerningFunc	.\\include\\freetype\\internal\\ftdriver.h	/^  (*FT_Face_GetKerningFunc)( FT_Face     face,$/;"	t	typeref:typename:FT_Error (*)(FT_Face face,FT_UInt left_glyph,FT_UInt right_glyph,FT_Vector * kerning)
FT_Face_GetPostscriptNameFunc	.\\include\\freetype\\internal\\ftobjs.h	/^  (*FT_Face_GetPostscriptNameFunc)( FT_Face  face );$/;"	t	typeref:typename:const char * (*)(FT_Face face)
FT_Face_InitFunc	.\\include\\freetype\\internal\\ftdriver.h	/^  (*FT_Face_InitFunc)( FT_Stream      stream,$/;"	t	typeref:typename:FT_Error (*)(FT_Stream stream,FT_Face face,FT_Int typeface_index,FT_Int num_params,FT_Parameter * parameters)
FT_Face_Internal	.\\include\\freetype\\freetype.h	/^  typedef struct FT_Face_InternalRec_*  FT_Face_Internal;$/;"	t	typeref:struct:FT_Face_InternalRec_ *
FT_Face_InternalRec	.\\include\\freetype\\internal\\ftobjs.h	/^  } FT_Face_InternalRec;$/;"	t	typeref:struct:FT_Face_InternalRec_
FT_Face_InternalRec_	.\\include\\freetype\\internal\\ftobjs.h	/^  typedef struct  FT_Face_InternalRec_$/;"	s
FT_Fast	.\\include\\freetype\\config\\ftconfig.h	/^  typedef int            FT_Fast;$/;"	t	typeref:typename:int
FT_Fast	.\\include\\freetype\\config\\ftconfig.h	/^  typedef long           FT_Fast;$/;"	t	typeref:typename:long
FT_Fixed	.\\include\\freetype\\fttypes.h	/^  typedef signed long  FT_Fixed;$/;"	t	typeref:typename:signed long
FT_Frame_Field	.\\include\\freetype\\internal\\ftstream.h	/^  } FT_Frame_Field;$/;"	t	typeref:struct:FT_Frame_Field_
FT_Frame_Field_	.\\include\\freetype\\internal\\ftstream.h	/^  typedef struct  FT_Frame_Field_$/;"	s
FT_Frame_Op	.\\include\\freetype\\internal\\ftstream.h	/^  } FT_Frame_Op;$/;"	t	typeref:enum:FT_Frame_Op_
FT_Frame_Op_	.\\include\\freetype\\internal\\ftstream.h	/^  typedef enum  FT_Frame_Op_$/;"	g
FT_Free_Func	.\\include\\freetype\\ftsystem.h	/^  (*FT_Free_Func)( FT_Memory  memory,$/;"	t	typeref:typename:void (*)(FT_Memory memory,void * block)
FT_GASP_DO_GRAY	.\\include\\freetype\\ftgasp.h	/^#define FT_GASP_DO_GRAY /;"	d
FT_GASP_DO_GRIDFIT	.\\include\\freetype\\ftgasp.h	/^#define FT_GASP_DO_GRIDFIT /;"	d
FT_GASP_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_GASP_H /;"	d
FT_GASP_NO_TABLE	.\\include\\freetype\\ftgasp.h	/^#define FT_GASP_NO_TABLE /;"	d
FT_GASP_SYMMETRIC_GRIDFIT	.\\include\\freetype\\ftgasp.h	/^#define FT_GASP_SYMMETRIC_GRIDFIT /;"	d
FT_GASP_SYMMETRIC_SMOOTHING	.\\include\\freetype\\ftgasp.h	/^#define FT_GASP_SYMMETRIC_SMOOTHING /;"	d
FT_GET_BYTE	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_GET_BYTE(/;"	d
FT_GET_CHAR	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_GET_CHAR(/;"	d
FT_GET_LONG	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_GET_LONG(/;"	d
FT_GET_LONG_LE	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_GET_LONG_LE(/;"	d
FT_GET_MACRO	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_GET_MACRO(/;"	d
FT_GET_OFF3	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_GET_OFF3(/;"	d
FT_GET_SHORT	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_GET_SHORT(/;"	d
FT_GET_SHORT_LE	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_GET_SHORT_LE(/;"	d
FT_GET_TAG4	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_GET_TAG4(/;"	d
FT_GET_ULONG	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_GET_ULONG(/;"	d
FT_GET_ULONG_LE	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_GET_ULONG_LE(/;"	d
FT_GET_UOFF3	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_GET_UOFF3(/;"	d
FT_GET_USHORT	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_GET_USHORT(/;"	d
FT_GET_USHORT_LE	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_GET_USHORT_LE(/;"	d
FT_GLYPH	.\\include\\freetype\\internal\\ftobjs.h	/^#define FT_GLYPH(/;"	d
FT_GLYPHLOADER_CHECK_C	.\\include\\freetype\\internal\\ftgloadr.h	/^#define FT_GLYPHLOADER_CHECK_C(/;"	d
FT_GLYPHLOADER_CHECK_P	.\\include\\freetype\\internal\\ftgloadr.h	/^#define FT_GLYPHLOADER_CHECK_P(/;"	d
FT_GLYPHLOADER_CHECK_POINTS	.\\include\\freetype\\internal\\ftgloadr.h	/^#define FT_GLYPHLOADER_CHECK_POINTS(/;"	d
FT_GLYPH_BBOX_GRIDFIT	.\\include\\freetype\\ftglyph.h	/^    FT_GLYPH_BBOX_GRIDFIT   = 1,$/;"	e	enum:FT_Glyph_BBox_Mode_
FT_GLYPH_BBOX_PIXELS	.\\include\\freetype\\ftglyph.h	/^    FT_GLYPH_BBOX_PIXELS    = 3$/;"	e	enum:FT_Glyph_BBox_Mode_
FT_GLYPH_BBOX_SUBPIXELS	.\\include\\freetype\\ftglyph.h	/^    FT_GLYPH_BBOX_SUBPIXELS = 0,$/;"	e	enum:FT_Glyph_BBox_Mode_
FT_GLYPH_BBOX_TRUNCATE	.\\include\\freetype\\ftglyph.h	/^    FT_GLYPH_BBOX_TRUNCATE  = 2,$/;"	e	enum:FT_Glyph_BBox_Mode_
FT_GLYPH_BBOX_UNSCALED	.\\include\\freetype\\ftglyph.h	/^    FT_GLYPH_BBOX_UNSCALED  = 0,$/;"	e	enum:FT_Glyph_BBox_Mode_
FT_GLYPH_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_GLYPH_H /;"	d
FT_GLYPH_OWN_BITMAP	.\\include\\freetype\\internal\\ftobjs.h	/^#define FT_GLYPH_OWN_BITMAP /;"	d
FT_GX_VALIDATE_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_GX_VALIDATE_H /;"	d
FT_GZIP_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_GZIP_H /;"	d
FT_Generic	.\\include\\freetype\\fttypes.h	/^  } FT_Generic;$/;"	t	typeref:struct:FT_Generic_
FT_Generic_	.\\include\\freetype\\fttypes.h	/^  typedef struct  FT_Generic_$/;"	s
FT_Generic_Finalizer	.\\include\\freetype\\fttypes.h	/^  typedef void  (*FT_Generic_Finalizer)(void*  object);$/;"	t	typeref:typename:void (*)(void * object)
FT_Get_MM_Func	.\\include\\freetype\\internal\\services\\svmm.h	/^  (*FT_Get_MM_Func)( FT_Face           face,$/;"	t	typeref:typename:FT_Error (*)(FT_Face face,FT_Multi_Master * master)
FT_Get_MM_Var_Func	.\\include\\freetype\\internal\\services\\svmm.h	/^  (*FT_Get_MM_Var_Func)( FT_Face      face,$/;"	t	typeref:typename:FT_Error (*)(FT_Face face,FT_MM_Var ** master)
FT_Glyph	.\\include\\freetype\\ftglyph.h	/^  typedef struct FT_GlyphRec_*  FT_Glyph;$/;"	t	typeref:struct:FT_GlyphRec_ *
FT_GlyphDict_GetNameFunc	.\\include\\freetype\\internal\\services\\svgldict.h	/^  (*FT_GlyphDict_GetNameFunc)( FT_Face     face,$/;"	t	typeref:typename:FT_Error (*)(FT_Face face,FT_UInt glyph_index,FT_Pointer buffer,FT_UInt buffer_max)
FT_GlyphDict_NameIndexFunc	.\\include\\freetype\\internal\\services\\svgldict.h	/^  (*FT_GlyphDict_NameIndexFunc)( FT_Face     face,$/;"	t	typeref:typename:FT_UInt (*)(FT_Face face,FT_String * glyph_name)
FT_GlyphLoad	.\\include\\freetype\\internal\\ftgloadr.h	/^  } FT_GlyphLoadRec, *FT_GlyphLoad;$/;"	t	typeref:struct:FT_GlyphLoadRec_ *
FT_GlyphLoadRec	.\\include\\freetype\\internal\\ftgloadr.h	/^  } FT_GlyphLoadRec, *FT_GlyphLoad;$/;"	t	typeref:struct:FT_GlyphLoadRec_
FT_GlyphLoadRec_	.\\include\\freetype\\internal\\ftgloadr.h	/^  typedef struct  FT_GlyphLoadRec_$/;"	s
FT_GlyphLoader	.\\include\\freetype\\internal\\ftgloadr.h	/^  } FT_GlyphLoaderRec, *FT_GlyphLoader;$/;"	t	typeref:struct:FT_GlyphLoaderRec_ *
FT_GlyphLoaderRec	.\\include\\freetype\\internal\\ftgloadr.h	/^  } FT_GlyphLoaderRec, *FT_GlyphLoader;$/;"	t	typeref:struct:FT_GlyphLoaderRec_
FT_GlyphLoaderRec_	.\\include\\freetype\\internal\\ftgloadr.h	/^  typedef struct  FT_GlyphLoaderRec_$/;"	s
FT_GlyphRec	.\\include\\freetype\\ftglyph.h	/^  } FT_GlyphRec;$/;"	t	typeref:struct:FT_GlyphRec_
FT_GlyphRec_	.\\include\\freetype\\ftglyph.h	/^  typedef struct  FT_GlyphRec_$/;"	s
FT_GlyphSlot	.\\include\\freetype\\freetype.h	/^  typedef struct FT_GlyphSlotRec_*  FT_GlyphSlot;$/;"	t	typeref:struct:FT_GlyphSlotRec_ *
FT_GlyphSlotRec	.\\include\\freetype\\freetype.h	/^  } FT_GlyphSlotRec;$/;"	t	typeref:struct:FT_GlyphSlotRec_
FT_GlyphSlotRec_	.\\include\\freetype\\freetype.h	/^  typedef struct  FT_GlyphSlotRec_$/;"	s
FT_GlyphSlot_InternalRec	.\\include\\freetype\\internal\\ftobjs.h	/^  } FT_GlyphSlot_InternalRec;$/;"	t	typeref:struct:FT_Slot_InternalRec_
FT_Glyph_BBox_Func	.\\include\\freetype\\ftrender.h	/^#define FT_Glyph_BBox_Func /;"	d
FT_Glyph_BBox_Mode	.\\include\\freetype\\ftglyph.h	/^  } FT_Glyph_BBox_Mode;$/;"	t	typeref:enum:FT_Glyph_BBox_Mode_
FT_Glyph_BBox_Mode_	.\\include\\freetype\\ftglyph.h	/^  typedef enum  FT_Glyph_BBox_Mode_$/;"	g
FT_Glyph_Class	.\\include\\freetype\\ftglyph.h	/^  typedef struct FT_Glyph_Class_  FT_Glyph_Class;$/;"	t	typeref:struct:FT_Glyph_Class_
FT_Glyph_Class_	.\\include\\freetype\\ftrender.h	/^  struct  FT_Glyph_Class_$/;"	s
FT_Glyph_CopyFunc	.\\include\\freetype\\ftrender.h	/^  (*FT_Glyph_CopyFunc)( FT_Glyph   source,$/;"	t	typeref:typename:FT_Error (*)(FT_Glyph source,FT_Glyph target)
FT_Glyph_Copy_Func	.\\include\\freetype\\ftrender.h	/^#define FT_Glyph_Copy_Func /;"	d
FT_Glyph_DoneFunc	.\\include\\freetype\\ftrender.h	/^  (*FT_Glyph_DoneFunc)( FT_Glyph  glyph );$/;"	t	typeref:typename:void (*)(FT_Glyph glyph)
FT_Glyph_Done_Func	.\\include\\freetype\\ftrender.h	/^#define FT_Glyph_Done_Func /;"	d
FT_Glyph_Format	.\\include\\freetype\\ftimage.h	/^  } FT_Glyph_Format;$/;"	t	typeref:enum:FT_Glyph_Format_
FT_Glyph_Format_	.\\include\\freetype\\ftimage.h	/^  typedef enum  FT_Glyph_Format_$/;"	g
FT_Glyph_GetBBoxFunc	.\\include\\freetype\\ftrender.h	/^  (*FT_Glyph_GetBBoxFunc)( FT_Glyph  glyph,$/;"	t	typeref:typename:void (*)(FT_Glyph glyph,FT_BBox * abbox)
FT_Glyph_InitFunc	.\\include\\freetype\\ftrender.h	/^  (*FT_Glyph_InitFunc)( FT_Glyph      glyph,$/;"	t	typeref:typename:FT_Error (*)(FT_Glyph glyph,FT_GlyphSlot slot)
FT_Glyph_Init_Func	.\\include\\freetype\\ftrender.h	/^#define FT_Glyph_Init_Func /;"	d
FT_Glyph_Metrics	.\\include\\freetype\\freetype.h	/^  } FT_Glyph_Metrics;$/;"	t	typeref:struct:FT_Glyph_Metrics_
FT_Glyph_Metrics_	.\\include\\freetype\\freetype.h	/^  typedef struct  FT_Glyph_Metrics_$/;"	s
FT_Glyph_PrepareFunc	.\\include\\freetype\\ftrender.h	/^  (*FT_Glyph_PrepareFunc)( FT_Glyph      glyph,$/;"	t	typeref:typename:FT_Error (*)(FT_Glyph glyph,FT_GlyphSlot slot)
FT_Glyph_Prepare_Func	.\\include\\freetype\\ftrender.h	/^#define FT_Glyph_Prepare_Func /;"	d
FT_Glyph_TransformFunc	.\\include\\freetype\\ftrender.h	/^  (*FT_Glyph_TransformFunc)( FT_Glyph          glyph,$/;"	t	typeref:typename:void (*)(FT_Glyph glyph,const FT_Matrix * matrix,const FT_Vector * delta)
FT_Glyph_Transform_Func	.\\include\\freetype\\ftrender.h	/^#define FT_Glyph_Transform_Func /;"	d
FT_HAS_COLOR	.\\include\\freetype\\freetype.h	/^#define FT_HAS_COLOR(/;"	d
FT_HAS_FAST_GLYPHS	.\\include\\freetype\\freetype.h	/^#define FT_HAS_FAST_GLYPHS(/;"	d
FT_HAS_FIXED_SIZES	.\\include\\freetype\\freetype.h	/^#define FT_HAS_FIXED_SIZES(/;"	d
FT_HAS_GLYPH_NAMES	.\\include\\freetype\\freetype.h	/^#define FT_HAS_GLYPH_NAMES(/;"	d
FT_HAS_HORIZONTAL	.\\include\\freetype\\freetype.h	/^#define FT_HAS_HORIZONTAL(/;"	d
FT_HAS_KERNING	.\\include\\freetype\\freetype.h	/^#define FT_HAS_KERNING(/;"	d
FT_HAS_MULTIPLE_MASTERS	.\\include\\freetype\\freetype.h	/^#define FT_HAS_MULTIPLE_MASTERS(/;"	d
FT_HAS_VERTICAL	.\\include\\freetype\\freetype.h	/^#define FT_HAS_VERTICAL(/;"	d
FT_HYPOT	.\\include\\freetype\\internal\\ftobjs.h	/^#define FT_HYPOT(/;"	d
FT_Hash	.\\include\\freetype\\internal\\fthash.h	/^  typedef struct FT_HashRec_  *FT_Hash;$/;"	t	typeref:struct:FT_HashRec_ *
FT_HashRec	.\\include\\freetype\\internal\\fthash.h	/^  } FT_HashRec;$/;"	t	typeref:struct:FT_HashRec_
FT_HashRec_	.\\include\\freetype\\internal\\fthash.h	/^  typedef struct  FT_HashRec_$/;"	s
FT_Hash_CompareFunc	.\\include\\freetype\\internal\\fthash.h	/^  (*FT_Hash_CompareFunc)( FT_Hashkey*  a,$/;"	t	typeref:typename:FT_Bool (*)(FT_Hashkey * a,FT_Hashkey * b)
FT_Hash_LookupFunc	.\\include\\freetype\\internal\\fthash.h	/^  (*FT_Hash_LookupFunc)( FT_Hashkey*  key );$/;"	t	typeref:typename:FT_ULong (*)(FT_Hashkey * key)
FT_Hashkey	.\\include\\freetype\\internal\\fthash.h	/^  } FT_Hashkey;$/;"	t	typeref:union:FT_Hashkey_
FT_Hashkey_	.\\include\\freetype\\internal\\fthash.h	/^  typedef union  FT_Hashkey_$/;"	u
FT_Hashnode	.\\include\\freetype\\internal\\fthash.h	/^  typedef struct FT_HashnodeRec_  *FT_Hashnode;$/;"	t	typeref:struct:FT_HashnodeRec_ *
FT_HashnodeRec	.\\include\\freetype\\internal\\fthash.h	/^  } FT_HashnodeRec;$/;"	t	typeref:struct:FT_HashnodeRec_
FT_HashnodeRec_	.\\include\\freetype\\internal\\fthash.h	/^  typedef struct  FT_HashnodeRec_$/;"	s
FT_IMAGE_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_IMAGE_H /;"	d
FT_IMAGE_TAG	.\\include\\freetype\\ftimage.h	/^    FT_IMAGE_TAG( FT_GLYPH_FORMAT_BITMAP,    'b', 'i', 't', 's' ),$/;"	e	enum:FT_Glyph_Format_
FT_IMAGE_TAG	.\\include\\freetype\\ftimage.h	/^    FT_IMAGE_TAG( FT_GLYPH_FORMAT_COMPOSITE, 'c', 'o', 'm', 'p' ),$/;"	e	enum:FT_Glyph_Format_
FT_IMAGE_TAG	.\\include\\freetype\\ftimage.h	/^    FT_IMAGE_TAG( FT_GLYPH_FORMAT_NONE, 0, 0, 0, 0 ),$/;"	e	enum:FT_Glyph_Format_
FT_IMAGE_TAG	.\\include\\freetype\\ftimage.h	/^    FT_IMAGE_TAG( FT_GLYPH_FORMAT_OUTLINE,   'o', 'u', 't', 'l' ),$/;"	e	enum:FT_Glyph_Format_
FT_IMAGE_TAG	.\\include\\freetype\\ftimage.h	/^    FT_IMAGE_TAG( FT_GLYPH_FORMAT_PLOTTER,   'p', 'l', 'o', 't' )$/;"	e	enum:FT_Glyph_Format_
FT_IMAGE_TAG	.\\include\\freetype\\ftimage.h	/^#define FT_IMAGE_TAG(/;"	d
FT_INCREMENTAL_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_INCREMENTAL_H /;"	d
FT_INT16	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_INT16(/;"	d
FT_INT32	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_INT32(/;"	d
FT_INT64	.\\include\\freetype\\config\\ftconfig.h	/^#define FT_INT64 /;"	d
FT_INTERNAL	.\\include\\freetype\\internal\\sfnt.h	/^#define FT_INTERNAL(/;"	d
FT_INTERNAL_AUTOHINT_H	.\\include\\freetype\\internal\\internal.h	/^#define FT_INTERNAL_AUTOHINT_H /;"	d
FT_INTERNAL_CALC_H	.\\include\\freetype\\internal\\internal.h	/^#define FT_INTERNAL_CALC_H /;"	d
FT_INTERNAL_DEBUG_H	.\\include\\freetype\\internal\\internal.h	/^#define FT_INTERNAL_DEBUG_H /;"	d
FT_INTERNAL_DRIVER_H	.\\include\\freetype\\internal\\internal.h	/^#define FT_INTERNAL_DRIVER_H /;"	d
FT_INTERNAL_GLYPH_LOADER_H	.\\include\\freetype\\internal\\internal.h	/^#define FT_INTERNAL_GLYPH_LOADER_H /;"	d
FT_INTERNAL_HASH_H	.\\include\\freetype\\internal\\internal.h	/^#define FT_INTERNAL_HASH_H /;"	d
FT_INTERNAL_INTERNAL_H	.\\include\\freetype\\config\\ftheader.h	/^#define  FT_INTERNAL_INTERNAL_H /;"	d
FT_INTERNAL_MEMORY_H	.\\include\\freetype\\internal\\internal.h	/^#define FT_INTERNAL_MEMORY_H /;"	d
FT_INTERNAL_OBJECTS_H	.\\include\\freetype\\internal\\internal.h	/^#define FT_INTERNAL_OBJECTS_H /;"	d
FT_INTERNAL_PIC_H	.\\include\\freetype\\internal\\internal.h	/^#define FT_INTERNAL_PIC_H /;"	d
FT_INTERNAL_POSTSCRIPT_AUX_H	.\\include\\freetype\\internal\\internal.h	/^#define FT_INTERNAL_POSTSCRIPT_AUX_H /;"	d
FT_INTERNAL_POSTSCRIPT_HINTS_H	.\\include\\freetype\\internal\\internal.h	/^#define FT_INTERNAL_POSTSCRIPT_HINTS_H /;"	d
FT_INTERNAL_RFORK_H	.\\include\\freetype\\internal\\internal.h	/^#define FT_INTERNAL_RFORK_H /;"	d
FT_INTERNAL_SERVICE_H	.\\include\\freetype\\internal\\internal.h	/^#define FT_INTERNAL_SERVICE_H /;"	d
FT_INTERNAL_SFNT_H	.\\include\\freetype\\internal\\internal.h	/^#define FT_INTERNAL_SFNT_H /;"	d
FT_INTERNAL_STREAM_H	.\\include\\freetype\\internal\\internal.h	/^#define FT_INTERNAL_STREAM_H /;"	d
FT_INTERNAL_TRACE_H	.\\include\\freetype\\internal\\internal.h	/^#define FT_INTERNAL_TRACE_H /;"	d
FT_INTERNAL_TRUETYPE_TYPES_H	.\\include\\freetype\\internal\\internal.h	/^#define FT_INTERNAL_TRUETYPE_TYPES_H /;"	d
FT_INTERNAL_TYPE1_TYPES_H	.\\include\\freetype\\internal\\internal.h	/^#define FT_INTERNAL_TYPE1_TYPES_H /;"	d
FT_INTERNAL_VALIDATE_H	.\\include\\freetype\\internal\\internal.h	/^#define FT_INTERNAL_VALIDATE_H /;"	d
FT_INT_MAX	.\\include\\freetype\\config\\ftstdlib.h	/^#define FT_INT_MAX /;"	d
FT_INT_MIN	.\\include\\freetype\\config\\ftstdlib.h	/^#define FT_INT_MIN /;"	d
FT_INVALID	.\\include\\freetype\\internal\\ftvalid.h	/^#define FT_INVALID(/;"	d
FT_INVALID_	.\\include\\freetype\\internal\\ftvalid.h	/^#define FT_INVALID_(/;"	d
FT_INVALID_DATA	.\\include\\freetype\\internal\\ftvalid.h	/^#define FT_INVALID_DATA /;"	d
FT_INVALID_FORMAT	.\\include\\freetype\\internal\\ftvalid.h	/^#define FT_INVALID_FORMAT /;"	d
FT_INVALID_GLYPH_ID	.\\include\\freetype\\internal\\ftvalid.h	/^#define FT_INVALID_GLYPH_ID /;"	d
FT_INVALID_OFFSET	.\\include\\freetype\\internal\\ftvalid.h	/^#define FT_INVALID_OFFSET /;"	d
FT_INVALID_TOO_SHORT	.\\include\\freetype\\internal\\ftvalid.h	/^#define FT_INVALID_TOO_SHORT /;"	d
FT_IS_CID_KEYED	.\\include\\freetype\\freetype.h	/^#define FT_IS_CID_KEYED(/;"	d
FT_IS_EMPTY	.\\include\\freetype\\fttypes.h	/^#define FT_IS_EMPTY(/;"	d
FT_IS_FIXED_WIDTH	.\\include\\freetype\\freetype.h	/^#define FT_IS_FIXED_WIDTH(/;"	d
FT_IS_SCALABLE	.\\include\\freetype\\freetype.h	/^#define FT_IS_SCALABLE(/;"	d
FT_IS_SFNT	.\\include\\freetype\\freetype.h	/^#define FT_IS_SFNT(/;"	d
FT_IS_TRICKY	.\\include\\freetype\\freetype.h	/^#define FT_IS_TRICKY(/;"	d
FT_Incremental	.\\include\\freetype\\ftincrem.h	/^  typedef struct FT_IncrementalRec_*  FT_Incremental;$/;"	t	typeref:struct:FT_IncrementalRec_ *
FT_Incremental_FreeGlyphDataFunc	.\\include\\freetype\\ftincrem.h	/^  (*FT_Incremental_FreeGlyphDataFunc)( FT_Incremental  incremental,$/;"	t	typeref:typename:void (*)(FT_Incremental incremental,FT_Data * data)
FT_Incremental_FuncsRec	.\\include\\freetype\\ftincrem.h	/^  } FT_Incremental_FuncsRec;$/;"	t	typeref:struct:FT_Incremental_FuncsRec_
FT_Incremental_FuncsRec_	.\\include\\freetype\\ftincrem.h	/^  typedef struct  FT_Incremental_FuncsRec_$/;"	s
FT_Incremental_GetGlyphDataFunc	.\\include\\freetype\\ftincrem.h	/^  (*FT_Incremental_GetGlyphDataFunc)( FT_Incremental  incremental,$/;"	t	typeref:typename:FT_Error (*)(FT_Incremental incremental,FT_UInt glyph_index,FT_Data * adata)
FT_Incremental_GetGlyphMetricsFunc	.\\include\\freetype\\ftincrem.h	/^  (*FT_Incremental_GetGlyphMetricsFunc)$/;"	t	typeref:typename:FT_Error (*)(FT_Incremental incremental,FT_UInt glyph_index,FT_Bool vertical,FT_Incremental_MetricsRec * ametrics)
FT_Incremental_Interface	.\\include\\freetype\\ftincrem.h	/^  typedef FT_Incremental_InterfaceRec*   FT_Incremental_Interface;$/;"	t	typeref:typename:FT_Incremental_InterfaceRec *
FT_Incremental_InterfaceRec	.\\include\\freetype\\ftincrem.h	/^  } FT_Incremental_InterfaceRec;$/;"	t	typeref:struct:FT_Incremental_InterfaceRec_
FT_Incremental_InterfaceRec_	.\\include\\freetype\\ftincrem.h	/^  typedef struct  FT_Incremental_InterfaceRec_$/;"	s
FT_Incremental_Metrics	.\\include\\freetype\\ftincrem.h	/^   typedef struct FT_Incremental_MetricsRec_*  FT_Incremental_Metrics;$/;"	t	typeref:struct:FT_Incremental_MetricsRec_ *
FT_Incremental_MetricsRec	.\\include\\freetype\\ftincrem.h	/^  } FT_Incremental_MetricsRec;$/;"	t	typeref:struct:FT_Incremental_MetricsRec_
FT_Incremental_MetricsRec_	.\\include\\freetype\\ftincrem.h	/^  typedef struct  FT_Incremental_MetricsRec_$/;"	s
FT_Int	.\\include\\freetype\\fttypes.h	/^  typedef signed int  FT_Int;$/;"	t	typeref:typename:signed int
FT_Int16	.\\include\\freetype\\config\\ftconfig.h	/^  typedef signed short  FT_Int16;$/;"	t	typeref:typename:signed short
FT_Int32	.\\include\\freetype\\config\\ftconfig.h	/^  typedef signed int      FT_Int32;$/;"	t	typeref:typename:signed int
FT_Int32	.\\include\\freetype\\config\\ftconfig.h	/^  typedef signed long     FT_Int32;$/;"	t	typeref:typename:signed long
FT_Int64	.\\include\\freetype\\config\\ftconfig.h	/^  typedef FT_INT64   FT_Int64;$/;"	t	typeref:typename:FT_INT64
FT_KERNING_DEFAULT	.\\include\\freetype\\freetype.h	/^    FT_KERNING_DEFAULT  = 0,$/;"	e	enum:FT_Kerning_Mode_
FT_KERNING_UNFITTED	.\\include\\freetype\\freetype.h	/^    FT_KERNING_UNFITTED,$/;"	e	enum:FT_Kerning_Mode_
FT_KERNING_UNSCALED	.\\include\\freetype\\freetype.h	/^    FT_KERNING_UNSCALED$/;"	e	enum:FT_Kerning_Mode_
FT_Kerning_Mode	.\\include\\freetype\\freetype.h	/^  } FT_Kerning_Mode;$/;"	t	typeref:enum:FT_Kerning_Mode_
FT_Kerning_Mode_	.\\include\\freetype\\freetype.h	/^  typedef enum  FT_Kerning_Mode_$/;"	g
FT_Kerning_TrackGetFunc	.\\include\\freetype\\internal\\services\\svkern.h	/^  (*FT_Kerning_TrackGetFunc)( FT_Face    face,$/;"	t	typeref:typename:FT_Error (*)(FT_Face face,FT_Fixed point_size,FT_Int degree,FT_Fixed * akerning)
FT_LCD_FILTER_DEFAULT	.\\include\\freetype\\ftlcdfil.h	/^    FT_LCD_FILTER_DEFAULT = 1,$/;"	e	enum:FT_LcdFilter_
FT_LCD_FILTER_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_LCD_FILTER_H /;"	d
FT_LCD_FILTER_LEGACY	.\\include\\freetype\\ftlcdfil.h	/^    FT_LCD_FILTER_LEGACY  = 16,$/;"	e	enum:FT_LcdFilter_
FT_LCD_FILTER_LEGACY1	.\\include\\freetype\\ftlcdfil.h	/^    FT_LCD_FILTER_LEGACY1 = 3,$/;"	e	enum:FT_LcdFilter_
FT_LCD_FILTER_LIGHT	.\\include\\freetype\\ftlcdfil.h	/^    FT_LCD_FILTER_LIGHT   = 2,$/;"	e	enum:FT_LcdFilter_
FT_LCD_FILTER_MAX	.\\include\\freetype\\ftlcdfil.h	/^    FT_LCD_FILTER_MAX   \/* do not remove *\/$/;"	e	enum:FT_LcdFilter_
FT_LCD_FILTER_NONE	.\\include\\freetype\\ftlcdfil.h	/^    FT_LCD_FILTER_NONE    = 0,$/;"	e	enum:FT_LcdFilter_
FT_LIST_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_LIST_H /;"	d
FT_LOAD_ADVANCE_ONLY	.\\include\\freetype\\freetype.h	/^#define FT_LOAD_ADVANCE_ONLY /;"	d
FT_LOAD_COLOR	.\\include\\freetype\\freetype.h	/^#define FT_LOAD_COLOR /;"	d
FT_LOAD_COMPUTE_METRICS	.\\include\\freetype\\freetype.h	/^#define FT_LOAD_COMPUTE_METRICS /;"	d
FT_LOAD_CROP_BITMAP	.\\include\\freetype\\freetype.h	/^#define FT_LOAD_CROP_BITMAP /;"	d
FT_LOAD_DEFAULT	.\\include\\freetype\\freetype.h	/^#define FT_LOAD_DEFAULT /;"	d
FT_LOAD_FORCE_AUTOHINT	.\\include\\freetype\\freetype.h	/^#define FT_LOAD_FORCE_AUTOHINT /;"	d
FT_LOAD_IGNORE_GLOBAL_ADVANCE_WIDTH	.\\include\\freetype\\freetype.h	/^#define FT_LOAD_IGNORE_GLOBAL_ADVANCE_WIDTH /;"	d
FT_LOAD_IGNORE_TRANSFORM	.\\include\\freetype\\freetype.h	/^#define FT_LOAD_IGNORE_TRANSFORM /;"	d
FT_LOAD_LINEAR_DESIGN	.\\include\\freetype\\freetype.h	/^#define FT_LOAD_LINEAR_DESIGN /;"	d
FT_LOAD_MONOCHROME	.\\include\\freetype\\freetype.h	/^#define FT_LOAD_MONOCHROME /;"	d
FT_LOAD_NO_AUTOHINT	.\\include\\freetype\\freetype.h	/^#define FT_LOAD_NO_AUTOHINT /;"	d
FT_LOAD_NO_BITMAP	.\\include\\freetype\\freetype.h	/^#define FT_LOAD_NO_BITMAP /;"	d
FT_LOAD_NO_HINTING	.\\include\\freetype\\freetype.h	/^#define FT_LOAD_NO_HINTING /;"	d
FT_LOAD_NO_RECURSE	.\\include\\freetype\\freetype.h	/^#define FT_LOAD_NO_RECURSE /;"	d
FT_LOAD_NO_SCALE	.\\include\\freetype\\freetype.h	/^#define FT_LOAD_NO_SCALE /;"	d
FT_LOAD_PEDANTIC	.\\include\\freetype\\freetype.h	/^#define FT_LOAD_PEDANTIC /;"	d
FT_LOAD_RENDER	.\\include\\freetype\\freetype.h	/^#define FT_LOAD_RENDER /;"	d
FT_LOAD_SBITS_ONLY	.\\include\\freetype\\freetype.h	/^#define FT_LOAD_SBITS_ONLY /;"	d
FT_LOAD_TARGET_	.\\include\\freetype\\freetype.h	/^#define FT_LOAD_TARGET_(/;"	d
FT_LOAD_TARGET_LCD	.\\include\\freetype\\freetype.h	/^#define FT_LOAD_TARGET_LCD /;"	d
FT_LOAD_TARGET_LCD_V	.\\include\\freetype\\freetype.h	/^#define FT_LOAD_TARGET_LCD_V /;"	d
FT_LOAD_TARGET_LIGHT	.\\include\\freetype\\freetype.h	/^#define FT_LOAD_TARGET_LIGHT /;"	d
FT_LOAD_TARGET_MODE	.\\include\\freetype\\freetype.h	/^#define FT_LOAD_TARGET_MODE(/;"	d
FT_LOAD_TARGET_MONO	.\\include\\freetype\\freetype.h	/^#define FT_LOAD_TARGET_MONO /;"	d
FT_LOAD_TARGET_NORMAL	.\\include\\freetype\\freetype.h	/^#define FT_LOAD_TARGET_NORMAL /;"	d
FT_LOAD_VERTICAL_LAYOUT	.\\include\\freetype\\freetype.h	/^#define FT_LOAD_VERTICAL_LAYOUT /;"	d
FT_LOCAL	.\\include\\freetype\\config\\ftconfig.h	/^#define FT_LOCAL(/;"	d
FT_LOCAL_ARRAY	.\\include\\freetype\\config\\ftconfig.h	/^#define FT_LOCAL_ARRAY(/;"	d
FT_LOCAL_ARRAY_DEF	.\\include\\freetype\\config\\ftconfig.h	/^#define FT_LOCAL_ARRAY_DEF(/;"	d
FT_LOCAL_DEF	.\\include\\freetype\\config\\ftconfig.h	/^#define FT_LOCAL_DEF(/;"	d
FT_LONG64	.\\include\\freetype\\config\\ftconfig.h	/^#define FT_LONG64$/;"	d
FT_LONG_MAX	.\\include\\freetype\\config\\ftstdlib.h	/^#define FT_LONG_MAX /;"	d
FT_LONG_MIN	.\\include\\freetype\\config\\ftstdlib.h	/^#define FT_LONG_MIN /;"	d
FT_LZW_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_LZW_H /;"	d
FT_LcdFilter	.\\include\\freetype\\ftlcdfil.h	/^  } FT_LcdFilter;$/;"	t	typeref:enum:FT_LcdFilter_
FT_LcdFilter_	.\\include\\freetype\\ftlcdfil.h	/^  typedef enum  FT_LcdFilter_$/;"	g
FT_Library	.\\include\\freetype\\freetype.h	/^  typedef struct FT_LibraryRec_  *FT_Library;$/;"	t	typeref:struct:FT_LibraryRec_ *
FT_LibraryRec	.\\include\\freetype\\internal\\ftobjs.h	/^  } FT_LibraryRec;$/;"	t	typeref:struct:FT_LibraryRec_
FT_LibraryRec_	.\\include\\freetype\\internal\\ftobjs.h	/^  typedef struct  FT_LibraryRec_$/;"	s
FT_List	.\\include\\freetype\\fttypes.h	/^  typedef struct FT_ListRec_*  FT_List;$/;"	t	typeref:struct:FT_ListRec_ *
FT_ListNode	.\\include\\freetype\\fttypes.h	/^  typedef struct FT_ListNodeRec_*  FT_ListNode;$/;"	t	typeref:struct:FT_ListNodeRec_ *
FT_ListNodeRec	.\\include\\freetype\\fttypes.h	/^  } FT_ListNodeRec;$/;"	t	typeref:struct:FT_ListNodeRec_
FT_ListNodeRec_	.\\include\\freetype\\fttypes.h	/^  typedef struct  FT_ListNodeRec_$/;"	s
FT_ListRec	.\\include\\freetype\\fttypes.h	/^  } FT_ListRec;$/;"	t	typeref:struct:FT_ListRec_
FT_ListRec_	.\\include\\freetype\\fttypes.h	/^  typedef struct  FT_ListRec_$/;"	s
FT_List_Destructor	.\\include\\freetype\\ftlist.h	/^  (*FT_List_Destructor)( FT_Memory  memory,$/;"	t	typeref:typename:void (*)(FT_Memory memory,void * data,void * user)
FT_List_Iterator	.\\include\\freetype\\ftlist.h	/^  (*FT_List_Iterator)( FT_ListNode  node,$/;"	t	typeref:typename:FT_Error (*)(FT_ListNode node,void * user)
FT_Long	.\\include\\freetype\\fttypes.h	/^  typedef signed long  FT_Long;$/;"	t	typeref:typename:signed long
FT_MAC_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_MAC_H /;"	d
FT_MAKE_EMPTY_FIELD	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_MAKE_EMPTY_FIELD(/;"	d
FT_MAKE_FRAME_OP	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_MAKE_FRAME_OP(/;"	d
FT_MAKE_TAG	.\\include\\freetype\\fttypes.h	/^#define FT_MAKE_TAG(/;"	d
FT_MAX	.\\include\\freetype\\internal\\ftobjs.h	/^#define FT_MAX(/;"	d
FT_MAX_MODULES	.\\include\\freetype\\config\\ftoption.h	/^#define FT_MAX_MODULES /;"	d
FT_MEM_ALLOC	.\\include\\freetype\\internal\\ftmemory.h	/^#define FT_MEM_ALLOC(/;"	d
FT_MEM_ALLOC_MULT	.\\include\\freetype\\internal\\ftmemory.h	/^#define FT_MEM_ALLOC_MULT(/;"	d
FT_MEM_COPY	.\\include\\freetype\\internal\\ftmemory.h	/^#define FT_MEM_COPY(/;"	d
FT_MEM_DUP	.\\include\\freetype\\internal\\ftmemory.h	/^#define FT_MEM_DUP(/;"	d
FT_MEM_FREE	.\\include\\freetype\\internal\\ftmemory.h	/^#define FT_MEM_FREE(/;"	d
FT_MEM_MOVE	.\\include\\freetype\\internal\\ftmemory.h	/^#define FT_MEM_MOVE(/;"	d
FT_MEM_NEW	.\\include\\freetype\\internal\\ftmemory.h	/^#define FT_MEM_NEW(/;"	d
FT_MEM_NEW_ARRAY	.\\include\\freetype\\internal\\ftmemory.h	/^#define FT_MEM_NEW_ARRAY(/;"	d
FT_MEM_QALLOC	.\\include\\freetype\\internal\\ftmemory.h	/^#define FT_MEM_QALLOC(/;"	d
FT_MEM_QALLOC_MULT	.\\include\\freetype\\internal\\ftmemory.h	/^#define FT_MEM_QALLOC_MULT(/;"	d
FT_MEM_QNEW	.\\include\\freetype\\internal\\ftmemory.h	/^#define FT_MEM_QNEW(/;"	d
FT_MEM_QNEW_ARRAY	.\\include\\freetype\\internal\\ftmemory.h	/^#define FT_MEM_QNEW_ARRAY(/;"	d
FT_MEM_QREALLOC	.\\include\\freetype\\internal\\ftmemory.h	/^#define FT_MEM_QREALLOC(/;"	d
FT_MEM_QREALLOC_MULT	.\\include\\freetype\\internal\\ftmemory.h	/^#define FT_MEM_QREALLOC_MULT(/;"	d
FT_MEM_QRENEW_ARRAY	.\\include\\freetype\\internal\\ftmemory.h	/^#define FT_MEM_QRENEW_ARRAY(/;"	d
FT_MEM_REALLOC	.\\include\\freetype\\internal\\ftmemory.h	/^#define FT_MEM_REALLOC(/;"	d
FT_MEM_REALLOC_MULT	.\\include\\freetype\\internal\\ftmemory.h	/^#define FT_MEM_REALLOC_MULT(/;"	d
FT_MEM_RENEW_ARRAY	.\\include\\freetype\\internal\\ftmemory.h	/^#define FT_MEM_RENEW_ARRAY(/;"	d
FT_MEM_SET	.\\include\\freetype\\internal\\ftmemory.h	/^#define FT_MEM_SET(/;"	d
FT_MEM_SET_ERROR	.\\include\\freetype\\internal\\ftmemory.h	/^#define FT_MEM_SET_ERROR(/;"	d
FT_MEM_STRDUP	.\\include\\freetype\\internal\\ftmemory.h	/^#define FT_MEM_STRDUP(/;"	d
FT_MEM_ZERO	.\\include\\freetype\\internal\\ftmemory.h	/^#define FT_MEM_ZERO(/;"	d
FT_MIN	.\\include\\freetype\\internal\\ftobjs.h	/^#define FT_MIN(/;"	d
FT_MM_Axis	.\\include\\freetype\\ftmm.h	/^  } FT_MM_Axis;$/;"	t	typeref:struct:FT_MM_Axis_
FT_MM_Axis_	.\\include\\freetype\\ftmm.h	/^  typedef struct  FT_MM_Axis_$/;"	s
FT_MM_Var	.\\include\\freetype\\ftmm.h	/^  } FT_MM_Var;$/;"	t	typeref:struct:FT_MM_Var_
FT_MM_Var_	.\\include\\freetype\\ftmm.h	/^  typedef struct  FT_MM_Var_$/;"	s
FT_MODERRDEF	.\\include\\freetype\\ftmoderr.h	/^#define FT_MODERRDEF(/;"	d
FT_MODERR_END_LIST	.\\include\\freetype\\ftmoderr.h	/^#define FT_MODERR_END_LIST /;"	d
FT_MODERR_START_LIST	.\\include\\freetype\\ftmoderr.h	/^#define FT_MODERR_START_LIST /;"	d
FT_MODULE	.\\include\\freetype\\internal\\ftobjs.h	/^#define FT_MODULE(/;"	d
FT_MODULE_CLASS	.\\include\\freetype\\internal\\ftobjs.h	/^#define FT_MODULE_CLASS(/;"	d
FT_MODULE_DRIVER_HAS_HINTER	.\\include\\freetype\\ftmodapi.h	/^#define FT_MODULE_DRIVER_HAS_HINTER /;"	d
FT_MODULE_DRIVER_HINTS_LIGHTLY	.\\include\\freetype\\ftmodapi.h	/^#define FT_MODULE_DRIVER_HINTS_LIGHTLY /;"	d
FT_MODULE_DRIVER_NO_OUTLINES	.\\include\\freetype\\ftmodapi.h	/^#define FT_MODULE_DRIVER_NO_OUTLINES /;"	d
FT_MODULE_DRIVER_SCALABLE	.\\include\\freetype\\ftmodapi.h	/^#define FT_MODULE_DRIVER_SCALABLE /;"	d
FT_MODULE_ERRORS_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_MODULE_ERRORS_H /;"	d
FT_MODULE_FONT_DRIVER	.\\include\\freetype\\ftmodapi.h	/^#define FT_MODULE_FONT_DRIVER /;"	d
FT_MODULE_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_MODULE_H /;"	d
FT_MODULE_HINTER	.\\include\\freetype\\ftmodapi.h	/^#define FT_MODULE_HINTER /;"	d
FT_MODULE_IS_DRIVER	.\\include\\freetype\\internal\\ftobjs.h	/^#define FT_MODULE_IS_DRIVER(/;"	d
FT_MODULE_IS_HINTER	.\\include\\freetype\\internal\\ftobjs.h	/^#define FT_MODULE_IS_HINTER(/;"	d
FT_MODULE_IS_RENDERER	.\\include\\freetype\\internal\\ftobjs.h	/^#define FT_MODULE_IS_RENDERER(/;"	d
FT_MODULE_IS_STYLER	.\\include\\freetype\\internal\\ftobjs.h	/^#define FT_MODULE_IS_STYLER(/;"	d
FT_MODULE_LIBRARY	.\\include\\freetype\\internal\\ftobjs.h	/^#define FT_MODULE_LIBRARY(/;"	d
FT_MODULE_MEMORY	.\\include\\freetype\\internal\\ftobjs.h	/^#define FT_MODULE_MEMORY(/;"	d
FT_MODULE_RENDERER	.\\include\\freetype\\ftmodapi.h	/^#define FT_MODULE_RENDERER /;"	d
FT_MODULE_STYLER	.\\include\\freetype\\ftmodapi.h	/^#define FT_MODULE_STYLER /;"	d
FT_MSB	.\\include\\freetype\\internal\\ftcalc.h	/^#define FT_MSB(/;"	d
FT_MULFIX_ASSEMBLER	.\\include\\freetype\\internal\\ftcalc.h	/^#define FT_MULFIX_ASSEMBLER /;"	d
FT_MULTIPLE_MASTERS_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_MULTIPLE_MASTERS_H /;"	d
FT_Matrix	.\\include\\freetype\\fttypes.h	/^  } FT_Matrix;$/;"	t	typeref:struct:FT_Matrix_
FT_Matrix_	.\\include\\freetype\\fttypes.h	/^  typedef struct  FT_Matrix_$/;"	s
FT_Memory	.\\include\\freetype\\ftsystem.h	/^  typedef struct FT_MemoryRec_*  FT_Memory;$/;"	t	typeref:struct:FT_MemoryRec_ *
FT_MemoryRec_	.\\include\\freetype\\ftsystem.h	/^  struct  FT_MemoryRec_$/;"	s
FT_Module	.\\include\\freetype\\freetype.h	/^  typedef struct FT_ModuleRec_*  FT_Module;$/;"	t	typeref:struct:FT_ModuleRec_ *
FT_ModuleRec	.\\include\\freetype\\internal\\ftobjs.h	/^  } FT_ModuleRec;$/;"	t	typeref:struct:FT_ModuleRec_
FT_ModuleRec_	.\\include\\freetype\\internal\\ftobjs.h	/^  typedef struct  FT_ModuleRec_$/;"	s
FT_Module_Class	.\\include\\freetype\\ftmodapi.h	/^  } FT_Module_Class;$/;"	t	typeref:struct:FT_Module_Class_
FT_Module_Class_	.\\include\\freetype\\ftmodapi.h	/^  typedef struct  FT_Module_Class_$/;"	s
FT_Module_Constructor	.\\include\\freetype\\ftmodapi.h	/^  (*FT_Module_Constructor)( FT_Module  module );$/;"	t	typeref:typename:FT_Error (*)(FT_Module module)
FT_Module_Creator	.\\include\\freetype\\internal\\ftobjs.h	/^  (*FT_Module_Creator)( FT_Memory          memory,$/;"	t	typeref:typename:FT_Error (*)(FT_Memory memory,FT_Module_Class ** output_class)
FT_Module_Destroyer	.\\include\\freetype\\internal\\ftobjs.h	/^  (*FT_Module_Destroyer)( FT_Memory         memory,$/;"	t	typeref:typename:void (*)(FT_Memory memory,FT_Module_Class * clazz)
FT_Module_Destructor	.\\include\\freetype\\ftmodapi.h	/^  (*FT_Module_Destructor)( FT_Module  module );$/;"	t	typeref:typename:void (*)(FT_Module module)
FT_Module_Interface	.\\include\\freetype\\ftmodapi.h	/^  typedef FT_Pointer  FT_Module_Interface;$/;"	t	typeref:typename:FT_Pointer
FT_Module_Requester	.\\include\\freetype\\ftmodapi.h	/^  (*FT_Module_Requester)( FT_Module    module,$/;"	t	typeref:typename:FT_Module_Interface (*)(FT_Module module,const char * name)
FT_MulFix	.\\include\\freetype\\internal\\ftcalc.h	/^#define FT_MulFix(/;"	d
FT_MulFix_arm	.\\include\\freetype\\internal\\ftcalc.h	/^  FT_MulFix_arm( FT_Int32  a,$/;"	f	typeref:typename:FT_BEGIN_HEADER FT_Int32
FT_MulFix_arm	.\\include\\freetype\\internal\\ftcalc.h	/^  FT_MulFix_arm( FT_Int32  a,$/;"	f	typeref:typename:FT_Int32
FT_MulFix_i386	.\\include\\freetype\\internal\\ftcalc.h	/^  FT_MulFix_i386( FT_Int32  a,$/;"	f	typeref:typename:FT_Int32
FT_MulFix_x86_64	.\\include\\freetype\\internal\\ftcalc.h	/^  FT_MulFix_x86_64( FT_Int32  a,$/;"	f	typeref:typename:FT_Int32
FT_Multi_Master	.\\include\\freetype\\ftmm.h	/^  } FT_Multi_Master;$/;"	t	typeref:struct:FT_Multi_Master_
FT_Multi_Master_	.\\include\\freetype\\ftmm.h	/^  typedef struct  FT_Multi_Master_$/;"	s
FT_NEED_EXTERN_C	.\\include\\freetype\\fterrors.h	/^#define FT_NEED_EXTERN_C$/;"	d
FT_NEED_EXTERN_C	.\\include\\freetype\\ftmoderr.h	/^#define FT_NEED_EXTERN_C$/;"	d
FT_NEW	.\\include\\freetype\\internal\\ftmemory.h	/^#define FT_NEW(/;"	d
FT_NEW_ARRAY	.\\include\\freetype\\internal\\ftmemory.h	/^#define FT_NEW_ARRAY(/;"	d
FT_NEXT_BYTE	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_NEXT_BYTE(/;"	d
FT_NEXT_CHAR	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_NEXT_CHAR(/;"	d
FT_NEXT_LONG	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_NEXT_LONG(/;"	d
FT_NEXT_LONG_LE	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_NEXT_LONG_LE(/;"	d
FT_NEXT_OFF3	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_NEXT_OFF3(/;"	d
FT_NEXT_OFF3_LE	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_NEXT_OFF3_LE(/;"	d
FT_NEXT_SHORT	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_NEXT_SHORT(/;"	d
FT_NEXT_SHORT_LE	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_NEXT_SHORT_LE(/;"	d
FT_NEXT_ULONG	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_NEXT_ULONG(/;"	d
FT_NEXT_ULONG_LE	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_NEXT_ULONG_LE(/;"	d
FT_NEXT_UOFF3	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_NEXT_UOFF3(/;"	d
FT_NEXT_UOFF3_LE	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_NEXT_UOFF3_LE(/;"	d
FT_NEXT_USHORT	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_NEXT_USHORT(/;"	d
FT_NEXT_USHORT_LE	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_NEXT_USHORT_LE(/;"	d
FT_NOERRORDEF_	.\\include\\freetype\\fterrors.h	/^#define FT_NOERRORDEF_(/;"	d
FT_OPENTYPE_VALIDATE_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_OPENTYPE_VALIDATE_H /;"	d
FT_OPEN_DRIVER	.\\include\\freetype\\freetype.h	/^#define FT_OPEN_DRIVER /;"	d
FT_OPEN_MEMORY	.\\include\\freetype\\freetype.h	/^#define FT_OPEN_MEMORY /;"	d
FT_OPEN_PARAMS	.\\include\\freetype\\freetype.h	/^#define FT_OPEN_PARAMS /;"	d
FT_OPEN_PATHNAME	.\\include\\freetype\\freetype.h	/^#define FT_OPEN_PATHNAME /;"	d
FT_OPEN_STREAM	.\\include\\freetype\\freetype.h	/^#define FT_OPEN_STREAM /;"	d
FT_ORIENTATION_FILL_LEFT	.\\include\\freetype\\ftoutln.h	/^    FT_ORIENTATION_FILL_LEFT  = FT_ORIENTATION_POSTSCRIPT,$/;"	e	enum:FT_Orientation_
FT_ORIENTATION_FILL_RIGHT	.\\include\\freetype\\ftoutln.h	/^    FT_ORIENTATION_FILL_RIGHT = FT_ORIENTATION_TRUETYPE,$/;"	e	enum:FT_Orientation_
FT_ORIENTATION_NONE	.\\include\\freetype\\ftoutln.h	/^    FT_ORIENTATION_NONE$/;"	e	enum:FT_Orientation_
FT_ORIENTATION_POSTSCRIPT	.\\include\\freetype\\ftoutln.h	/^    FT_ORIENTATION_POSTSCRIPT = 1,$/;"	e	enum:FT_Orientation_
FT_ORIENTATION_TRUETYPE	.\\include\\freetype\\ftoutln.h	/^    FT_ORIENTATION_TRUETYPE   = 0,$/;"	e	enum:FT_Orientation_
FT_OUTLINE_CONTOURS_MAX	.\\include\\freetype\\ftimage.h	/^#define FT_OUTLINE_CONTOURS_MAX /;"	d
FT_OUTLINE_EVEN_ODD_FILL	.\\include\\freetype\\ftimage.h	/^#define FT_OUTLINE_EVEN_ODD_FILL /;"	d
FT_OUTLINE_GLYPH	.\\include\\freetype\\internal\\ftobjs.h	/^#define FT_OUTLINE_GLYPH(/;"	d
FT_OUTLINE_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_OUTLINE_H /;"	d
FT_OUTLINE_HIGH_PRECISION	.\\include\\freetype\\ftimage.h	/^#define FT_OUTLINE_HIGH_PRECISION /;"	d
FT_OUTLINE_IGNORE_DROPOUTS	.\\include\\freetype\\ftimage.h	/^#define FT_OUTLINE_IGNORE_DROPOUTS /;"	d
FT_OUTLINE_INCLUDE_STUBS	.\\include\\freetype\\ftimage.h	/^#define FT_OUTLINE_INCLUDE_STUBS /;"	d
FT_OUTLINE_NONE	.\\include\\freetype\\ftimage.h	/^#define FT_OUTLINE_NONE /;"	d
FT_OUTLINE_OWNER	.\\include\\freetype\\ftimage.h	/^#define FT_OUTLINE_OWNER /;"	d
FT_OUTLINE_POINTS_MAX	.\\include\\freetype\\ftimage.h	/^#define FT_OUTLINE_POINTS_MAX /;"	d
FT_OUTLINE_REVERSE_FILL	.\\include\\freetype\\ftimage.h	/^#define FT_OUTLINE_REVERSE_FILL /;"	d
FT_OUTLINE_SINGLE_PASS	.\\include\\freetype\\ftimage.h	/^#define FT_OUTLINE_SINGLE_PASS /;"	d
FT_OUTLINE_SMART_DROPOUTS	.\\include\\freetype\\ftimage.h	/^#define FT_OUTLINE_SMART_DROPOUTS /;"	d
FT_Offset	.\\include\\freetype\\fttypes.h	/^  typedef size_t  FT_Offset;$/;"	t	typeref:typename:size_t
FT_Open_Args	.\\include\\freetype\\freetype.h	/^  } FT_Open_Args;$/;"	t	typeref:struct:FT_Open_Args_
FT_Open_Args_	.\\include\\freetype\\freetype.h	/^  typedef struct  FT_Open_Args_$/;"	s
FT_Orientation	.\\include\\freetype\\ftoutln.h	/^  } FT_Orientation;$/;"	t	typeref:enum:FT_Orientation_
FT_Orientation_	.\\include\\freetype\\ftoutln.h	/^  typedef enum  FT_Orientation_$/;"	g
FT_Outline	.\\include\\freetype\\ftimage.h	/^  } FT_Outline;$/;"	t	typeref:struct:FT_Outline_
FT_OutlineGlyph	.\\include\\freetype\\ftglyph.h	/^  typedef struct FT_OutlineGlyphRec_*  FT_OutlineGlyph;$/;"	t	typeref:struct:FT_OutlineGlyphRec_ *
FT_OutlineGlyphRec	.\\include\\freetype\\ftglyph.h	/^  } FT_OutlineGlyphRec;$/;"	t	typeref:struct:FT_OutlineGlyphRec_
FT_OutlineGlyphRec_	.\\include\\freetype\\ftglyph.h	/^  typedef struct  FT_OutlineGlyphRec_$/;"	s
FT_Outline_	.\\include\\freetype\\ftimage.h	/^  typedef struct  FT_Outline_$/;"	s
FT_Outline_ConicToFunc	.\\include\\freetype\\ftimage.h	/^  (*FT_Outline_ConicToFunc)( const FT_Vector*  control,$/;"	t	typeref:typename:int (*)(const FT_Vector * control,const FT_Vector * to,void * user)
FT_Outline_ConicTo_Func	.\\include\\freetype\\ftimage.h	/^#define FT_Outline_ConicTo_Func /;"	d
FT_Outline_CubicToFunc	.\\include\\freetype\\ftimage.h	/^  (*FT_Outline_CubicToFunc)( const FT_Vector*  control1,$/;"	t	typeref:typename:int (*)(const FT_Vector * control1,const FT_Vector * control2,const FT_Vector * to,void * user)
FT_Outline_CubicTo_Func	.\\include\\freetype\\ftimage.h	/^#define FT_Outline_CubicTo_Func /;"	d
FT_Outline_Funcs	.\\include\\freetype\\ftimage.h	/^  } FT_Outline_Funcs;$/;"	t	typeref:struct:FT_Outline_Funcs_
FT_Outline_Funcs_	.\\include\\freetype\\ftimage.h	/^  typedef struct  FT_Outline_Funcs_$/;"	s
FT_Outline_LineToFunc	.\\include\\freetype\\ftimage.h	/^  (*FT_Outline_LineToFunc)( const FT_Vector*  to,$/;"	t	typeref:typename:int (*)(const FT_Vector * to,void * user)
FT_Outline_LineTo_Func	.\\include\\freetype\\ftimage.h	/^#define FT_Outline_LineTo_Func /;"	d
FT_Outline_MoveToFunc	.\\include\\freetype\\ftimage.h	/^  (*FT_Outline_MoveToFunc)( const FT_Vector*  to,$/;"	t	typeref:typename:int (*)(const FT_Vector * to,void * user)
FT_Outline_MoveTo_Func	.\\include\\freetype\\ftimage.h	/^#define FT_Outline_MoveTo_Func /;"	d
FT_PAD_CEIL	.\\include\\freetype\\internal\\ftobjs.h	/^#define FT_PAD_CEIL(/;"	d
FT_PAD_FLOOR	.\\include\\freetype\\internal\\ftobjs.h	/^#define FT_PAD_FLOOR(/;"	d
FT_PAD_ROUND	.\\include\\freetype\\internal\\ftobjs.h	/^#define FT_PAD_ROUND(/;"	d
FT_PARAM_TAG_IGNORE_PREFERRED_FAMILY	.\\include\\freetype\\ftsnames.h	/^#define FT_PARAM_TAG_IGNORE_PREFERRED_FAMILY /;"	d
FT_PARAM_TAG_IGNORE_PREFERRED_SUBFAMILY	.\\include\\freetype\\ftsnames.h	/^#define FT_PARAM_TAG_IGNORE_PREFERRED_SUBFAMILY /;"	d
FT_PARAM_TAG_INCREMENTAL	.\\include\\freetype\\ftincrem.h	/^#define FT_PARAM_TAG_INCREMENTAL /;"	d
FT_PARAM_TAG_UNPATENTED_HINTING	.\\include\\freetype\\ttunpat.h	/^#define FT_PARAM_TAG_UNPATENTED_HINTING /;"	d
FT_PEEK_LONG	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_PEEK_LONG(/;"	d
FT_PEEK_LONG_LE	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_PEEK_LONG_LE(/;"	d
FT_PEEK_OFF3	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_PEEK_OFF3(/;"	d
FT_PEEK_OFF3_LE	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_PEEK_OFF3_LE(/;"	d
FT_PEEK_SHORT	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_PEEK_SHORT(/;"	d
FT_PEEK_SHORT_LE	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_PEEK_SHORT_LE(/;"	d
FT_PEEK_ULONG	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_PEEK_ULONG(/;"	d
FT_PEEK_ULONG_LE	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_PEEK_ULONG_LE(/;"	d
FT_PEEK_UOFF3	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_PEEK_UOFF3(/;"	d
FT_PEEK_UOFF3_LE	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_PEEK_UOFF3_LE(/;"	d
FT_PEEK_USHORT	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_PEEK_USHORT(/;"	d
FT_PEEK_USHORT_LE	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_PEEK_USHORT_LE(/;"	d
FT_PFR_GetAdvanceFunc	.\\include\\freetype\\internal\\services\\svpfr.h	/^  (*FT_PFR_GetAdvanceFunc)( FT_Face   face,$/;"	t	typeref:typename:FT_Error (*)(FT_Face face,FT_UInt gindex,FT_Pos * aadvance)
FT_PFR_GetKerningFunc	.\\include\\freetype\\internal\\services\\svpfr.h	/^  (*FT_PFR_GetKerningFunc)( FT_Face     face,$/;"	t	typeref:typename:FT_Error (*)(FT_Face face,FT_UInt left,FT_UInt right,FT_Vector * avector)
FT_PFR_GetMetricsFunc	.\\include\\freetype\\internal\\services\\svpfr.h	/^  (*FT_PFR_GetMetricsFunc)( FT_Face    face,$/;"	t	typeref:typename:FT_Error (*)(FT_Face face,FT_UInt * aoutline,FT_UInt * ametrics,FT_Fixed * ax_scale,FT_Fixed * ay_scale)
FT_PFR_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_PFR_H /;"	d
FT_PIC_Container	.\\include\\freetype\\internal\\ftpic.h	/^  } FT_PIC_Container;$/;"	t	typeref:struct:FT_PIC_Container_
FT_PIC_Container_	.\\include\\freetype\\internal\\ftpic.h	/^  typedef struct  FT_PIC_Container_$/;"	s
FT_PIXEL_MODE_BGRA	.\\include\\freetype\\ftimage.h	/^    FT_PIXEL_MODE_BGRA,$/;"	e	enum:FT_Pixel_Mode_
FT_PIXEL_MODE_GRAY	.\\include\\freetype\\ftimage.h	/^    FT_PIXEL_MODE_GRAY,$/;"	e	enum:FT_Pixel_Mode_
FT_PIXEL_MODE_GRAY2	.\\include\\freetype\\ftimage.h	/^    FT_PIXEL_MODE_GRAY2,$/;"	e	enum:FT_Pixel_Mode_
FT_PIXEL_MODE_GRAY4	.\\include\\freetype\\ftimage.h	/^    FT_PIXEL_MODE_GRAY4,$/;"	e	enum:FT_Pixel_Mode_
FT_PIXEL_MODE_LCD	.\\include\\freetype\\ftimage.h	/^    FT_PIXEL_MODE_LCD,$/;"	e	enum:FT_Pixel_Mode_
FT_PIXEL_MODE_LCD_V	.\\include\\freetype\\ftimage.h	/^    FT_PIXEL_MODE_LCD_V,$/;"	e	enum:FT_Pixel_Mode_
FT_PIXEL_MODE_MAX	.\\include\\freetype\\ftimage.h	/^    FT_PIXEL_MODE_MAX      \/* do not remove *\/$/;"	e	enum:FT_Pixel_Mode_
FT_PIXEL_MODE_MONO	.\\include\\freetype\\ftimage.h	/^    FT_PIXEL_MODE_MONO,$/;"	e	enum:FT_Pixel_Mode_
FT_PIXEL_MODE_NONE	.\\include\\freetype\\ftimage.h	/^    FT_PIXEL_MODE_NONE = 0,$/;"	e	enum:FT_Pixel_Mode_
FT_PIX_CEIL	.\\include\\freetype\\internal\\ftobjs.h	/^#define FT_PIX_CEIL(/;"	d
FT_PIX_FLOOR	.\\include\\freetype\\internal\\ftobjs.h	/^#define FT_PIX_FLOOR(/;"	d
FT_PIX_ROUND	.\\include\\freetype\\internal\\ftobjs.h	/^#define FT_PIX_ROUND(/;"	d
FT_Parameter	.\\include\\freetype\\freetype.h	/^  } FT_Parameter;$/;"	t	typeref:struct:FT_Parameter_
FT_Parameter_	.\\include\\freetype\\freetype.h	/^  typedef struct  FT_Parameter_$/;"	s
FT_Pixel_Mode	.\\include\\freetype\\ftimage.h	/^  } FT_Pixel_Mode;$/;"	t	typeref:enum:FT_Pixel_Mode_
FT_Pixel_Mode_	.\\include\\freetype\\ftimage.h	/^  typedef enum  FT_Pixel_Mode_$/;"	g
FT_Pointer	.\\include\\freetype\\fttypes.h	/^  typedef void*  FT_Pointer;$/;"	t	typeref:typename:void *
FT_Pos	.\\include\\freetype\\ftimage.h	/^  typedef signed long  FT_Pos;$/;"	t	typeref:typename:signed long
FT_Prop_GlyphToScriptMap	.\\include\\freetype\\ftautoh.h	/^  } FT_Prop_GlyphToScriptMap;$/;"	t	typeref:struct:FT_Prop_GlyphToScriptMap_
FT_Prop_GlyphToScriptMap_	.\\include\\freetype\\ftautoh.h	/^  typedef struct  FT_Prop_GlyphToScriptMap_$/;"	s
FT_Prop_IncreaseXHeight	.\\include\\freetype\\ftautoh.h	/^  } FT_Prop_IncreaseXHeight;$/;"	t	typeref:struct:FT_Prop_IncreaseXHeight_
FT_Prop_IncreaseXHeight_	.\\include\\freetype\\ftautoh.h	/^  typedef struct  FT_Prop_IncreaseXHeight_$/;"	s
FT_Properties_GetFunc	.\\include\\freetype\\internal\\services\\svprop.h	/^  (*FT_Properties_GetFunc)( FT_Module    module,$/;"	t	typeref:typename:FT_Error (*)(FT_Module module,const char * property_name,void * value)
FT_Properties_SetFunc	.\\include\\freetype\\internal\\services\\svprop.h	/^  (*FT_Properties_SetFunc)( FT_Module    module,$/;"	t	typeref:typename:FT_Error (*)(FT_Module module,const char * property_name,const void * value)
FT_PsName_GetFunc	.\\include\\freetype\\internal\\services\\svpostnm.h	/^  (*FT_PsName_GetFunc)( FT_Face  face );$/;"	t	typeref:typename:const char * (*)(FT_Face face)
FT_PtrDist	.\\include\\freetype\\fttypes.h	/^  typedef ft_ptrdiff_t  FT_PtrDist;$/;"	t	typeref:typename:ft_ptrdiff_t
FT_QALLOC	.\\include\\freetype\\internal\\ftmemory.h	/^#define FT_QALLOC(/;"	d
FT_QALLOC_MULT	.\\include\\freetype\\internal\\ftmemory.h	/^#define FT_QALLOC_MULT(/;"	d
FT_QNEW	.\\include\\freetype\\internal\\ftmemory.h	/^#define FT_QNEW(/;"	d
FT_QNEW_ARRAY	.\\include\\freetype\\internal\\ftmemory.h	/^#define FT_QNEW_ARRAY(/;"	d
FT_QREALLOC	.\\include\\freetype\\internal\\ftmemory.h	/^#define FT_QREALLOC(/;"	d
FT_QREALLOC_MULT	.\\include\\freetype\\internal\\ftmemory.h	/^#define FT_QREALLOC_MULT(/;"	d
FT_QRENEW_ARRAY	.\\include\\freetype\\internal\\ftmemory.h	/^#define FT_QRENEW_ARRAY(/;"	d
FT_RACCESS_N_RULES	.\\include\\freetype\\internal\\ftrfork.h	/^#define FT_RACCESS_N_RULES /;"	d
FT_RASTER_FLAG_AA	.\\include\\freetype\\ftimage.h	/^#define FT_RASTER_FLAG_AA /;"	d
FT_RASTER_FLAG_CLIP	.\\include\\freetype\\ftimage.h	/^#define FT_RASTER_FLAG_CLIP /;"	d
FT_RASTER_FLAG_DEFAULT	.\\include\\freetype\\ftimage.h	/^#define FT_RASTER_FLAG_DEFAULT /;"	d
FT_RASTER_FLAG_DIRECT	.\\include\\freetype\\ftimage.h	/^#define FT_RASTER_FLAG_DIRECT /;"	d
FT_READ_BYTE	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_READ_BYTE(/;"	d
FT_READ_CHAR	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_READ_CHAR(/;"	d
FT_READ_LONG	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_READ_LONG(/;"	d
FT_READ_LONG_LE	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_READ_LONG_LE(/;"	d
FT_READ_MACRO	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_READ_MACRO(/;"	d
FT_READ_OFF3	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_READ_OFF3(/;"	d
FT_READ_SHORT	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_READ_SHORT(/;"	d
FT_READ_SHORT_LE	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_READ_SHORT_LE(/;"	d
FT_READ_ULONG	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_READ_ULONG(/;"	d
FT_READ_ULONG_LE	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_READ_ULONG_LE(/;"	d
FT_READ_UOFF3	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_READ_UOFF3(/;"	d
FT_READ_USHORT	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_READ_USHORT(/;"	d
FT_READ_USHORT_LE	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_READ_USHORT_LE(/;"	d
FT_REALLOC	.\\include\\freetype\\internal\\ftmemory.h	/^#define FT_REALLOC(/;"	d
FT_REALLOC_MULT	.\\include\\freetype\\internal\\ftmemory.h	/^#define FT_REALLOC_MULT(/;"	d
FT_RENDERER	.\\include\\freetype\\internal\\ftobjs.h	/^#define FT_RENDERER(/;"	d
FT_RENDER_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_RENDER_H /;"	d
FT_RENDER_MODE_LCD	.\\include\\freetype\\freetype.h	/^    FT_RENDER_MODE_LCD,$/;"	e	enum:FT_Render_Mode_
FT_RENDER_MODE_LCD_V	.\\include\\freetype\\freetype.h	/^    FT_RENDER_MODE_LCD_V,$/;"	e	enum:FT_Render_Mode_
FT_RENDER_MODE_LIGHT	.\\include\\freetype\\freetype.h	/^    FT_RENDER_MODE_LIGHT,$/;"	e	enum:FT_Render_Mode_
FT_RENDER_MODE_MAX	.\\include\\freetype\\freetype.h	/^    FT_RENDER_MODE_MAX$/;"	e	enum:FT_Render_Mode_
FT_RENDER_MODE_MONO	.\\include\\freetype\\freetype.h	/^    FT_RENDER_MODE_MONO,$/;"	e	enum:FT_Render_Mode_
FT_RENDER_MODE_NORMAL	.\\include\\freetype\\freetype.h	/^    FT_RENDER_MODE_NORMAL = 0,$/;"	e	enum:FT_Render_Mode_
FT_RENDER_POOL_SIZE	.\\include\\freetype\\config\\ftoption.h	/^#define FT_RENDER_POOL_SIZE /;"	d
FT_RENEW_ARRAY	.\\include\\freetype\\internal\\ftmemory.h	/^#define FT_RENEW_ARRAY(/;"	d
FT_REQUEST_HEIGHT	.\\include\\freetype\\internal\\ftobjs.h	/^#define FT_REQUEST_HEIGHT(/;"	d
FT_REQUEST_WIDTH	.\\include\\freetype\\internal\\ftobjs.h	/^#define FT_REQUEST_WIDTH(/;"	d
FT_RFork_Ref	.\\include\\freetype\\internal\\ftrfork.h	/^  } FT_RFork_Ref;$/;"	t	typeref:struct:FT_RFork_Ref_
FT_RFork_Ref_	.\\include\\freetype\\internal\\ftrfork.h	/^  typedef struct  FT_RFork_Ref_$/;"	s
FT_RFork_Rule	.\\include\\freetype\\internal\\ftrfork.h	/^  } FT_RFork_Rule;$/;"	t	typeref:enum:FT_RFork_Rule_
FT_RFork_Rule_	.\\include\\freetype\\internal\\ftrfork.h	/^  typedef enum  FT_RFork_Rule_ {$/;"	g
FT_RFork_Rule_apple_double	.\\include\\freetype\\internal\\ftrfork.h	/^    FT_RFork_Rule_apple_double,$/;"	e	enum:FT_RFork_Rule_
FT_RFork_Rule_apple_single	.\\include\\freetype\\internal\\ftrfork.h	/^    FT_RFork_Rule_apple_single,$/;"	e	enum:FT_RFork_Rule_
FT_RFork_Rule_darwin_hfsplus	.\\include\\freetype\\internal\\ftrfork.h	/^    FT_RFork_Rule_darwin_hfsplus,$/;"	e	enum:FT_RFork_Rule_
FT_RFork_Rule_darwin_newvfs	.\\include\\freetype\\internal\\ftrfork.h	/^    FT_RFork_Rule_darwin_newvfs,$/;"	e	enum:FT_RFork_Rule_
FT_RFork_Rule_darwin_ufs_export	.\\include\\freetype\\internal\\ftrfork.h	/^    FT_RFork_Rule_darwin_ufs_export,$/;"	e	enum:FT_RFork_Rule_
FT_RFork_Rule_invalid	.\\include\\freetype\\internal\\ftrfork.h	/^    FT_RFork_Rule_invalid = -2,$/;"	e	enum:FT_RFork_Rule_
FT_RFork_Rule_linux_cap	.\\include\\freetype\\internal\\ftrfork.h	/^    FT_RFork_Rule_linux_cap,$/;"	e	enum:FT_RFork_Rule_
FT_RFork_Rule_linux_double	.\\include\\freetype\\internal\\ftrfork.h	/^    FT_RFork_Rule_linux_double,$/;"	e	enum:FT_RFork_Rule_
FT_RFork_Rule_linux_netatalk	.\\include\\freetype\\internal\\ftrfork.h	/^    FT_RFork_Rule_linux_netatalk$/;"	e	enum:FT_RFork_Rule_
FT_RFork_Rule_uknown	.\\include\\freetype\\internal\\ftrfork.h	/^    FT_RFork_Rule_uknown, \/* -1 *\/$/;"	e	enum:FT_RFork_Rule_
FT_RFork_Rule_vfat	.\\include\\freetype\\internal\\ftrfork.h	/^    FT_RFork_Rule_vfat,$/;"	e	enum:FT_RFork_Rule_
FT_Raster	.\\include\\freetype\\ftimage.h	/^  typedef struct FT_RasterRec_*  FT_Raster;$/;"	t	typeref:struct:FT_RasterRec_ *
FT_Raster_BitSet_Func	.\\include\\freetype\\ftimage.h	/^  (*FT_Raster_BitSet_Func)( int    y,$/;"	t	typeref:typename:void (*)(int y,int x,void * user)
FT_Raster_BitTest_Func	.\\include\\freetype\\ftimage.h	/^  (*FT_Raster_BitTest_Func)( int    y,$/;"	t	typeref:typename:int (*)(int y,int x,void * user)
FT_Raster_DoneFunc	.\\include\\freetype\\ftimage.h	/^  (*FT_Raster_DoneFunc)( FT_Raster  raster );$/;"	t	typeref:typename:void (*)(FT_Raster raster)
FT_Raster_Done_Func	.\\include\\freetype\\ftimage.h	/^#define FT_Raster_Done_Func /;"	d
FT_Raster_Funcs	.\\include\\freetype\\ftimage.h	/^  } FT_Raster_Funcs;$/;"	t	typeref:struct:FT_Raster_Funcs_
FT_Raster_Funcs_	.\\include\\freetype\\ftimage.h	/^  typedef struct  FT_Raster_Funcs_$/;"	s
FT_Raster_NewFunc	.\\include\\freetype\\ftimage.h	/^  (*FT_Raster_NewFunc)( void*       memory,$/;"	t	typeref:typename:int (*)(void * memory,FT_Raster * raster)
FT_Raster_New_Func	.\\include\\freetype\\ftimage.h	/^#define FT_Raster_New_Func /;"	d
FT_Raster_Params	.\\include\\freetype\\ftimage.h	/^  } FT_Raster_Params;$/;"	t	typeref:struct:FT_Raster_Params_
FT_Raster_Params_	.\\include\\freetype\\ftimage.h	/^  typedef struct  FT_Raster_Params_$/;"	s
FT_Raster_RenderFunc	.\\include\\freetype\\ftimage.h	/^  (*FT_Raster_RenderFunc)( FT_Raster                raster,$/;"	t	typeref:typename:int (*)(FT_Raster raster,const FT_Raster_Params * params)
FT_Raster_Render_Func	.\\include\\freetype\\ftimage.h	/^#define FT_Raster_Render_Func /;"	d
FT_Raster_ResetFunc	.\\include\\freetype\\ftimage.h	/^  (*FT_Raster_ResetFunc)( FT_Raster       raster,$/;"	t	typeref:typename:void (*)(FT_Raster raster,unsigned char * pool_base,unsigned long pool_size)
FT_Raster_Reset_Func	.\\include\\freetype\\ftimage.h	/^#define FT_Raster_Reset_Func /;"	d
FT_Raster_SetModeFunc	.\\include\\freetype\\ftimage.h	/^  (*FT_Raster_SetModeFunc)( FT_Raster      raster,$/;"	t	typeref:typename:int (*)(FT_Raster raster,unsigned long mode,void * args)
FT_Raster_Set_Mode_Func	.\\include\\freetype\\ftimage.h	/^#define FT_Raster_Set_Mode_Func /;"	d
FT_Raster_Span_Func	.\\include\\freetype\\ftimage.h	/^#define FT_Raster_Span_Func /;"	d
FT_Realloc_Func	.\\include\\freetype\\ftsystem.h	/^  (*FT_Realloc_Func)( FT_Memory  memory,$/;"	t	typeref:typename:void * (*)(FT_Memory memory,long cur_size,long new_size,void * block)
FT_Render_Mode	.\\include\\freetype\\freetype.h	/^  } FT_Render_Mode;$/;"	t	typeref:enum:FT_Render_Mode_
FT_Render_Mode_	.\\include\\freetype\\freetype.h	/^  typedef enum  FT_Render_Mode_$/;"	g
FT_Renderer	.\\include\\freetype\\freetype.h	/^  typedef struct FT_RendererRec_*  FT_Renderer;$/;"	t	typeref:struct:FT_RendererRec_ *
FT_RendererRec	.\\include\\freetype\\internal\\ftobjs.h	/^  } FT_RendererRec;$/;"	t	typeref:struct:FT_RendererRec_
FT_RendererRec_	.\\include\\freetype\\internal\\ftobjs.h	/^  typedef struct  FT_RendererRec_$/;"	s
FT_Renderer_Class	.\\include\\freetype\\ftrender.h	/^  } FT_Renderer_Class;$/;"	t	typeref:struct:FT_Renderer_Class_
FT_Renderer_Class_	.\\include\\freetype\\ftrender.h	/^  typedef struct  FT_Renderer_Class_$/;"	s
FT_Renderer_GetCBoxFunc	.\\include\\freetype\\ftrender.h	/^  (*FT_Renderer_GetCBoxFunc)( FT_Renderer   renderer,$/;"	t	typeref:typename:void (*)(FT_Renderer renderer,FT_GlyphSlot slot,FT_BBox * cbox)
FT_Renderer_RenderFunc	.\\include\\freetype\\ftrender.h	/^  (*FT_Renderer_RenderFunc)( FT_Renderer       renderer,$/;"	t	typeref:typename:FT_Error (*)(FT_Renderer renderer,FT_GlyphSlot slot,FT_UInt mode,const FT_Vector * origin)
FT_Renderer_SetModeFunc	.\\include\\freetype\\ftrender.h	/^  (*FT_Renderer_SetModeFunc)( FT_Renderer  renderer,$/;"	t	typeref:typename:FT_Error (*)(FT_Renderer renderer,FT_ULong mode_tag,FT_Pointer mode_ptr)
FT_Renderer_TransformFunc	.\\include\\freetype\\ftrender.h	/^  (*FT_Renderer_TransformFunc)( FT_Renderer       renderer,$/;"	t	typeref:typename:FT_Error (*)(FT_Renderer renderer,FT_GlyphSlot slot,const FT_Matrix * matrix,const FT_Vector * delta)
FT_SERVICE_BDF_H	.\\include\\freetype\\internal\\ftserv.h	/^#define FT_SERVICE_BDF_H /;"	d
FT_SERVICE_CID_H	.\\include\\freetype\\internal\\ftserv.h	/^#define FT_SERVICE_CID_H /;"	d
FT_SERVICE_FONT_FORMAT_H	.\\include\\freetype\\internal\\ftserv.h	/^#define FT_SERVICE_FONT_FORMAT_H /;"	d
FT_SERVICE_GLYPH_DICT_H	.\\include\\freetype\\internal\\ftserv.h	/^#define FT_SERVICE_GLYPH_DICT_H /;"	d
FT_SERVICE_GX_VALIDATE_H	.\\include\\freetype\\internal\\ftserv.h	/^#define FT_SERVICE_GX_VALIDATE_H /;"	d
FT_SERVICE_ID_BDF	.\\include\\freetype\\internal\\services\\svbdf.h	/^#define FT_SERVICE_ID_BDF /;"	d
FT_SERVICE_ID_CID	.\\include\\freetype\\internal\\services\\svcid.h	/^#define FT_SERVICE_ID_CID /;"	d
FT_SERVICE_ID_CLASSICKERN_VALIDATE	.\\include\\freetype\\internal\\services\\svgxval.h	/^#define FT_SERVICE_ID_CLASSICKERN_VALIDATE /;"	d
FT_SERVICE_ID_FONT_FORMAT	.\\include\\freetype\\internal\\services\\svfntfmt.h	/^#define FT_SERVICE_ID_FONT_FORMAT /;"	d
FT_SERVICE_ID_GLYPH_DICT	.\\include\\freetype\\internal\\services\\svgldict.h	/^#define FT_SERVICE_ID_GLYPH_DICT /;"	d
FT_SERVICE_ID_GX_VALIDATE	.\\include\\freetype\\internal\\services\\svgxval.h	/^#define FT_SERVICE_ID_GX_VALIDATE /;"	d
FT_SERVICE_ID_KERNING	.\\include\\freetype\\internal\\services\\svkern.h	/^#define FT_SERVICE_ID_KERNING /;"	d
FT_SERVICE_ID_MULTI_MASTERS	.\\include\\freetype\\internal\\services\\svmm.h	/^#define FT_SERVICE_ID_MULTI_MASTERS /;"	d
FT_SERVICE_ID_OPENTYPE_VALIDATE	.\\include\\freetype\\internal\\services\\svotval.h	/^#define FT_SERVICE_ID_OPENTYPE_VALIDATE /;"	d
FT_SERVICE_ID_PFR_METRICS	.\\include\\freetype\\internal\\services\\svpfr.h	/^#define FT_SERVICE_ID_PFR_METRICS /;"	d
FT_SERVICE_ID_POSTSCRIPT_CMAPS	.\\include\\freetype\\internal\\services\\svpscmap.h	/^#define FT_SERVICE_ID_POSTSCRIPT_CMAPS /;"	d
FT_SERVICE_ID_POSTSCRIPT_FONT_NAME	.\\include\\freetype\\internal\\services\\svpostnm.h	/^#define FT_SERVICE_ID_POSTSCRIPT_FONT_NAME /;"	d
FT_SERVICE_ID_POSTSCRIPT_INFO	.\\include\\freetype\\internal\\services\\svpsinfo.h	/^#define FT_SERVICE_ID_POSTSCRIPT_INFO /;"	d
FT_SERVICE_ID_PROPERTIES	.\\include\\freetype\\internal\\services\\svprop.h	/^#define FT_SERVICE_ID_PROPERTIES /;"	d
FT_SERVICE_ID_SFNT_TABLE	.\\include\\freetype\\internal\\services\\svsfnt.h	/^#define FT_SERVICE_ID_SFNT_TABLE /;"	d
FT_SERVICE_ID_TRUETYPE_ENGINE	.\\include\\freetype\\internal\\services\\svtteng.h	/^#define FT_SERVICE_ID_TRUETYPE_ENGINE /;"	d
FT_SERVICE_ID_TT_CMAP	.\\include\\freetype\\internal\\services\\svttcmap.h	/^#define FT_SERVICE_ID_TT_CMAP /;"	d
FT_SERVICE_ID_TT_GLYF	.\\include\\freetype\\internal\\services\\svttglyf.h	/^#define FT_SERVICE_ID_TT_GLYF /;"	d
FT_SERVICE_ID_WINFNT	.\\include\\freetype\\internal\\services\\svwinfnt.h	/^#define FT_SERVICE_ID_WINFNT /;"	d
FT_SERVICE_KERNING_H	.\\include\\freetype\\internal\\ftserv.h	/^#define FT_SERVICE_KERNING_H /;"	d
FT_SERVICE_MULTIPLE_MASTERS_H	.\\include\\freetype\\internal\\ftserv.h	/^#define FT_SERVICE_MULTIPLE_MASTERS_H /;"	d
FT_SERVICE_OPENTYPE_VALIDATE_H	.\\include\\freetype\\internal\\ftserv.h	/^#define FT_SERVICE_OPENTYPE_VALIDATE_H /;"	d
FT_SERVICE_PFR_H	.\\include\\freetype\\internal\\ftserv.h	/^#define FT_SERVICE_PFR_H /;"	d
FT_SERVICE_POSTSCRIPT_CMAPS_H	.\\include\\freetype\\internal\\ftserv.h	/^#define FT_SERVICE_POSTSCRIPT_CMAPS_H /;"	d
FT_SERVICE_POSTSCRIPT_INFO_H	.\\include\\freetype\\internal\\ftserv.h	/^#define FT_SERVICE_POSTSCRIPT_INFO_H /;"	d
FT_SERVICE_POSTSCRIPT_NAME_H	.\\include\\freetype\\internal\\ftserv.h	/^#define FT_SERVICE_POSTSCRIPT_NAME_H /;"	d
FT_SERVICE_PROPERTIES_H	.\\include\\freetype\\internal\\ftserv.h	/^#define FT_SERVICE_PROPERTIES_H /;"	d
FT_SERVICE_SFNT_H	.\\include\\freetype\\internal\\ftserv.h	/^#define FT_SERVICE_SFNT_H /;"	d
FT_SERVICE_TRUETYPE_ENGINE_H	.\\include\\freetype\\internal\\ftserv.h	/^#define FT_SERVICE_TRUETYPE_ENGINE_H /;"	d
FT_SERVICE_TRUETYPE_GLYF_H	.\\include\\freetype\\internal\\ftserv.h	/^#define FT_SERVICE_TRUETYPE_GLYF_H /;"	d
FT_SERVICE_TT_CMAP_H	.\\include\\freetype\\internal\\ftserv.h	/^#define FT_SERVICE_TT_CMAP_H /;"	d
FT_SERVICE_UNAVAILABLE	.\\include\\freetype\\internal\\ftserv.h	/^#define FT_SERVICE_UNAVAILABLE /;"	d
FT_SERVICE_WINFNT_H	.\\include\\freetype\\internal\\ftserv.h	/^#define FT_SERVICE_WINFNT_H /;"	d
FT_SET_ERROR	.\\include\\freetype\\internal\\ftmemory.h	/^#define FT_SET_ERROR(/;"	d
FT_SFNT_HEAD	.\\include\\freetype\\tttables.h	/^    FT_SFNT_HEAD,$/;"	e	enum:FT_Sfnt_Tag_
FT_SFNT_HHEA	.\\include\\freetype\\tttables.h	/^    FT_SFNT_HHEA,$/;"	e	enum:FT_Sfnt_Tag_
FT_SFNT_MAX	.\\include\\freetype\\tttables.h	/^    FT_SFNT_MAX$/;"	e	enum:FT_Sfnt_Tag_
FT_SFNT_MAXP	.\\include\\freetype\\tttables.h	/^    FT_SFNT_MAXP,$/;"	e	enum:FT_Sfnt_Tag_
FT_SFNT_NAMES_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_SFNT_NAMES_H /;"	d
FT_SFNT_OS2	.\\include\\freetype\\tttables.h	/^    FT_SFNT_OS2,$/;"	e	enum:FT_Sfnt_Tag_
FT_SFNT_PCLT	.\\include\\freetype\\tttables.h	/^    FT_SFNT_PCLT,$/;"	e	enum:FT_Sfnt_Tag_
FT_SFNT_POST	.\\include\\freetype\\tttables.h	/^    FT_SFNT_POST,$/;"	e	enum:FT_Sfnt_Tag_
FT_SFNT_TableGetFunc	.\\include\\freetype\\internal\\services\\svsfnt.h	/^  (*FT_SFNT_TableGetFunc)( FT_Face      face,$/;"	t	typeref:typename:void * (*)(FT_Face face,FT_Sfnt_Tag tag)
FT_SFNT_TableInfoFunc	.\\include\\freetype\\internal\\services\\svsfnt.h	/^  (*FT_SFNT_TableInfoFunc)( FT_Face    face,$/;"	t	typeref:typename:FT_Error (*)(FT_Face face,FT_UInt idx,FT_ULong * tag,FT_ULong * offset,FT_ULong * length)
FT_SFNT_TableLoadFunc	.\\include\\freetype\\internal\\services\\svsfnt.h	/^  (*FT_SFNT_TableLoadFunc)( FT_Face    face,$/;"	t	typeref:typename:FT_Error (*)(FT_Face face,FT_ULong tag,FT_Long offset,FT_Byte * buffer,FT_ULong * length)
FT_SFNT_VHEA	.\\include\\freetype\\tttables.h	/^    FT_SFNT_VHEA,$/;"	e	enum:FT_Sfnt_Tag_
FT_SIZE	.\\include\\freetype\\internal\\ftobjs.h	/^#define FT_SIZE(/;"	d
FT_SIZEOF_INT	.\\include\\freetype\\config\\ftconfig.h	/^#define FT_SIZEOF_INT /;"	d
FT_SIZEOF_LONG	.\\include\\freetype\\config\\ftconfig.h	/^#define FT_SIZEOF_LONG /;"	d
FT_SIZES_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_SIZES_H /;"	d
FT_SIZE_FACE	.\\include\\freetype\\internal\\ftobjs.h	/^#define FT_SIZE_FACE(/;"	d
FT_SIZE_REQUEST_TYPE_BBOX	.\\include\\freetype\\freetype.h	/^    FT_SIZE_REQUEST_TYPE_BBOX,$/;"	e	enum:FT_Size_Request_Type_
FT_SIZE_REQUEST_TYPE_CELL	.\\include\\freetype\\freetype.h	/^    FT_SIZE_REQUEST_TYPE_CELL,$/;"	e	enum:FT_Size_Request_Type_
FT_SIZE_REQUEST_TYPE_MAX	.\\include\\freetype\\freetype.h	/^    FT_SIZE_REQUEST_TYPE_MAX$/;"	e	enum:FT_Size_Request_Type_
FT_SIZE_REQUEST_TYPE_NOMINAL	.\\include\\freetype\\freetype.h	/^    FT_SIZE_REQUEST_TYPE_NOMINAL,$/;"	e	enum:FT_Size_Request_Type_
FT_SIZE_REQUEST_TYPE_REAL_DIM	.\\include\\freetype\\freetype.h	/^    FT_SIZE_REQUEST_TYPE_REAL_DIM,$/;"	e	enum:FT_Size_Request_Type_
FT_SIZE_REQUEST_TYPE_SCALES	.\\include\\freetype\\freetype.h	/^    FT_SIZE_REQUEST_TYPE_SCALES,$/;"	e	enum:FT_Size_Request_Type_
FT_SLOT	.\\include\\freetype\\internal\\ftobjs.h	/^#define FT_SLOT(/;"	d
FT_SLOT_FACE	.\\include\\freetype\\internal\\ftobjs.h	/^#define FT_SLOT_FACE(/;"	d
FT_STRCPYN	.\\include\\freetype\\internal\\ftmemory.h	/^#define FT_STRCPYN(/;"	d
FT_STRDUP	.\\include\\freetype\\internal\\ftmemory.h	/^#define FT_STRDUP(/;"	d
FT_STREAM_POS	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_STREAM_POS(/;"	d
FT_STREAM_READ	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_STREAM_READ(/;"	d
FT_STREAM_READ_AT	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_STREAM_READ_AT(/;"	d
FT_STREAM_READ_FIELDS	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_STREAM_READ_FIELDS(/;"	d
FT_STREAM_SEEK	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_STREAM_SEEK(/;"	d
FT_STREAM_SKIP	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_STREAM_SKIP(/;"	d
FT_STROKER_BORDER_LEFT	.\\include\\freetype\\ftstroke.h	/^    FT_STROKER_BORDER_LEFT = 0,$/;"	e	enum:FT_StrokerBorder_
FT_STROKER_BORDER_RIGHT	.\\include\\freetype\\ftstroke.h	/^    FT_STROKER_BORDER_RIGHT$/;"	e	enum:FT_StrokerBorder_
FT_STROKER_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_STROKER_H /;"	d
FT_STROKER_LINECAP_BUTT	.\\include\\freetype\\ftstroke.h	/^    FT_STROKER_LINECAP_BUTT = 0,$/;"	e	enum:FT_Stroker_LineCap_
FT_STROKER_LINECAP_ROUND	.\\include\\freetype\\ftstroke.h	/^    FT_STROKER_LINECAP_ROUND,$/;"	e	enum:FT_Stroker_LineCap_
FT_STROKER_LINECAP_SQUARE	.\\include\\freetype\\ftstroke.h	/^    FT_STROKER_LINECAP_SQUARE$/;"	e	enum:FT_Stroker_LineCap_
FT_STROKER_LINEJOIN_BEVEL	.\\include\\freetype\\ftstroke.h	/^    FT_STROKER_LINEJOIN_BEVEL          = 1,$/;"	e	enum:FT_Stroker_LineJoin_
FT_STROKER_LINEJOIN_MITER	.\\include\\freetype\\ftstroke.h	/^    FT_STROKER_LINEJOIN_MITER          = FT_STROKER_LINEJOIN_MITER_VARIABLE,$/;"	e	enum:FT_Stroker_LineJoin_
FT_STROKER_LINEJOIN_MITER_FIXED	.\\include\\freetype\\ftstroke.h	/^    FT_STROKER_LINEJOIN_MITER_FIXED    = 3$/;"	e	enum:FT_Stroker_LineJoin_
FT_STROKER_LINEJOIN_MITER_VARIABLE	.\\include\\freetype\\ftstroke.h	/^    FT_STROKER_LINEJOIN_MITER_VARIABLE = 2,$/;"	e	enum:FT_Stroker_LineJoin_
FT_STROKER_LINEJOIN_ROUND	.\\include\\freetype\\ftstroke.h	/^    FT_STROKER_LINEJOIN_ROUND          = 0,$/;"	e	enum:FT_Stroker_LineJoin_
FT_STYLE_FLAG_BOLD	.\\include\\freetype\\freetype.h	/^#define FT_STYLE_FLAG_BOLD /;"	d
FT_STYLE_FLAG_ITALIC	.\\include\\freetype\\freetype.h	/^#define FT_STYLE_FLAG_ITALIC /;"	d
FT_SUBGLYPH_FLAG_2X2	.\\include\\freetype\\freetype.h	/^#define FT_SUBGLYPH_FLAG_2X2 /;"	d
FT_SUBGLYPH_FLAG_ARGS_ARE_WORDS	.\\include\\freetype\\freetype.h	/^#define FT_SUBGLYPH_FLAG_ARGS_ARE_WORDS /;"	d
FT_SUBGLYPH_FLAG_ARGS_ARE_XY_VALUES	.\\include\\freetype\\freetype.h	/^#define FT_SUBGLYPH_FLAG_ARGS_ARE_XY_VALUES /;"	d
FT_SUBGLYPH_FLAG_ROUND_XY_TO_GRID	.\\include\\freetype\\freetype.h	/^#define FT_SUBGLYPH_FLAG_ROUND_XY_TO_GRID /;"	d
FT_SUBGLYPH_FLAG_SCALE	.\\include\\freetype\\freetype.h	/^#define FT_SUBGLYPH_FLAG_SCALE /;"	d
FT_SUBGLYPH_FLAG_USE_MY_METRICS	.\\include\\freetype\\freetype.h	/^#define FT_SUBGLYPH_FLAG_USE_MY_METRICS /;"	d
FT_SUBGLYPH_FLAG_XY_SCALE	.\\include\\freetype\\freetype.h	/^#define FT_SUBGLYPH_FLAG_XY_SCALE /;"	d
FT_SYNTHESIS_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_SYNTHESIS_H /;"	d
FT_SYSTEM_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_SYSTEM_H /;"	d
FT_ServiceCache	.\\include\\freetype\\internal\\ftserv.h	/^  } FT_ServiceCacheRec, *FT_ServiceCache;$/;"	t	typeref:struct:FT_ServiceCacheRec_ *
FT_ServiceCacheRec	.\\include\\freetype\\internal\\ftserv.h	/^  } FT_ServiceCacheRec, *FT_ServiceCache;$/;"	t	typeref:struct:FT_ServiceCacheRec_
FT_ServiceCacheRec_	.\\include\\freetype\\internal\\ftserv.h	/^  typedef struct  FT_ServiceCacheRec_$/;"	s
FT_ServiceDesc	.\\include\\freetype\\internal\\ftserv.h	/^  typedef const FT_ServiceDescRec*  FT_ServiceDesc;$/;"	t	typeref:typename:const FT_ServiceDescRec *
FT_ServiceDescRec	.\\include\\freetype\\internal\\ftserv.h	/^  } FT_ServiceDescRec;$/;"	t	typeref:struct:FT_ServiceDescRec_
FT_ServiceDescRec_	.\\include\\freetype\\internal\\ftserv.h	/^  typedef struct  FT_ServiceDescRec_$/;"	s
FT_Set_MM_Blend_Func	.\\include\\freetype\\internal\\services\\svmm.h	/^  (*FT_Set_MM_Blend_Func)( FT_Face   face,$/;"	t	typeref:typename:FT_Error (*)(FT_Face face,FT_UInt num_coords,FT_Long * coords)
FT_Set_MM_Design_Func	.\\include\\freetype\\internal\\services\\svmm.h	/^  (*FT_Set_MM_Design_Func)( FT_Face   face,$/;"	t	typeref:typename:FT_Error (*)(FT_Face face,FT_UInt num_coords,FT_Long * coords)
FT_Set_Var_Design_Func	.\\include\\freetype\\internal\\services\\svmm.h	/^  (*FT_Set_Var_Design_Func)( FT_Face    face,$/;"	t	typeref:typename:FT_Error (*)(FT_Face face,FT_UInt num_coords,FT_Fixed * coords)
FT_SfntName	.\\include\\freetype\\ftsnames.h	/^  } FT_SfntName;$/;"	t	typeref:struct:FT_SfntName_
FT_SfntName_	.\\include\\freetype\\ftsnames.h	/^  typedef struct  FT_SfntName_$/;"	s
FT_Sfnt_Tag	.\\include\\freetype\\tttables.h	/^  } FT_Sfnt_Tag;$/;"	t	typeref:enum:FT_Sfnt_Tag_
FT_Sfnt_Tag_	.\\include\\freetype\\tttables.h	/^  typedef enum  FT_Sfnt_Tag_$/;"	g
FT_Short	.\\include\\freetype\\fttypes.h	/^  typedef signed short  FT_Short;$/;"	t	typeref:typename:signed short
FT_Size	.\\include\\freetype\\freetype.h	/^  typedef struct FT_SizeRec_*  FT_Size;$/;"	t	typeref:struct:FT_SizeRec_ *
FT_SizeRec	.\\include\\freetype\\freetype.h	/^  } FT_SizeRec;$/;"	t	typeref:struct:FT_SizeRec_
FT_SizeRec_	.\\include\\freetype\\freetype.h	/^  typedef struct  FT_SizeRec_$/;"	s
FT_Size_DoneFunc	.\\include\\freetype\\internal\\ftdriver.h	/^  (*FT_Size_DoneFunc)( FT_Size  size );$/;"	t	typeref:typename:void (*)(FT_Size size)
FT_Size_InitFunc	.\\include\\freetype\\internal\\ftdriver.h	/^  (*FT_Size_InitFunc)( FT_Size  size );$/;"	t	typeref:typename:FT_Error (*)(FT_Size size)
FT_Size_Internal	.\\include\\freetype\\freetype.h	/^  typedef struct FT_Size_InternalRec_*  FT_Size_Internal;$/;"	t	typeref:struct:FT_Size_InternalRec_ *
FT_Size_Metrics	.\\include\\freetype\\freetype.h	/^  } FT_Size_Metrics;$/;"	t	typeref:struct:FT_Size_Metrics_
FT_Size_Metrics_	.\\include\\freetype\\freetype.h	/^  typedef struct  FT_Size_Metrics_$/;"	s
FT_Size_Request	.\\include\\freetype\\freetype.h	/^  typedef struct FT_Size_RequestRec_  *FT_Size_Request;$/;"	t	typeref:struct:FT_Size_RequestRec_ *
FT_Size_RequestFunc	.\\include\\freetype\\internal\\ftdriver.h	/^  (*FT_Size_RequestFunc)( FT_Size          size,$/;"	t	typeref:typename:FT_Error (*)(FT_Size size,FT_Size_Request req)
FT_Size_RequestRec	.\\include\\freetype\\freetype.h	/^  } FT_Size_RequestRec;$/;"	t	typeref:struct:FT_Size_RequestRec_
FT_Size_RequestRec_	.\\include\\freetype\\freetype.h	/^  typedef struct  FT_Size_RequestRec_$/;"	s
FT_Size_Request_Type	.\\include\\freetype\\freetype.h	/^  } FT_Size_Request_Type;$/;"	t	typeref:enum:FT_Size_Request_Type_
FT_Size_Request_Type_	.\\include\\freetype\\freetype.h	/^  typedef enum  FT_Size_Request_Type_$/;"	g
FT_Size_SelectFunc	.\\include\\freetype\\internal\\ftdriver.h	/^  (*FT_Size_SelectFunc)( FT_Size   size,$/;"	t	typeref:typename:FT_Error (*)(FT_Size size,FT_ULong size_index)
FT_Slot_DoneFunc	.\\include\\freetype\\internal\\ftdriver.h	/^  (*FT_Slot_DoneFunc)( FT_GlyphSlot  slot );$/;"	t	typeref:typename:void (*)(FT_GlyphSlot slot)
FT_Slot_InitFunc	.\\include\\freetype\\internal\\ftdriver.h	/^  (*FT_Slot_InitFunc)( FT_GlyphSlot  slot );$/;"	t	typeref:typename:FT_Error (*)(FT_GlyphSlot slot)
FT_Slot_Internal	.\\include\\freetype\\freetype.h	/^  typedef struct FT_Slot_InternalRec_*  FT_Slot_Internal;$/;"	t	typeref:struct:FT_Slot_InternalRec_ *
FT_Slot_InternalRec_	.\\include\\freetype\\internal\\ftobjs.h	/^  typedef struct  FT_Slot_InternalRec_$/;"	s
FT_Slot_LoadFunc	.\\include\\freetype\\internal\\ftdriver.h	/^  (*FT_Slot_LoadFunc)( FT_GlyphSlot  slot,$/;"	t	typeref:typename:FT_Error (*)(FT_GlyphSlot slot,FT_Size size,FT_UInt glyph_index,FT_Int32 load_flags)
FT_Span	.\\include\\freetype\\ftimage.h	/^  } FT_Span;$/;"	t	typeref:struct:FT_Span_
FT_SpanFunc	.\\include\\freetype\\ftimage.h	/^  (*FT_SpanFunc)( int             y,$/;"	t	typeref:typename:void (*)(int y,int count,const FT_Span * spans,void * user)
FT_Span_	.\\include\\freetype\\ftimage.h	/^  typedef struct  FT_Span_$/;"	s
FT_Stream	.\\include\\freetype\\ftsystem.h	/^  typedef struct FT_StreamRec_*  FT_Stream;$/;"	t	typeref:struct:FT_StreamRec_ *
FT_StreamDesc	.\\include\\freetype\\ftsystem.h	/^  } FT_StreamDesc;$/;"	t	typeref:union:FT_StreamDesc_
FT_StreamDesc_	.\\include\\freetype\\ftsystem.h	/^  typedef union  FT_StreamDesc_$/;"	u
FT_StreamRec	.\\include\\freetype\\ftsystem.h	/^  } FT_StreamRec;$/;"	t	typeref:struct:FT_StreamRec_
FT_StreamRec_	.\\include\\freetype\\ftsystem.h	/^  typedef struct  FT_StreamRec_$/;"	s
FT_Stream_CloseFunc	.\\include\\freetype\\ftsystem.h	/^  (*FT_Stream_CloseFunc)( FT_Stream  stream );$/;"	t	typeref:typename:void (*)(FT_Stream stream)
FT_Stream_IoFunc	.\\include\\freetype\\ftsystem.h	/^  (*FT_Stream_IoFunc)( FT_Stream       stream,$/;"	t	typeref:typename:unsigned long (*)(FT_Stream stream,unsigned long offset,unsigned char * buffer,unsigned long count)
FT_String	.\\include\\freetype\\fttypes.h	/^  typedef char  FT_String;$/;"	t	typeref:typename:char
FT_Stroker	.\\include\\freetype\\ftstroke.h	/^  typedef struct FT_StrokerRec_*  FT_Stroker;$/;"	t	typeref:struct:FT_StrokerRec_ *
FT_StrokerBorder	.\\include\\freetype\\ftstroke.h	/^  } FT_StrokerBorder;$/;"	t	typeref:enum:FT_StrokerBorder_
FT_StrokerBorder_	.\\include\\freetype\\ftstroke.h	/^  typedef enum  FT_StrokerBorder_$/;"	g
FT_Stroker_LineCap	.\\include\\freetype\\ftstroke.h	/^  } FT_Stroker_LineCap;$/;"	t	typeref:enum:FT_Stroker_LineCap_
FT_Stroker_LineCap_	.\\include\\freetype\\ftstroke.h	/^  typedef enum  FT_Stroker_LineCap_$/;"	g
FT_Stroker_LineJoin	.\\include\\freetype\\ftstroke.h	/^  } FT_Stroker_LineJoin;$/;"	t	typeref:enum:FT_Stroker_LineJoin_
FT_Stroker_LineJoin_	.\\include\\freetype\\ftstroke.h	/^  typedef enum  FT_Stroker_LineJoin_$/;"	g
FT_SubGlyph	.\\include\\freetype\\freetype.h	/^  typedef struct FT_SubGlyphRec_*  FT_SubGlyph;$/;"	t	typeref:struct:FT_SubGlyphRec_ *
FT_SubGlyphRec	.\\include\\freetype\\internal\\ftgloadr.h	/^  } FT_SubGlyphRec;$/;"	t	typeref:struct:FT_SubGlyphRec_
FT_SubGlyphRec_	.\\include\\freetype\\internal\\ftgloadr.h	/^  typedef struct  FT_SubGlyphRec_$/;"	s
FT_THROW	.\\include\\freetype\\internal\\ftdebug.h	/^#define FT_THROW(/;"	d
FT_TRACE	.\\include\\freetype\\internal\\ftdebug.h	/^#define FT_TRACE(/;"	d
FT_TRACE0	.\\include\\freetype\\internal\\ftdebug.h	/^#define FT_TRACE0(/;"	d
FT_TRACE1	.\\include\\freetype\\internal\\ftdebug.h	/^#define FT_TRACE1(/;"	d
FT_TRACE2	.\\include\\freetype\\internal\\ftdebug.h	/^#define FT_TRACE2(/;"	d
FT_TRACE3	.\\include\\freetype\\internal\\ftdebug.h	/^#define FT_TRACE3(/;"	d
FT_TRACE4	.\\include\\freetype\\internal\\ftdebug.h	/^#define FT_TRACE4(/;"	d
FT_TRACE5	.\\include\\freetype\\internal\\ftdebug.h	/^#define FT_TRACE5(/;"	d
FT_TRACE6	.\\include\\freetype\\internal\\ftdebug.h	/^#define FT_TRACE6(/;"	d
FT_TRACE7	.\\include\\freetype\\internal\\ftdebug.h	/^#define FT_TRACE7(/;"	d
FT_TRACE_DEF	.\\include\\freetype\\internal\\ftdebug.h	/^#define FT_TRACE_DEF(/;"	d
FT_TRIGONOMETRY_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_TRIGONOMETRY_H /;"	d
FT_TRUETYPE_DRIVER_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_TRUETYPE_DRIVER_H /;"	d
FT_TRUETYPE_ENGINE_TYPE_NONE	.\\include\\freetype\\ftmodapi.h	/^    FT_TRUETYPE_ENGINE_TYPE_NONE = 0,$/;"	e	enum:FT_TrueTypeEngineType_
FT_TRUETYPE_ENGINE_TYPE_PATENTED	.\\include\\freetype\\ftmodapi.h	/^    FT_TRUETYPE_ENGINE_TYPE_PATENTED$/;"	e	enum:FT_TrueTypeEngineType_
FT_TRUETYPE_ENGINE_TYPE_UNPATENTED	.\\include\\freetype\\ftmodapi.h	/^    FT_TRUETYPE_ENGINE_TYPE_UNPATENTED,$/;"	e	enum:FT_TrueTypeEngineType_
FT_TRUETYPE_IDS_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_TRUETYPE_IDS_H /;"	d
FT_TRUETYPE_TABLES_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_TRUETYPE_TABLES_H /;"	d
FT_TRUETYPE_TAGS_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_TRUETYPE_TAGS_H /;"	d
FT_TRUETYPE_UNPATENTED_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_TRUETYPE_UNPATENTED_H /;"	d
FT_TYPE1_TABLES_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_TYPE1_TABLES_H /;"	d
FT_TYPEOF	.\\include\\freetype\\config\\ftconfig.h	/^#define FT_TYPEOF(/;"	d
FT_TYPES_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_TYPES_H /;"	d
FT_Tag	.\\include\\freetype\\fttypes.h	/^  typedef FT_UInt32  FT_Tag;$/;"	t	typeref:typename:FT_UInt32
FT_Trace	.\\include\\freetype\\internal\\ftdebug.h	/^  } FT_Trace;$/;"	t	typeref:enum:FT_Trace_
FT_Trace_	.\\include\\freetype\\internal\\ftdebug.h	/^  typedef enum  FT_Trace_$/;"	g
FT_TrueTypeEngineType	.\\include\\freetype\\ftmodapi.h	/^  } FT_TrueTypeEngineType;$/;"	t	typeref:enum:FT_TrueTypeEngineType_
FT_TrueTypeEngineType_	.\\include\\freetype\\ftmodapi.h	/^  typedef enum  FT_TrueTypeEngineType_$/;"	g
FT_UFWord	.\\include\\freetype\\fttypes.h	/^  typedef unsigned short  FT_UFWord;  \/* unsigned distance *\/$/;"	t	typeref:typename:unsigned short
FT_UFast	.\\include\\freetype\\config\\ftconfig.h	/^  typedef unsigned int   FT_UFast;$/;"	t	typeref:typename:unsigned int
FT_UFast	.\\include\\freetype\\config\\ftconfig.h	/^  typedef unsigned long  FT_UFast;$/;"	t	typeref:typename:unsigned long
FT_UINT16	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_UINT16(/;"	d
FT_UINT32	.\\include\\freetype\\internal\\ftstream.h	/^#define FT_UINT32(/;"	d
FT_UINT64	.\\include\\freetype\\config\\ftconfig.h	/^#define FT_UINT64 /;"	d
FT_UINT_MAX	.\\include\\freetype\\config\\ftstdlib.h	/^#define FT_UINT_MAX /;"	d
FT_UInt	.\\include\\freetype\\fttypes.h	/^  typedef unsigned int  FT_UInt;$/;"	t	typeref:typename:unsigned int
FT_UInt16	.\\include\\freetype\\config\\ftconfig.h	/^  typedef unsigned short  FT_UInt16;$/;"	t	typeref:typename:unsigned short
FT_UInt32	.\\include\\freetype\\config\\ftconfig.h	/^  typedef unsigned int    FT_UInt32;$/;"	t	typeref:typename:unsigned int
FT_UInt32	.\\include\\freetype\\config\\ftconfig.h	/^  typedef unsigned long   FT_UInt32;$/;"	t	typeref:typename:unsigned long
FT_UInt64	.\\include\\freetype\\config\\ftconfig.h	/^  typedef FT_UINT64  FT_UInt64;$/;"	t	typeref:typename:FT_UINT64
FT_ULONG_MAX	.\\include\\freetype\\config\\ftstdlib.h	/^#define FT_ULONG_MAX /;"	d
FT_ULong	.\\include\\freetype\\fttypes.h	/^  typedef unsigned long  FT_ULong;$/;"	t	typeref:typename:unsigned long
FT_UNPATENTED_HINTING_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_UNPATENTED_HINTING_H /;"	d
FT_UNUSED	.\\include\\freetype\\config\\ftconfig.h	/^#define FT_UNUSED(/;"	d
FT_USHORT_MAX	.\\include\\freetype\\config\\ftstdlib.h	/^#define FT_USHORT_MAX /;"	d
FT_UShort	.\\include\\freetype\\fttypes.h	/^  typedef unsigned short  FT_UShort;$/;"	t	typeref:typename:unsigned short
FT_UnitVector	.\\include\\freetype\\fttypes.h	/^  } FT_UnitVector;$/;"	t	typeref:struct:FT_UnitVector_
FT_UnitVector_	.\\include\\freetype\\fttypes.h	/^  typedef struct  FT_UnitVector_$/;"	s
FT_VALIDATE_APPLE	.\\include\\freetype\\ftgxval.h	/^#define FT_VALIDATE_APPLE /;"	d
FT_VALIDATE_BASE	.\\include\\freetype\\ftotval.h	/^#define FT_VALIDATE_BASE /;"	d
FT_VALIDATE_CKERN	.\\include\\freetype\\ftgxval.h	/^#define FT_VALIDATE_CKERN /;"	d
FT_VALIDATE_DEFAULT	.\\include\\freetype\\internal\\ftvalid.h	/^    FT_VALIDATE_DEFAULT = 0,$/;"	e	enum:FT_ValidationLevel_
FT_VALIDATE_GDEF	.\\include\\freetype\\ftotval.h	/^#define FT_VALIDATE_GDEF /;"	d
FT_VALIDATE_GPOS	.\\include\\freetype\\ftotval.h	/^#define FT_VALIDATE_GPOS /;"	d
FT_VALIDATE_GSUB	.\\include\\freetype\\ftotval.h	/^#define FT_VALIDATE_GSUB /;"	d
FT_VALIDATE_GX	.\\include\\freetype\\ftgxval.h	/^#define FT_VALIDATE_GX /;"	d
FT_VALIDATE_GX_BITFIELD	.\\include\\freetype\\ftgxval.h	/^#define FT_VALIDATE_GX_BITFIELD(/;"	d
FT_VALIDATE_GX_LAST_INDEX	.\\include\\freetype\\ftgxval.h	/^#define FT_VALIDATE_GX_LAST_INDEX /;"	d
FT_VALIDATE_GX_LENGTH	.\\include\\freetype\\ftgxval.h	/^#define FT_VALIDATE_GX_LENGTH /;"	d
FT_VALIDATE_GX_START	.\\include\\freetype\\ftgxval.h	/^#define FT_VALIDATE_GX_START /;"	d
FT_VALIDATE_JSTF	.\\include\\freetype\\ftotval.h	/^#define FT_VALIDATE_JSTF /;"	d
FT_VALIDATE_MATH	.\\include\\freetype\\ftotval.h	/^#define FT_VALIDATE_MATH /;"	d
FT_VALIDATE_MS	.\\include\\freetype\\ftgxval.h	/^#define FT_VALIDATE_MS /;"	d
FT_VALIDATE_OT	.\\include\\freetype\\ftotval.h	/^#define FT_VALIDATE_OT /;"	d
FT_VALIDATE_PARANOID	.\\include\\freetype\\internal\\ftvalid.h	/^    FT_VALIDATE_PARANOID$/;"	e	enum:FT_ValidationLevel_
FT_VALIDATE_TIGHT	.\\include\\freetype\\internal\\ftvalid.h	/^    FT_VALIDATE_TIGHT,$/;"	e	enum:FT_ValidationLevel_
FT_VALIDATE_bsln	.\\include\\freetype\\ftgxval.h	/^#define FT_VALIDATE_bsln /;"	d
FT_VALIDATE_bsln_INDEX	.\\include\\freetype\\ftgxval.h	/^#define FT_VALIDATE_bsln_INDEX /;"	d
FT_VALIDATE_feat	.\\include\\freetype\\ftgxval.h	/^#define FT_VALIDATE_feat /;"	d
FT_VALIDATE_feat_INDEX	.\\include\\freetype\\ftgxval.h	/^#define FT_VALIDATE_feat_INDEX /;"	d
FT_VALIDATE_just	.\\include\\freetype\\ftgxval.h	/^#define FT_VALIDATE_just /;"	d
FT_VALIDATE_just_INDEX	.\\include\\freetype\\ftgxval.h	/^#define FT_VALIDATE_just_INDEX /;"	d
FT_VALIDATE_kern	.\\include\\freetype\\ftgxval.h	/^#define FT_VALIDATE_kern /;"	d
FT_VALIDATE_kern_INDEX	.\\include\\freetype\\ftgxval.h	/^#define FT_VALIDATE_kern_INDEX /;"	d
FT_VALIDATE_lcar	.\\include\\freetype\\ftgxval.h	/^#define FT_VALIDATE_lcar /;"	d
FT_VALIDATE_lcar_INDEX	.\\include\\freetype\\ftgxval.h	/^#define FT_VALIDATE_lcar_INDEX /;"	d
FT_VALIDATE_mort	.\\include\\freetype\\ftgxval.h	/^#define FT_VALIDATE_mort /;"	d
FT_VALIDATE_mort_INDEX	.\\include\\freetype\\ftgxval.h	/^#define FT_VALIDATE_mort_INDEX /;"	d
FT_VALIDATE_morx	.\\include\\freetype\\ftgxval.h	/^#define FT_VALIDATE_morx /;"	d
FT_VALIDATE_morx_INDEX	.\\include\\freetype\\ftgxval.h	/^#define FT_VALIDATE_morx_INDEX /;"	d
FT_VALIDATE_opbd	.\\include\\freetype\\ftgxval.h	/^#define FT_VALIDATE_opbd /;"	d
FT_VALIDATE_opbd_INDEX	.\\include\\freetype\\ftgxval.h	/^#define FT_VALIDATE_opbd_INDEX /;"	d
FT_VALIDATE_prop	.\\include\\freetype\\ftgxval.h	/^#define FT_VALIDATE_prop /;"	d
FT_VALIDATE_prop_INDEX	.\\include\\freetype\\ftgxval.h	/^#define FT_VALIDATE_prop_INDEX /;"	d
FT_VALIDATE_trak	.\\include\\freetype\\ftgxval.h	/^#define FT_VALIDATE_trak /;"	d
FT_VALIDATE_trak_INDEX	.\\include\\freetype\\ftgxval.h	/^#define FT_VALIDATE_trak_INDEX /;"	d
FT_VALIDATOR	.\\include\\freetype\\internal\\ftvalid.h	/^#define FT_VALIDATOR(/;"	d
FT_ValidationLevel	.\\include\\freetype\\internal\\ftvalid.h	/^  } FT_ValidationLevel;$/;"	t	typeref:enum:FT_ValidationLevel_
FT_ValidationLevel_	.\\include\\freetype\\internal\\ftvalid.h	/^  typedef enum  FT_ValidationLevel_$/;"	g
FT_Validator	.\\include\\freetype\\internal\\ftvalid.h	/^  typedef struct FT_ValidatorRec_ volatile*  FT_Validator;$/;"	t	typeref:struct:FT_ValidatorRec_ volatile *
FT_ValidatorRec	.\\include\\freetype\\internal\\ftvalid.h	/^  } FT_ValidatorRec;$/;"	t	typeref:struct:FT_ValidatorRec_
FT_ValidatorRec_	.\\include\\freetype\\internal\\ftvalid.h	/^  typedef struct  FT_ValidatorRec_$/;"	s
FT_Var_Axis	.\\include\\freetype\\ftmm.h	/^  } FT_Var_Axis;$/;"	t	typeref:struct:FT_Var_Axis_
FT_Var_Axis_	.\\include\\freetype\\ftmm.h	/^  typedef struct  FT_Var_Axis_$/;"	s
FT_Var_Named_Style	.\\include\\freetype\\ftmm.h	/^  } FT_Var_Named_Style;$/;"	t	typeref:struct:FT_Var_Named_Style_
FT_Var_Named_Style_	.\\include\\freetype\\ftmm.h	/^  typedef struct  FT_Var_Named_Style_$/;"	s
FT_Vector	.\\include\\freetype\\ftimage.h	/^  } FT_Vector;$/;"	t	typeref:struct:FT_Vector_
FT_Vector_	.\\include\\freetype\\ftimage.h	/^  typedef struct  FT_Vector_$/;"	s
FT_WINFONTS_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_WINFONTS_H /;"	d
FT_WinFNT_Header	.\\include\\freetype\\ftwinfnt.h	/^  typedef struct FT_WinFNT_HeaderRec_*  FT_WinFNT_Header;$/;"	t	typeref:struct:FT_WinFNT_HeaderRec_ *
FT_WinFNT_HeaderRec	.\\include\\freetype\\ftwinfnt.h	/^  } FT_WinFNT_HeaderRec;$/;"	t	typeref:struct:FT_WinFNT_HeaderRec_
FT_WinFNT_HeaderRec_	.\\include\\freetype\\ftwinfnt.h	/^  typedef struct  FT_WinFNT_HeaderRec_$/;"	s
FT_WinFNT_ID_CP1250	.\\include\\freetype\\ftwinfnt.h	/^#define FT_WinFNT_ID_CP1250 /;"	d
FT_WinFNT_ID_CP1251	.\\include\\freetype\\ftwinfnt.h	/^#define FT_WinFNT_ID_CP1251 /;"	d
FT_WinFNT_ID_CP1252	.\\include\\freetype\\ftwinfnt.h	/^#define FT_WinFNT_ID_CP1252 /;"	d
FT_WinFNT_ID_CP1253	.\\include\\freetype\\ftwinfnt.h	/^#define FT_WinFNT_ID_CP1253 /;"	d
FT_WinFNT_ID_CP1254	.\\include\\freetype\\ftwinfnt.h	/^#define FT_WinFNT_ID_CP1254 /;"	d
FT_WinFNT_ID_CP1255	.\\include\\freetype\\ftwinfnt.h	/^#define FT_WinFNT_ID_CP1255 /;"	d
FT_WinFNT_ID_CP1256	.\\include\\freetype\\ftwinfnt.h	/^#define FT_WinFNT_ID_CP1256 /;"	d
FT_WinFNT_ID_CP1257	.\\include\\freetype\\ftwinfnt.h	/^#define FT_WinFNT_ID_CP1257 /;"	d
FT_WinFNT_ID_CP1258	.\\include\\freetype\\ftwinfnt.h	/^#define FT_WinFNT_ID_CP1258 /;"	d
FT_WinFNT_ID_CP1361	.\\include\\freetype\\ftwinfnt.h	/^#define FT_WinFNT_ID_CP1361 /;"	d
FT_WinFNT_ID_CP874	.\\include\\freetype\\ftwinfnt.h	/^#define FT_WinFNT_ID_CP874 /;"	d
FT_WinFNT_ID_CP932	.\\include\\freetype\\ftwinfnt.h	/^#define FT_WinFNT_ID_CP932 /;"	d
FT_WinFNT_ID_CP936	.\\include\\freetype\\ftwinfnt.h	/^#define FT_WinFNT_ID_CP936 /;"	d
FT_WinFNT_ID_CP949	.\\include\\freetype\\ftwinfnt.h	/^#define FT_WinFNT_ID_CP949 /;"	d
FT_WinFNT_ID_CP950	.\\include\\freetype\\ftwinfnt.h	/^#define FT_WinFNT_ID_CP950 /;"	d
FT_WinFNT_ID_DEFAULT	.\\include\\freetype\\ftwinfnt.h	/^#define FT_WinFNT_ID_DEFAULT /;"	d
FT_WinFNT_ID_MAC	.\\include\\freetype\\ftwinfnt.h	/^#define FT_WinFNT_ID_MAC /;"	d
FT_WinFNT_ID_OEM	.\\include\\freetype\\ftwinfnt.h	/^#define FT_WinFNT_ID_OEM /;"	d
FT_WinFNT_ID_SYMBOL	.\\include\\freetype\\ftwinfnt.h	/^#define FT_WinFNT_ID_SYMBOL /;"	d
FT_WinFnt_GetHeaderFunc	.\\include\\freetype\\internal\\services\\svwinfnt.h	/^  (*FT_WinFnt_GetHeaderFunc)( FT_Face               face,$/;"	t	typeref:typename:FT_Error (*)(FT_Face face,FT_WinFNT_HeaderRec * aheader)
FT_XFREE86_H	.\\include\\freetype\\config\\ftheader.h	/^#define FT_XFREE86_H /;"	d
FT_ZERO	.\\include\\freetype\\internal\\ftmemory.h	/^#define FT_ZERO(/;"	d
FUNCTIONPOINT	.\\include\\curl\\curl.h	/^#define FUNCTIONPOINT /;"	d
FUNCTIONPOINT	.\\include\\curl\\multi.h	/^#define FUNCTIONPOINT /;"	d
FileName	.\\include\\freetype\\tttables.h	/^    FT_Char    FileName[6];$/;"	m	struct:TT_PCLT_	typeref:typename:FT_Char[6]
Flags	.\\include\\freetype\\tttables.h	/^    FT_UShort  Flags;$/;"	m	struct:TT_Header_	typeref:typename:FT_UShort
FontBBox	.\\include\\freetype\\internal\\t1types.h	/^    FT_BBox        FontBBox;$/;"	m	struct:AFM_FontInfoRec_	typeref:typename:FT_BBox
FontInfo	.\\include\\freetype\\internal\\psaux.h	/^    AFM_FontInfo  FontInfo;$/;"	m	struct:AFM_ParserRec_	typeref:typename:AFM_FontInfo
FontNumber	.\\include\\freetype\\tttables.h	/^    FT_ULong   FontNumber;$/;"	m	struct:TT_PCLT_	typeref:typename:FT_ULong
Font_Direction	.\\include\\freetype\\tttables.h	/^    FT_Short   Font_Direction;$/;"	m	struct:TT_Header_	typeref:typename:FT_Short
Font_Revision	.\\include\\freetype\\tttables.h	/^    FT_Fixed   Font_Revision;$/;"	m	struct:TT_Header_	typeref:typename:FT_Fixed
FormatType	.\\include\\freetype\\tttables.h	/^    FT_Fixed  FormatType;$/;"	m	struct:TT_Postscript_	typeref:typename:FT_Fixed
GBF-IDs	.\\makefile	/^GBF-IDs: $(OBJ)$/;"	t
GLAPI	.\\include\\gl_core_3_3.h	/^	#define GLAPI /;"	d
GLEXT_64_TYPES_DEFINED	.\\include\\gl_core_3_3.h	/^#define GLEXT_64_TYPES_DEFINED$/;"	d
GLFWAPI	.\\include\\GLFW\\glfw3.h	/^ #define GLFWAPI /;"	d
GLFW_ACCUM_ALPHA_BITS	.\\include\\GLFW\\glfw3.h	/^#define GLFW_ACCUM_ALPHA_BITS /;"	d
GLFW_ACCUM_BLUE_BITS	.\\include\\GLFW\\glfw3.h	/^#define GLFW_ACCUM_BLUE_BITS /;"	d
GLFW_ACCUM_GREEN_BITS	.\\include\\GLFW\\glfw3.h	/^#define GLFW_ACCUM_GREEN_BITS /;"	d
GLFW_ACCUM_RED_BITS	.\\include\\GLFW\\glfw3.h	/^#define GLFW_ACCUM_RED_BITS /;"	d
GLFW_ALPHA_BITS	.\\include\\GLFW\\glfw3.h	/^#define GLFW_ALPHA_BITS /;"	d
GLFW_ANY_RELEASE_BEHAVIOR	.\\include\\GLFW\\glfw3.h	/^#define GLFW_ANY_RELEASE_BEHAVIOR /;"	d
GLFW_API_UNAVAILABLE	.\\include\\GLFW\\glfw3.h	/^#define GLFW_API_UNAVAILABLE /;"	d
GLFW_ARROW_CURSOR	.\\include\\GLFW\\glfw3.h	/^#define GLFW_ARROW_CURSOR /;"	d
GLFW_AUTO_ICONIFY	.\\include\\GLFW\\glfw3.h	/^#define GLFW_AUTO_ICONIFY /;"	d
GLFW_AUX_BUFFERS	.\\include\\GLFW\\glfw3.h	/^#define GLFW_AUX_BUFFERS /;"	d
GLFW_BLUE_BITS	.\\include\\GLFW\\glfw3.h	/^#define GLFW_BLUE_BITS /;"	d
GLFW_CALLBACK_DEFINED	.\\include\\GLFW\\glfw3.h	/^ #define GLFW_CALLBACK_DEFINED$/;"	d
GLFW_CLIENT_API	.\\include\\GLFW\\glfw3.h	/^#define GLFW_CLIENT_API /;"	d
GLFW_CONNECTED	.\\include\\GLFW\\glfw3.h	/^#define GLFW_CONNECTED /;"	d
GLFW_CONTEXT_CREATION_API	.\\include\\GLFW\\glfw3.h	/^#define GLFW_CONTEXT_CREATION_API /;"	d
GLFW_CONTEXT_NO_ERROR	.\\include\\GLFW\\glfw3.h	/^#define GLFW_CONTEXT_NO_ERROR /;"	d
GLFW_CONTEXT_RELEASE_BEHAVIOR	.\\include\\GLFW\\glfw3.h	/^#define GLFW_CONTEXT_RELEASE_BEHAVIOR /;"	d
GLFW_CONTEXT_REVISION	.\\include\\GLFW\\glfw3.h	/^#define GLFW_CONTEXT_REVISION /;"	d
GLFW_CONTEXT_ROBUSTNESS	.\\include\\GLFW\\glfw3.h	/^#define GLFW_CONTEXT_ROBUSTNESS /;"	d
GLFW_CONTEXT_VERSION_MAJOR	.\\include\\GLFW\\glfw3.h	/^#define GLFW_CONTEXT_VERSION_MAJOR /;"	d
GLFW_CONTEXT_VERSION_MINOR	.\\include\\GLFW\\glfw3.h	/^#define GLFW_CONTEXT_VERSION_MINOR /;"	d
GLFW_CROSSHAIR_CURSOR	.\\include\\GLFW\\glfw3.h	/^#define GLFW_CROSSHAIR_CURSOR /;"	d
GLFW_CURSOR	.\\include\\GLFW\\glfw3.h	/^#define GLFW_CURSOR /;"	d
GLFW_CURSOR_DISABLED	.\\include\\GLFW\\glfw3.h	/^#define GLFW_CURSOR_DISABLED /;"	d
GLFW_CURSOR_HIDDEN	.\\include\\GLFW\\glfw3.h	/^#define GLFW_CURSOR_HIDDEN /;"	d
GLFW_CURSOR_NORMAL	.\\include\\GLFW\\glfw3.h	/^#define GLFW_CURSOR_NORMAL /;"	d
GLFW_DECORATED	.\\include\\GLFW\\glfw3.h	/^#define GLFW_DECORATED /;"	d
GLFW_DEPTH_BITS	.\\include\\GLFW\\glfw3.h	/^#define GLFW_DEPTH_BITS /;"	d
GLFW_DISCONNECTED	.\\include\\GLFW\\glfw3.h	/^#define GLFW_DISCONNECTED /;"	d
GLFW_DONT_CARE	.\\include\\GLFW\\glfw3.h	/^#define GLFW_DONT_CARE /;"	d
GLFW_DOUBLEBUFFER	.\\include\\GLFW\\glfw3.h	/^#define GLFW_DOUBLEBUFFER /;"	d
GLFW_EGL_CONTEXT_API	.\\include\\GLFW\\glfw3.h	/^#define GLFW_EGL_CONTEXT_API /;"	d
GLFW_FALSE	.\\include\\GLFW\\glfw3.h	/^#define GLFW_FALSE /;"	d
GLFW_FLOATING	.\\include\\GLFW\\glfw3.h	/^#define GLFW_FLOATING /;"	d
GLFW_FOCUSED	.\\include\\GLFW\\glfw3.h	/^#define GLFW_FOCUSED /;"	d
GLFW_FORMAT_UNAVAILABLE	.\\include\\GLFW\\glfw3.h	/^#define GLFW_FORMAT_UNAVAILABLE /;"	d
GLFW_GREEN_BITS	.\\include\\GLFW\\glfw3.h	/^#define GLFW_GREEN_BITS /;"	d
GLFW_HAND_CURSOR	.\\include\\GLFW\\glfw3.h	/^#define GLFW_HAND_CURSOR /;"	d
GLFW_HRESIZE_CURSOR	.\\include\\GLFW\\glfw3.h	/^#define GLFW_HRESIZE_CURSOR /;"	d
GLFW_IBEAM_CURSOR	.\\include\\GLFW\\glfw3.h	/^#define GLFW_IBEAM_CURSOR /;"	d
GLFW_ICONIFIED	.\\include\\GLFW\\glfw3.h	/^#define GLFW_ICONIFIED /;"	d
GLFW_INVALID_ENUM	.\\include\\GLFW\\glfw3.h	/^#define GLFW_INVALID_ENUM /;"	d
GLFW_INVALID_VALUE	.\\include\\GLFW\\glfw3.h	/^#define GLFW_INVALID_VALUE /;"	d
GLFW_JOYSTICK_1	.\\include\\GLFW\\glfw3.h	/^#define GLFW_JOYSTICK_1 /;"	d
GLFW_JOYSTICK_10	.\\include\\GLFW\\glfw3.h	/^#define GLFW_JOYSTICK_10 /;"	d
GLFW_JOYSTICK_11	.\\include\\GLFW\\glfw3.h	/^#define GLFW_JOYSTICK_11 /;"	d
GLFW_JOYSTICK_12	.\\include\\GLFW\\glfw3.h	/^#define GLFW_JOYSTICK_12 /;"	d
GLFW_JOYSTICK_13	.\\include\\GLFW\\glfw3.h	/^#define GLFW_JOYSTICK_13 /;"	d
GLFW_JOYSTICK_14	.\\include\\GLFW\\glfw3.h	/^#define GLFW_JOYSTICK_14 /;"	d
GLFW_JOYSTICK_15	.\\include\\GLFW\\glfw3.h	/^#define GLFW_JOYSTICK_15 /;"	d
GLFW_JOYSTICK_16	.\\include\\GLFW\\glfw3.h	/^#define GLFW_JOYSTICK_16 /;"	d
GLFW_JOYSTICK_2	.\\include\\GLFW\\glfw3.h	/^#define GLFW_JOYSTICK_2 /;"	d
GLFW_JOYSTICK_3	.\\include\\GLFW\\glfw3.h	/^#define GLFW_JOYSTICK_3 /;"	d
GLFW_JOYSTICK_4	.\\include\\GLFW\\glfw3.h	/^#define GLFW_JOYSTICK_4 /;"	d
GLFW_JOYSTICK_5	.\\include\\GLFW\\glfw3.h	/^#define GLFW_JOYSTICK_5 /;"	d
GLFW_JOYSTICK_6	.\\include\\GLFW\\glfw3.h	/^#define GLFW_JOYSTICK_6 /;"	d
GLFW_JOYSTICK_7	.\\include\\GLFW\\glfw3.h	/^#define GLFW_JOYSTICK_7 /;"	d
GLFW_JOYSTICK_8	.\\include\\GLFW\\glfw3.h	/^#define GLFW_JOYSTICK_8 /;"	d
GLFW_JOYSTICK_9	.\\include\\GLFW\\glfw3.h	/^#define GLFW_JOYSTICK_9 /;"	d
GLFW_JOYSTICK_LAST	.\\include\\GLFW\\glfw3.h	/^#define GLFW_JOYSTICK_LAST /;"	d
GLFW_KEY_0	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_0 /;"	d
GLFW_KEY_1	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_1 /;"	d
GLFW_KEY_2	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_2 /;"	d
GLFW_KEY_3	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_3 /;"	d
GLFW_KEY_4	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_4 /;"	d
GLFW_KEY_5	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_5 /;"	d
GLFW_KEY_6	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_6 /;"	d
GLFW_KEY_7	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_7 /;"	d
GLFW_KEY_8	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_8 /;"	d
GLFW_KEY_9	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_9 /;"	d
GLFW_KEY_A	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_A /;"	d
GLFW_KEY_APOSTROPHE	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_APOSTROPHE /;"	d
GLFW_KEY_B	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_B /;"	d
GLFW_KEY_BACKSLASH	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_BACKSLASH /;"	d
GLFW_KEY_BACKSPACE	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_BACKSPACE /;"	d
GLFW_KEY_C	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_C /;"	d
GLFW_KEY_CAPS_LOCK	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_CAPS_LOCK /;"	d
GLFW_KEY_COMMA	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_COMMA /;"	d
GLFW_KEY_D	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_D /;"	d
GLFW_KEY_DELETE	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_DELETE /;"	d
GLFW_KEY_DOWN	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_DOWN /;"	d
GLFW_KEY_E	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_E /;"	d
GLFW_KEY_END	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_END /;"	d
GLFW_KEY_ENTER	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_ENTER /;"	d
GLFW_KEY_EQUAL	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_EQUAL /;"	d
GLFW_KEY_ESCAPE	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_ESCAPE /;"	d
GLFW_KEY_F	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_F /;"	d
GLFW_KEY_F1	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_F1 /;"	d
GLFW_KEY_F10	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_F10 /;"	d
GLFW_KEY_F11	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_F11 /;"	d
GLFW_KEY_F12	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_F12 /;"	d
GLFW_KEY_F13	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_F13 /;"	d
GLFW_KEY_F14	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_F14 /;"	d
GLFW_KEY_F15	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_F15 /;"	d
GLFW_KEY_F16	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_F16 /;"	d
GLFW_KEY_F17	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_F17 /;"	d
GLFW_KEY_F18	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_F18 /;"	d
GLFW_KEY_F19	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_F19 /;"	d
GLFW_KEY_F2	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_F2 /;"	d
GLFW_KEY_F20	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_F20 /;"	d
GLFW_KEY_F21	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_F21 /;"	d
GLFW_KEY_F22	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_F22 /;"	d
GLFW_KEY_F23	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_F23 /;"	d
GLFW_KEY_F24	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_F24 /;"	d
GLFW_KEY_F25	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_F25 /;"	d
GLFW_KEY_F3	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_F3 /;"	d
GLFW_KEY_F4	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_F4 /;"	d
GLFW_KEY_F5	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_F5 /;"	d
GLFW_KEY_F6	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_F6 /;"	d
GLFW_KEY_F7	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_F7 /;"	d
GLFW_KEY_F8	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_F8 /;"	d
GLFW_KEY_F9	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_F9 /;"	d
GLFW_KEY_G	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_G /;"	d
GLFW_KEY_GRAVE_ACCENT	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_GRAVE_ACCENT /;"	d
GLFW_KEY_H	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_H /;"	d
GLFW_KEY_HOME	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_HOME /;"	d
GLFW_KEY_I	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_I /;"	d
GLFW_KEY_INSERT	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_INSERT /;"	d
GLFW_KEY_J	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_J /;"	d
GLFW_KEY_K	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_K /;"	d
GLFW_KEY_KP_0	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_KP_0 /;"	d
GLFW_KEY_KP_1	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_KP_1 /;"	d
GLFW_KEY_KP_2	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_KP_2 /;"	d
GLFW_KEY_KP_3	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_KP_3 /;"	d
GLFW_KEY_KP_4	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_KP_4 /;"	d
GLFW_KEY_KP_5	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_KP_5 /;"	d
GLFW_KEY_KP_6	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_KP_6 /;"	d
GLFW_KEY_KP_7	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_KP_7 /;"	d
GLFW_KEY_KP_8	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_KP_8 /;"	d
GLFW_KEY_KP_9	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_KP_9 /;"	d
GLFW_KEY_KP_ADD	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_KP_ADD /;"	d
GLFW_KEY_KP_DECIMAL	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_KP_DECIMAL /;"	d
GLFW_KEY_KP_DIVIDE	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_KP_DIVIDE /;"	d
GLFW_KEY_KP_ENTER	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_KP_ENTER /;"	d
GLFW_KEY_KP_EQUAL	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_KP_EQUAL /;"	d
GLFW_KEY_KP_MULTIPLY	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_KP_MULTIPLY /;"	d
GLFW_KEY_KP_SUBTRACT	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_KP_SUBTRACT /;"	d
GLFW_KEY_L	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_L /;"	d
GLFW_KEY_LAST	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_LAST /;"	d
GLFW_KEY_LEFT	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_LEFT /;"	d
GLFW_KEY_LEFT_ALT	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_LEFT_ALT /;"	d
GLFW_KEY_LEFT_BRACKET	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_LEFT_BRACKET /;"	d
GLFW_KEY_LEFT_CONTROL	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_LEFT_CONTROL /;"	d
GLFW_KEY_LEFT_SHIFT	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_LEFT_SHIFT /;"	d
GLFW_KEY_LEFT_SUPER	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_LEFT_SUPER /;"	d
GLFW_KEY_M	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_M /;"	d
GLFW_KEY_MENU	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_MENU /;"	d
GLFW_KEY_MINUS	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_MINUS /;"	d
GLFW_KEY_N	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_N /;"	d
GLFW_KEY_NUM_LOCK	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_NUM_LOCK /;"	d
GLFW_KEY_O	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_O /;"	d
GLFW_KEY_P	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_P /;"	d
GLFW_KEY_PAGE_DOWN	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_PAGE_DOWN /;"	d
GLFW_KEY_PAGE_UP	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_PAGE_UP /;"	d
GLFW_KEY_PAUSE	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_PAUSE /;"	d
GLFW_KEY_PERIOD	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_PERIOD /;"	d
GLFW_KEY_PRINT_SCREEN	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_PRINT_SCREEN /;"	d
GLFW_KEY_Q	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_Q /;"	d
GLFW_KEY_R	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_R /;"	d
GLFW_KEY_RIGHT	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_RIGHT /;"	d
GLFW_KEY_RIGHT_ALT	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_RIGHT_ALT /;"	d
GLFW_KEY_RIGHT_BRACKET	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_RIGHT_BRACKET /;"	d
GLFW_KEY_RIGHT_CONTROL	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_RIGHT_CONTROL /;"	d
GLFW_KEY_RIGHT_SHIFT	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_RIGHT_SHIFT /;"	d
GLFW_KEY_RIGHT_SUPER	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_RIGHT_SUPER /;"	d
GLFW_KEY_S	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_S /;"	d
GLFW_KEY_SCROLL_LOCK	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_SCROLL_LOCK /;"	d
GLFW_KEY_SEMICOLON	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_SEMICOLON /;"	d
GLFW_KEY_SLASH	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_SLASH /;"	d
GLFW_KEY_SPACE	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_SPACE /;"	d
GLFW_KEY_T	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_T /;"	d
GLFW_KEY_TAB	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_TAB /;"	d
GLFW_KEY_U	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_U /;"	d
GLFW_KEY_UNKNOWN	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_UNKNOWN /;"	d
GLFW_KEY_UP	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_UP /;"	d
GLFW_KEY_V	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_V /;"	d
GLFW_KEY_W	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_W /;"	d
GLFW_KEY_WORLD_1	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_WORLD_1 /;"	d
GLFW_KEY_WORLD_2	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_WORLD_2 /;"	d
GLFW_KEY_X	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_X /;"	d
GLFW_KEY_Y	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_Y /;"	d
GLFW_KEY_Z	.\\include\\GLFW\\glfw3.h	/^#define GLFW_KEY_Z /;"	d
GLFW_LOSE_CONTEXT_ON_RESET	.\\include\\GLFW\\glfw3.h	/^#define GLFW_LOSE_CONTEXT_ON_RESET /;"	d
GLFW_MAXIMIZED	.\\include\\GLFW\\glfw3.h	/^#define GLFW_MAXIMIZED /;"	d
GLFW_MOD_ALT	.\\include\\GLFW\\glfw3.h	/^#define GLFW_MOD_ALT /;"	d
GLFW_MOD_CONTROL	.\\include\\GLFW\\glfw3.h	/^#define GLFW_MOD_CONTROL /;"	d
GLFW_MOD_SHIFT	.\\include\\GLFW\\glfw3.h	/^#define GLFW_MOD_SHIFT /;"	d
GLFW_MOD_SUPER	.\\include\\GLFW\\glfw3.h	/^#define GLFW_MOD_SUPER /;"	d
GLFW_MOUSE_BUTTON_1	.\\include\\GLFW\\glfw3.h	/^#define GLFW_MOUSE_BUTTON_1 /;"	d
GLFW_MOUSE_BUTTON_2	.\\include\\GLFW\\glfw3.h	/^#define GLFW_MOUSE_BUTTON_2 /;"	d
GLFW_MOUSE_BUTTON_3	.\\include\\GLFW\\glfw3.h	/^#define GLFW_MOUSE_BUTTON_3 /;"	d
GLFW_MOUSE_BUTTON_4	.\\include\\GLFW\\glfw3.h	/^#define GLFW_MOUSE_BUTTON_4 /;"	d
GLFW_MOUSE_BUTTON_5	.\\include\\GLFW\\glfw3.h	/^#define GLFW_MOUSE_BUTTON_5 /;"	d
GLFW_MOUSE_BUTTON_6	.\\include\\GLFW\\glfw3.h	/^#define GLFW_MOUSE_BUTTON_6 /;"	d
GLFW_MOUSE_BUTTON_7	.\\include\\GLFW\\glfw3.h	/^#define GLFW_MOUSE_BUTTON_7 /;"	d
GLFW_MOUSE_BUTTON_8	.\\include\\GLFW\\glfw3.h	/^#define GLFW_MOUSE_BUTTON_8 /;"	d
GLFW_MOUSE_BUTTON_LAST	.\\include\\GLFW\\glfw3.h	/^#define GLFW_MOUSE_BUTTON_LAST /;"	d
GLFW_MOUSE_BUTTON_LEFT	.\\include\\GLFW\\glfw3.h	/^#define GLFW_MOUSE_BUTTON_LEFT /;"	d
GLFW_MOUSE_BUTTON_MIDDLE	.\\include\\GLFW\\glfw3.h	/^#define GLFW_MOUSE_BUTTON_MIDDLE /;"	d
GLFW_MOUSE_BUTTON_RIGHT	.\\include\\GLFW\\glfw3.h	/^#define GLFW_MOUSE_BUTTON_RIGHT /;"	d
GLFW_NATIVE_CONTEXT_API	.\\include\\GLFW\\glfw3.h	/^#define GLFW_NATIVE_CONTEXT_API /;"	d
GLFW_NOT_INITIALIZED	.\\include\\GLFW\\glfw3.h	/^#define GLFW_NOT_INITIALIZED /;"	d
GLFW_NO_API	.\\include\\GLFW\\glfw3.h	/^#define GLFW_NO_API /;"	d
GLFW_NO_CURRENT_CONTEXT	.\\include\\GLFW\\glfw3.h	/^#define GLFW_NO_CURRENT_CONTEXT /;"	d
GLFW_NO_RESET_NOTIFICATION	.\\include\\GLFW\\glfw3.h	/^#define GLFW_NO_RESET_NOTIFICATION /;"	d
GLFW_NO_ROBUSTNESS	.\\include\\GLFW\\glfw3.h	/^#define GLFW_NO_ROBUSTNESS /;"	d
GLFW_NO_WINDOW_CONTEXT	.\\include\\GLFW\\glfw3.h	/^#define GLFW_NO_WINDOW_CONTEXT /;"	d
GLFW_OPENGL_ANY_PROFILE	.\\include\\GLFW\\glfw3.h	/^#define GLFW_OPENGL_ANY_PROFILE /;"	d
GLFW_OPENGL_API	.\\include\\GLFW\\glfw3.h	/^#define GLFW_OPENGL_API /;"	d
GLFW_OPENGL_COMPAT_PROFILE	.\\include\\GLFW\\glfw3.h	/^#define GLFW_OPENGL_COMPAT_PROFILE /;"	d
GLFW_OPENGL_CORE_PROFILE	.\\include\\GLFW\\glfw3.h	/^#define GLFW_OPENGL_CORE_PROFILE /;"	d
GLFW_OPENGL_DEBUG_CONTEXT	.\\include\\GLFW\\glfw3.h	/^#define GLFW_OPENGL_DEBUG_CONTEXT /;"	d
GLFW_OPENGL_ES_API	.\\include\\GLFW\\glfw3.h	/^#define GLFW_OPENGL_ES_API /;"	d
GLFW_OPENGL_FORWARD_COMPAT	.\\include\\GLFW\\glfw3.h	/^#define GLFW_OPENGL_FORWARD_COMPAT /;"	d
GLFW_OPENGL_PROFILE	.\\include\\GLFW\\glfw3.h	/^#define GLFW_OPENGL_PROFILE /;"	d
GLFW_OUT_OF_MEMORY	.\\include\\GLFW\\glfw3.h	/^#define GLFW_OUT_OF_MEMORY /;"	d
GLFW_PLATFORM_ERROR	.\\include\\GLFW\\glfw3.h	/^#define GLFW_PLATFORM_ERROR /;"	d
GLFW_PRESS	.\\include\\GLFW\\glfw3.h	/^#define GLFW_PRESS /;"	d
GLFW_RED_BITS	.\\include\\GLFW\\glfw3.h	/^#define GLFW_RED_BITS /;"	d
GLFW_REFRESH_RATE	.\\include\\GLFW\\glfw3.h	/^#define GLFW_REFRESH_RATE /;"	d
GLFW_RELEASE	.\\include\\GLFW\\glfw3.h	/^#define GLFW_RELEASE /;"	d
GLFW_RELEASE_BEHAVIOR_FLUSH	.\\include\\GLFW\\glfw3.h	/^#define GLFW_RELEASE_BEHAVIOR_FLUSH /;"	d
GLFW_RELEASE_BEHAVIOR_NONE	.\\include\\GLFW\\glfw3.h	/^#define GLFW_RELEASE_BEHAVIOR_NONE /;"	d
GLFW_REPEAT	.\\include\\GLFW\\glfw3.h	/^#define GLFW_REPEAT /;"	d
GLFW_RESIZABLE	.\\include\\GLFW\\glfw3.h	/^#define GLFW_RESIZABLE /;"	d
GLFW_SAMPLES	.\\include\\GLFW\\glfw3.h	/^#define GLFW_SAMPLES /;"	d
GLFW_SRGB_CAPABLE	.\\include\\GLFW\\glfw3.h	/^#define GLFW_SRGB_CAPABLE /;"	d
GLFW_STENCIL_BITS	.\\include\\GLFW\\glfw3.h	/^#define GLFW_STENCIL_BITS /;"	d
GLFW_STEREO	.\\include\\GLFW\\glfw3.h	/^#define GLFW_STEREO /;"	d
GLFW_STICKY_KEYS	.\\include\\GLFW\\glfw3.h	/^#define GLFW_STICKY_KEYS /;"	d
GLFW_STICKY_MOUSE_BUTTONS	.\\include\\GLFW\\glfw3.h	/^#define GLFW_STICKY_MOUSE_BUTTONS /;"	d
GLFW_TRUE	.\\include\\GLFW\\glfw3.h	/^#define GLFW_TRUE /;"	d
GLFW_VERSION_MAJOR	.\\include\\GLFW\\glfw3.h	/^#define GLFW_VERSION_MAJOR /;"	d
GLFW_VERSION_MINOR	.\\include\\GLFW\\glfw3.h	/^#define GLFW_VERSION_MINOR /;"	d
GLFW_VERSION_REVISION	.\\include\\GLFW\\glfw3.h	/^#define GLFW_VERSION_REVISION /;"	d
GLFW_VERSION_UNAVAILABLE	.\\include\\GLFW\\glfw3.h	/^#define GLFW_VERSION_UNAVAILABLE /;"	d
GLFW_VISIBLE	.\\include\\GLFW\\glfw3.h	/^#define GLFW_VISIBLE /;"	d
GLFW_VRESIZE_CURSOR	.\\include\\GLFW\\glfw3.h	/^#define GLFW_VRESIZE_CURSOR /;"	d
GLFW_WINGDIAPI_DEFINED	.\\include\\GLFW\\glfw3.h	/^ #define GLFW_WINGDIAPI_DEFINED$/;"	d
GLFWcharfun	.\\include\\GLFW\\glfw3.h	/^typedef void (* GLFWcharfun)(GLFWwindow*,unsigned int);$/;"	t	typeref:typename:void (*)(GLFWwindow *,unsigned int)
GLFWcharmodsfun	.\\include\\GLFW\\glfw3.h	/^typedef void (* GLFWcharmodsfun)(GLFWwindow*,unsigned int,int);$/;"	t	typeref:typename:void (*)(GLFWwindow *,unsigned int,int)
GLFWcursor	.\\include\\GLFW\\glfw3.h	/^typedef struct GLFWcursor GLFWcursor;$/;"	t	typeref:struct:GLFWcursor
GLFWcursorenterfun	.\\include\\GLFW\\glfw3.h	/^typedef void (* GLFWcursorenterfun)(GLFWwindow*,int);$/;"	t	typeref:typename:void (*)(GLFWwindow *,int)
GLFWcursorposfun	.\\include\\GLFW\\glfw3.h	/^typedef void (* GLFWcursorposfun)(GLFWwindow*,double,double);$/;"	t	typeref:typename:void (*)(GLFWwindow *,double,double)
GLFWdropfun	.\\include\\GLFW\\glfw3.h	/^typedef void (* GLFWdropfun)(GLFWwindow*,int,const char**);$/;"	t	typeref:typename:void (*)(GLFWwindow *,int,const char **)
GLFWerrorfun	.\\include\\GLFW\\glfw3.h	/^typedef void (* GLFWerrorfun)(int,const char*);$/;"	t	typeref:typename:void (*)(int,const char *)
GLFWframebuffersizefun	.\\include\\GLFW\\glfw3.h	/^typedef void (* GLFWframebuffersizefun)(GLFWwindow*,int,int);$/;"	t	typeref:typename:void (*)(GLFWwindow *,int,int)
GLFWgammaramp	.\\include\\GLFW\\glfw3.h	/^typedef struct GLFWgammaramp$/;"	s
GLFWgammaramp	.\\include\\GLFW\\glfw3.h	/^} GLFWgammaramp;$/;"	t	typeref:struct:GLFWgammaramp
GLFWglproc	.\\include\\GLFW\\glfw3.h	/^typedef void (*GLFWglproc)(void);$/;"	t	typeref:typename:void (*)(void)
GLFWimage	.\\include\\GLFW\\glfw3.h	/^typedef struct GLFWimage$/;"	s
GLFWimage	.\\include\\GLFW\\glfw3.h	/^} GLFWimage;$/;"	t	typeref:struct:GLFWimage
GLFWjoystickfun	.\\include\\GLFW\\glfw3.h	/^typedef void (* GLFWjoystickfun)(int,int);$/;"	t	typeref:typename:void (*)(int,int)
GLFWkeyfun	.\\include\\GLFW\\glfw3.h	/^typedef void (* GLFWkeyfun)(GLFWwindow*,int,int,int,int);$/;"	t	typeref:typename:void (*)(GLFWwindow *,int,int,int,int)
GLFWmonitor	.\\include\\GLFW\\glfw3.h	/^typedef struct GLFWmonitor GLFWmonitor;$/;"	t	typeref:struct:GLFWmonitor
GLFWmonitorfun	.\\include\\GLFW\\glfw3.h	/^typedef void (* GLFWmonitorfun)(GLFWmonitor*,int);$/;"	t	typeref:typename:void (*)(GLFWmonitor *,int)
GLFWmousebuttonfun	.\\include\\GLFW\\glfw3.h	/^typedef void (* GLFWmousebuttonfun)(GLFWwindow*,int,int,int);$/;"	t	typeref:typename:void (*)(GLFWwindow *,int,int,int)
GLFWscrollfun	.\\include\\GLFW\\glfw3.h	/^typedef void (* GLFWscrollfun)(GLFWwindow*,double,double);$/;"	t	typeref:typename:void (*)(GLFWwindow *,double,double)
GLFWvidmode	.\\include\\GLFW\\glfw3.h	/^typedef struct GLFWvidmode$/;"	s
GLFWvidmode	.\\include\\GLFW\\glfw3.h	/^} GLFWvidmode;$/;"	t	typeref:struct:GLFWvidmode
GLFWvkproc	.\\include\\GLFW\\glfw3.h	/^typedef void (*GLFWvkproc)(void);$/;"	t	typeref:typename:void (*)(void)
GLFWwindow	.\\include\\GLFW\\glfw3.h	/^typedef struct GLFWwindow GLFWwindow;$/;"	t	typeref:struct:GLFWwindow
GLFWwindowclosefun	.\\include\\GLFW\\glfw3.h	/^typedef void (* GLFWwindowclosefun)(GLFWwindow*);$/;"	t	typeref:typename:void (*)(GLFWwindow *)
GLFWwindowfocusfun	.\\include\\GLFW\\glfw3.h	/^typedef void (* GLFWwindowfocusfun)(GLFWwindow*,int);$/;"	t	typeref:typename:void (*)(GLFWwindow *,int)
GLFWwindowiconifyfun	.\\include\\GLFW\\glfw3.h	/^typedef void (* GLFWwindowiconifyfun)(GLFWwindow*,int);$/;"	t	typeref:typename:void (*)(GLFWwindow *,int)
GLFWwindowposfun	.\\include\\GLFW\\glfw3.h	/^typedef void (* GLFWwindowposfun)(GLFWwindow*,int,int);$/;"	t	typeref:typename:void (*)(GLFWwindow *,int,int)
GLFWwindowrefreshfun	.\\include\\GLFW\\glfw3.h	/^typedef void (* GLFWwindowrefreshfun)(GLFWwindow*);$/;"	t	typeref:typename:void (*)(GLFWwindow *)
GLFWwindowsizefun	.\\include\\GLFW\\glfw3.h	/^typedef void (* GLFWwindowsizefun)(GLFWwindow*,int,int);$/;"	t	typeref:typename:void (*)(GLFWwindow *,int,int)
GL_ACTIVE_ATTRIBUTES	.\\include\\gl_core_3_3.h	/^		#define GL_ACTIVE_ATTRIBUTES /;"	d
GL_ACTIVE_ATTRIBUTE_MAX_LENGTH	.\\include\\gl_core_3_3.h	/^		#define GL_ACTIVE_ATTRIBUTE_MAX_LENGTH /;"	d
GL_ACTIVE_TEXTURE	.\\include\\gl_core_3_3.h	/^		#define GL_ACTIVE_TEXTURE /;"	d
GL_ACTIVE_UNIFORMS	.\\include\\gl_core_3_3.h	/^		#define GL_ACTIVE_UNIFORMS /;"	d
GL_ACTIVE_UNIFORM_BLOCKS	.\\include\\gl_core_3_3.h	/^		#define GL_ACTIVE_UNIFORM_BLOCKS /;"	d
GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH	.\\include\\gl_core_3_3.h	/^		#define GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH /;"	d
GL_ACTIVE_UNIFORM_MAX_LENGTH	.\\include\\gl_core_3_3.h	/^		#define GL_ACTIVE_UNIFORM_MAX_LENGTH /;"	d
GL_ALIASED_LINE_WIDTH_RANGE	.\\include\\gl_core_3_3.h	/^		#define GL_ALIASED_LINE_WIDTH_RANGE /;"	d
GL_ALPHA	.\\include\\gl_core_3_3.h	/^		#define GL_ALPHA /;"	d
GL_ALREADY_SIGNALED	.\\include\\gl_core_3_3.h	/^		#define GL_ALREADY_SIGNALED /;"	d
GL_ALWAYS	.\\include\\gl_core_3_3.h	/^		#define GL_ALWAYS /;"	d
GL_AND	.\\include\\gl_core_3_3.h	/^		#define GL_AND /;"	d
GL_AND_INVERTED	.\\include\\gl_core_3_3.h	/^		#define GL_AND_INVERTED /;"	d
GL_AND_REVERSE	.\\include\\gl_core_3_3.h	/^		#define GL_AND_REVERSE /;"	d
GL_ANY_SAMPLES_PASSED	.\\include\\gl_core_3_3.h	/^		#define GL_ANY_SAMPLES_PASSED /;"	d
GL_ARRAY_BUFFER	.\\include\\gl_core_3_3.h	/^		#define GL_ARRAY_BUFFER /;"	d
GL_ARRAY_BUFFER_BINDING	.\\include\\gl_core_3_3.h	/^		#define GL_ARRAY_BUFFER_BINDING /;"	d
GL_ATTACHED_SHADERS	.\\include\\gl_core_3_3.h	/^		#define GL_ATTACHED_SHADERS /;"	d
GL_BACK	.\\include\\gl_core_3_3.h	/^		#define GL_BACK /;"	d
GL_BACK_LEFT	.\\include\\gl_core_3_3.h	/^		#define GL_BACK_LEFT /;"	d
GL_BACK_RIGHT	.\\include\\gl_core_3_3.h	/^		#define GL_BACK_RIGHT /;"	d
GL_BGR	.\\include\\gl_core_3_3.h	/^		#define GL_BGR /;"	d
GL_BGRA	.\\include\\gl_core_3_3.h	/^		#define GL_BGRA /;"	d
GL_BGRA_INTEGER	.\\include\\gl_core_3_3.h	/^		#define GL_BGRA_INTEGER /;"	d
GL_BGR_INTEGER	.\\include\\gl_core_3_3.h	/^		#define GL_BGR_INTEGER /;"	d
GL_BLEND	.\\include\\gl_core_3_3.h	/^		#define GL_BLEND /;"	d
GL_BLEND_COLOR	.\\include\\gl_core_3_3.h	/^		#define GL_BLEND_COLOR /;"	d
GL_BLEND_DST	.\\include\\gl_core_3_3.h	/^		#define GL_BLEND_DST /;"	d
GL_BLEND_DST_ALPHA	.\\include\\gl_core_3_3.h	/^		#define GL_BLEND_DST_ALPHA /;"	d
GL_BLEND_DST_RGB	.\\include\\gl_core_3_3.h	/^		#define GL_BLEND_DST_RGB /;"	d
GL_BLEND_EQUATION_ALPHA	.\\include\\gl_core_3_3.h	/^		#define GL_BLEND_EQUATION_ALPHA /;"	d
GL_BLEND_EQUATION_RGB	.\\include\\gl_core_3_3.h	/^		#define GL_BLEND_EQUATION_RGB /;"	d
GL_BLEND_SRC	.\\include\\gl_core_3_3.h	/^		#define GL_BLEND_SRC /;"	d
GL_BLEND_SRC_ALPHA	.\\include\\gl_core_3_3.h	/^		#define GL_BLEND_SRC_ALPHA /;"	d
GL_BLEND_SRC_RGB	.\\include\\gl_core_3_3.h	/^		#define GL_BLEND_SRC_RGB /;"	d
GL_BLUE	.\\include\\gl_core_3_3.h	/^		#define GL_BLUE /;"	d
GL_BLUE_INTEGER	.\\include\\gl_core_3_3.h	/^		#define GL_BLUE_INTEGER /;"	d
GL_BOOL	.\\include\\gl_core_3_3.h	/^		#define GL_BOOL /;"	d
GL_BOOL_VEC2	.\\include\\gl_core_3_3.h	/^		#define GL_BOOL_VEC2 /;"	d
GL_BOOL_VEC3	.\\include\\gl_core_3_3.h	/^		#define GL_BOOL_VEC3 /;"	d
GL_BOOL_VEC4	.\\include\\gl_core_3_3.h	/^		#define GL_BOOL_VEC4 /;"	d
GL_BUFFER_ACCESS	.\\include\\gl_core_3_3.h	/^		#define GL_BUFFER_ACCESS /;"	d
GL_BUFFER_ACCESS_FLAGS	.\\include\\gl_core_3_3.h	/^		#define GL_BUFFER_ACCESS_FLAGS /;"	d
GL_BUFFER_MAPPED	.\\include\\gl_core_3_3.h	/^		#define GL_BUFFER_MAPPED /;"	d
GL_BUFFER_MAP_LENGTH	.\\include\\gl_core_3_3.h	/^		#define GL_BUFFER_MAP_LENGTH /;"	d
GL_BUFFER_MAP_OFFSET	.\\include\\gl_core_3_3.h	/^		#define GL_BUFFER_MAP_OFFSET /;"	d
GL_BUFFER_MAP_POINTER	.\\include\\gl_core_3_3.h	/^		#define GL_BUFFER_MAP_POINTER /;"	d
GL_BUFFER_SIZE	.\\include\\gl_core_3_3.h	/^		#define GL_BUFFER_SIZE /;"	d
GL_BUFFER_USAGE	.\\include\\gl_core_3_3.h	/^		#define GL_BUFFER_USAGE /;"	d
GL_BYTE	.\\include\\gl_core_3_3.h	/^		#define GL_BYTE /;"	d
GL_CCW	.\\include\\gl_core_3_3.h	/^		#define GL_CCW /;"	d
GL_CLAMP_READ_COLOR	.\\include\\gl_core_3_3.h	/^		#define GL_CLAMP_READ_COLOR /;"	d
GL_CLAMP_TO_BORDER	.\\include\\gl_core_3_3.h	/^		#define GL_CLAMP_TO_BORDER /;"	d
GL_CLAMP_TO_EDGE	.\\include\\gl_core_3_3.h	/^		#define GL_CLAMP_TO_EDGE /;"	d
GL_CLEAR	.\\include\\gl_core_3_3.h	/^		#define GL_CLEAR /;"	d
GL_CLIP_DISTANCE0	.\\include\\gl_core_3_3.h	/^		#define GL_CLIP_DISTANCE0 /;"	d
GL_CLIP_DISTANCE1	.\\include\\gl_core_3_3.h	/^		#define GL_CLIP_DISTANCE1 /;"	d
GL_CLIP_DISTANCE2	.\\include\\gl_core_3_3.h	/^		#define GL_CLIP_DISTANCE2 /;"	d
GL_CLIP_DISTANCE3	.\\include\\gl_core_3_3.h	/^		#define GL_CLIP_DISTANCE3 /;"	d
GL_CLIP_DISTANCE4	.\\include\\gl_core_3_3.h	/^		#define GL_CLIP_DISTANCE4 /;"	d
GL_CLIP_DISTANCE5	.\\include\\gl_core_3_3.h	/^		#define GL_CLIP_DISTANCE5 /;"	d
GL_CLIP_DISTANCE6	.\\include\\gl_core_3_3.h	/^		#define GL_CLIP_DISTANCE6 /;"	d
GL_CLIP_DISTANCE7	.\\include\\gl_core_3_3.h	/^		#define GL_CLIP_DISTANCE7 /;"	d
GL_COLOR	.\\include\\gl_core_3_3.h	/^		#define GL_COLOR /;"	d
GL_COLOR_ATTACHMENT0	.\\include\\gl_core_3_3.h	/^		#define GL_COLOR_ATTACHMENT0 /;"	d
GL_COLOR_ATTACHMENT1	.\\include\\gl_core_3_3.h	/^		#define GL_COLOR_ATTACHMENT1 /;"	d
GL_COLOR_ATTACHMENT10	.\\include\\gl_core_3_3.h	/^		#define GL_COLOR_ATTACHMENT10 /;"	d
GL_COLOR_ATTACHMENT11	.\\include\\gl_core_3_3.h	/^		#define GL_COLOR_ATTACHMENT11 /;"	d
GL_COLOR_ATTACHMENT12	.\\include\\gl_core_3_3.h	/^		#define GL_COLOR_ATTACHMENT12 /;"	d
GL_COLOR_ATTACHMENT13	.\\include\\gl_core_3_3.h	/^		#define GL_COLOR_ATTACHMENT13 /;"	d
GL_COLOR_ATTACHMENT14	.\\include\\gl_core_3_3.h	/^		#define GL_COLOR_ATTACHMENT14 /;"	d
GL_COLOR_ATTACHMENT15	.\\include\\gl_core_3_3.h	/^		#define GL_COLOR_ATTACHMENT15 /;"	d
GL_COLOR_ATTACHMENT16	.\\include\\gl_core_3_3.h	/^		#define GL_COLOR_ATTACHMENT16 /;"	d
GL_COLOR_ATTACHMENT17	.\\include\\gl_core_3_3.h	/^		#define GL_COLOR_ATTACHMENT17 /;"	d
GL_COLOR_ATTACHMENT18	.\\include\\gl_core_3_3.h	/^		#define GL_COLOR_ATTACHMENT18 /;"	d
GL_COLOR_ATTACHMENT19	.\\include\\gl_core_3_3.h	/^		#define GL_COLOR_ATTACHMENT19 /;"	d
GL_COLOR_ATTACHMENT2	.\\include\\gl_core_3_3.h	/^		#define GL_COLOR_ATTACHMENT2 /;"	d
GL_COLOR_ATTACHMENT20	.\\include\\gl_core_3_3.h	/^		#define GL_COLOR_ATTACHMENT20 /;"	d
GL_COLOR_ATTACHMENT21	.\\include\\gl_core_3_3.h	/^		#define GL_COLOR_ATTACHMENT21 /;"	d
GL_COLOR_ATTACHMENT22	.\\include\\gl_core_3_3.h	/^		#define GL_COLOR_ATTACHMENT22 /;"	d
GL_COLOR_ATTACHMENT23	.\\include\\gl_core_3_3.h	/^		#define GL_COLOR_ATTACHMENT23 /;"	d
GL_COLOR_ATTACHMENT24	.\\include\\gl_core_3_3.h	/^		#define GL_COLOR_ATTACHMENT24 /;"	d
GL_COLOR_ATTACHMENT25	.\\include\\gl_core_3_3.h	/^		#define GL_COLOR_ATTACHMENT25 /;"	d
GL_COLOR_ATTACHMENT26	.\\include\\gl_core_3_3.h	/^		#define GL_COLOR_ATTACHMENT26 /;"	d
GL_COLOR_ATTACHMENT27	.\\include\\gl_core_3_3.h	/^		#define GL_COLOR_ATTACHMENT27 /;"	d
GL_COLOR_ATTACHMENT28	.\\include\\gl_core_3_3.h	/^		#define GL_COLOR_ATTACHMENT28 /;"	d
GL_COLOR_ATTACHMENT29	.\\include\\gl_core_3_3.h	/^		#define GL_COLOR_ATTACHMENT29 /;"	d
GL_COLOR_ATTACHMENT3	.\\include\\gl_core_3_3.h	/^		#define GL_COLOR_ATTACHMENT3 /;"	d
GL_COLOR_ATTACHMENT30	.\\include\\gl_core_3_3.h	/^		#define GL_COLOR_ATTACHMENT30 /;"	d
GL_COLOR_ATTACHMENT31	.\\include\\gl_core_3_3.h	/^		#define GL_COLOR_ATTACHMENT31 /;"	d
GL_COLOR_ATTACHMENT4	.\\include\\gl_core_3_3.h	/^		#define GL_COLOR_ATTACHMENT4 /;"	d
GL_COLOR_ATTACHMENT5	.\\include\\gl_core_3_3.h	/^		#define GL_COLOR_ATTACHMENT5 /;"	d
GL_COLOR_ATTACHMENT6	.\\include\\gl_core_3_3.h	/^		#define GL_COLOR_ATTACHMENT6 /;"	d
GL_COLOR_ATTACHMENT7	.\\include\\gl_core_3_3.h	/^		#define GL_COLOR_ATTACHMENT7 /;"	d
GL_COLOR_ATTACHMENT8	.\\include\\gl_core_3_3.h	/^		#define GL_COLOR_ATTACHMENT8 /;"	d
GL_COLOR_ATTACHMENT9	.\\include\\gl_core_3_3.h	/^		#define GL_COLOR_ATTACHMENT9 /;"	d
GL_COLOR_BUFFER_BIT	.\\include\\gl_core_3_3.h	/^		#define GL_COLOR_BUFFER_BIT /;"	d
GL_COLOR_CLEAR_VALUE	.\\include\\gl_core_3_3.h	/^		#define GL_COLOR_CLEAR_VALUE /;"	d
GL_COLOR_LOGIC_OP	.\\include\\gl_core_3_3.h	/^		#define GL_COLOR_LOGIC_OP /;"	d
GL_COLOR_WRITEMASK	.\\include\\gl_core_3_3.h	/^		#define GL_COLOR_WRITEMASK /;"	d
GL_COMPARE_REF_TO_TEXTURE	.\\include\\gl_core_3_3.h	/^		#define GL_COMPARE_REF_TO_TEXTURE /;"	d
GL_COMPILE_STATUS	.\\include\\gl_core_3_3.h	/^		#define GL_COMPILE_STATUS /;"	d
GL_COMPRESSED_RED	.\\include\\gl_core_3_3.h	/^		#define GL_COMPRESSED_RED /;"	d
GL_COMPRESSED_RED_RGTC1	.\\include\\gl_core_3_3.h	/^		#define GL_COMPRESSED_RED_RGTC1 /;"	d
GL_COMPRESSED_RG	.\\include\\gl_core_3_3.h	/^		#define GL_COMPRESSED_RG /;"	d
GL_COMPRESSED_RGB	.\\include\\gl_core_3_3.h	/^		#define GL_COMPRESSED_RGB /;"	d
GL_COMPRESSED_RGBA	.\\include\\gl_core_3_3.h	/^		#define GL_COMPRESSED_RGBA /;"	d
GL_COMPRESSED_RGBA_S3TC_DXT1_EXT	.\\include\\gl_core_3_3.h	/^		#define GL_COMPRESSED_RGBA_S3TC_DXT1_EXT /;"	d
GL_COMPRESSED_RGBA_S3TC_DXT3_EXT	.\\include\\gl_core_3_3.h	/^		#define GL_COMPRESSED_RGBA_S3TC_DXT3_EXT /;"	d
GL_COMPRESSED_RGBA_S3TC_DXT5_EXT	.\\include\\gl_core_3_3.h	/^		#define GL_COMPRESSED_RGBA_S3TC_DXT5_EXT /;"	d
GL_COMPRESSED_RGB_S3TC_DXT1_EXT	.\\include\\gl_core_3_3.h	/^		#define GL_COMPRESSED_RGB_S3TC_DXT1_EXT /;"	d
GL_COMPRESSED_RG_RGTC2	.\\include\\gl_core_3_3.h	/^		#define GL_COMPRESSED_RG_RGTC2 /;"	d
GL_COMPRESSED_SIGNED_RED_RGTC1	.\\include\\gl_core_3_3.h	/^		#define GL_COMPRESSED_SIGNED_RED_RGTC1 /;"	d
GL_COMPRESSED_SIGNED_RG_RGTC2	.\\include\\gl_core_3_3.h	/^		#define GL_COMPRESSED_SIGNED_RG_RGTC2 /;"	d
GL_COMPRESSED_SLUMINANCE_ALPHA_EXT	.\\include\\gl_core_3_3.h	/^		#define GL_COMPRESSED_SLUMINANCE_ALPHA_EXT /;"	d
GL_COMPRESSED_SLUMINANCE_EXT	.\\include\\gl_core_3_3.h	/^		#define GL_COMPRESSED_SLUMINANCE_EXT /;"	d
GL_COMPRESSED_SRGB	.\\include\\gl_core_3_3.h	/^		#define GL_COMPRESSED_SRGB /;"	d
GL_COMPRESSED_SRGB_ALPHA	.\\include\\gl_core_3_3.h	/^		#define GL_COMPRESSED_SRGB_ALPHA /;"	d
GL_COMPRESSED_SRGB_ALPHA_EXT	.\\include\\gl_core_3_3.h	/^		#define GL_COMPRESSED_SRGB_ALPHA_EXT /;"	d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT	.\\include\\gl_core_3_3.h	/^		#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT /;"	d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT	.\\include\\gl_core_3_3.h	/^		#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT /;"	d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT	.\\include\\gl_core_3_3.h	/^		#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT /;"	d
GL_COMPRESSED_SRGB_EXT	.\\include\\gl_core_3_3.h	/^		#define GL_COMPRESSED_SRGB_EXT /;"	d
GL_COMPRESSED_SRGB_S3TC_DXT1_EXT	.\\include\\gl_core_3_3.h	/^		#define GL_COMPRESSED_SRGB_S3TC_DXT1_EXT /;"	d
GL_COMPRESSED_TEXTURE_FORMATS	.\\include\\gl_core_3_3.h	/^		#define GL_COMPRESSED_TEXTURE_FORMATS /;"	d
GL_CONDITION_SATISFIED	.\\include\\gl_core_3_3.h	/^		#define GL_CONDITION_SATISFIED /;"	d
GL_CONSTANT_ALPHA	.\\include\\gl_core_3_3.h	/^		#define GL_CONSTANT_ALPHA /;"	d
GL_CONSTANT_COLOR	.\\include\\gl_core_3_3.h	/^		#define GL_CONSTANT_COLOR /;"	d
GL_CONTEXT_COMPATIBILITY_PROFILE_BIT	.\\include\\gl_core_3_3.h	/^		#define GL_CONTEXT_COMPATIBILITY_PROFILE_BIT /;"	d
GL_CONTEXT_CORE_PROFILE_BIT	.\\include\\gl_core_3_3.h	/^		#define GL_CONTEXT_CORE_PROFILE_BIT /;"	d
GL_CONTEXT_FLAGS	.\\include\\gl_core_3_3.h	/^		#define GL_CONTEXT_FLAGS /;"	d
GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT	.\\include\\gl_core_3_3.h	/^		#define GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT /;"	d
GL_CONTEXT_PROFILE_MASK	.\\include\\gl_core_3_3.h	/^		#define GL_CONTEXT_PROFILE_MASK /;"	d
GL_COPY	.\\include\\gl_core_3_3.h	/^		#define GL_COPY /;"	d
GL_COPY_INVERTED	.\\include\\gl_core_3_3.h	/^		#define GL_COPY_INVERTED /;"	d
GL_COPY_READ_BUFFER	.\\include\\gl_core_3_3.h	/^		#define GL_COPY_READ_BUFFER /;"	d
GL_COPY_WRITE_BUFFER	.\\include\\gl_core_3_3.h	/^		#define GL_COPY_WRITE_BUFFER /;"	d
GL_CULL_FACE	.\\include\\gl_core_3_3.h	/^		#define GL_CULL_FACE /;"	d
GL_CULL_FACE_MODE	.\\include\\gl_core_3_3.h	/^		#define GL_CULL_FACE_MODE /;"	d
GL_CURRENT_PROGRAM	.\\include\\gl_core_3_3.h	/^		#define GL_CURRENT_PROGRAM /;"	d
GL_CURRENT_QUERY	.\\include\\gl_core_3_3.h	/^		#define GL_CURRENT_QUERY /;"	d
GL_CURRENT_VERTEX_ATTRIB	.\\include\\gl_core_3_3.h	/^		#define GL_CURRENT_VERTEX_ATTRIB /;"	d
GL_CW	.\\include\\gl_core_3_3.h	/^		#define GL_CW /;"	d
GL_DECR	.\\include\\gl_core_3_3.h	/^		#define GL_DECR /;"	d
GL_DECR_WRAP	.\\include\\gl_core_3_3.h	/^		#define GL_DECR_WRAP /;"	d
GL_DELETE_STATUS	.\\include\\gl_core_3_3.h	/^		#define GL_DELETE_STATUS /;"	d
GL_DEPTH	.\\include\\gl_core_3_3.h	/^		#define GL_DEPTH /;"	d
GL_DEPTH24_STENCIL8	.\\include\\gl_core_3_3.h	/^		#define GL_DEPTH24_STENCIL8 /;"	d
GL_DEPTH32F_STENCIL8	.\\include\\gl_core_3_3.h	/^		#define GL_DEPTH32F_STENCIL8 /;"	d
GL_DEPTH_ATTACHMENT	.\\include\\gl_core_3_3.h	/^		#define GL_DEPTH_ATTACHMENT /;"	d
GL_DEPTH_BUFFER_BIT	.\\include\\gl_core_3_3.h	/^		#define GL_DEPTH_BUFFER_BIT /;"	d
GL_DEPTH_CLAMP	.\\include\\gl_core_3_3.h	/^		#define GL_DEPTH_CLAMP /;"	d
GL_DEPTH_CLEAR_VALUE	.\\include\\gl_core_3_3.h	/^		#define GL_DEPTH_CLEAR_VALUE /;"	d
GL_DEPTH_COMPONENT	.\\include\\gl_core_3_3.h	/^		#define GL_DEPTH_COMPONENT /;"	d
GL_DEPTH_COMPONENT16	.\\include\\gl_core_3_3.h	/^		#define GL_DEPTH_COMPONENT16 /;"	d
GL_DEPTH_COMPONENT24	.\\include\\gl_core_3_3.h	/^		#define GL_DEPTH_COMPONENT24 /;"	d
GL_DEPTH_COMPONENT32	.\\include\\gl_core_3_3.h	/^		#define GL_DEPTH_COMPONENT32 /;"	d
GL_DEPTH_COMPONENT32F	.\\include\\gl_core_3_3.h	/^		#define GL_DEPTH_COMPONENT32F /;"	d
GL_DEPTH_FUNC	.\\include\\gl_core_3_3.h	/^		#define GL_DEPTH_FUNC /;"	d
GL_DEPTH_RANGE	.\\include\\gl_core_3_3.h	/^		#define GL_DEPTH_RANGE /;"	d
GL_DEPTH_STENCIL	.\\include\\gl_core_3_3.h	/^		#define GL_DEPTH_STENCIL /;"	d
GL_DEPTH_STENCIL_ATTACHMENT	.\\include\\gl_core_3_3.h	/^		#define GL_DEPTH_STENCIL_ATTACHMENT /;"	d
GL_DEPTH_TEST	.\\include\\gl_core_3_3.h	/^		#define GL_DEPTH_TEST /;"	d
GL_DEPTH_WRITEMASK	.\\include\\gl_core_3_3.h	/^		#define GL_DEPTH_WRITEMASK /;"	d
GL_DITHER	.\\include\\gl_core_3_3.h	/^		#define GL_DITHER /;"	d
GL_DONT_CARE	.\\include\\gl_core_3_3.h	/^		#define GL_DONT_CARE /;"	d
GL_DOUBLE	.\\include\\gl_core_3_3.h	/^		#define GL_DOUBLE /;"	d
GL_DOUBLEBUFFER	.\\include\\gl_core_3_3.h	/^		#define GL_DOUBLEBUFFER /;"	d
GL_DRAW_BUFFER	.\\include\\gl_core_3_3.h	/^		#define GL_DRAW_BUFFER /;"	d
GL_DRAW_BUFFER0	.\\include\\gl_core_3_3.h	/^		#define GL_DRAW_BUFFER0 /;"	d
GL_DRAW_BUFFER1	.\\include\\gl_core_3_3.h	/^		#define GL_DRAW_BUFFER1 /;"	d
GL_DRAW_BUFFER10	.\\include\\gl_core_3_3.h	/^		#define GL_DRAW_BUFFER10 /;"	d
GL_DRAW_BUFFER11	.\\include\\gl_core_3_3.h	/^		#define GL_DRAW_BUFFER11 /;"	d
GL_DRAW_BUFFER12	.\\include\\gl_core_3_3.h	/^		#define GL_DRAW_BUFFER12 /;"	d
GL_DRAW_BUFFER13	.\\include\\gl_core_3_3.h	/^		#define GL_DRAW_BUFFER13 /;"	d
GL_DRAW_BUFFER14	.\\include\\gl_core_3_3.h	/^		#define GL_DRAW_BUFFER14 /;"	d
GL_DRAW_BUFFER15	.\\include\\gl_core_3_3.h	/^		#define GL_DRAW_BUFFER15 /;"	d
GL_DRAW_BUFFER2	.\\include\\gl_core_3_3.h	/^		#define GL_DRAW_BUFFER2 /;"	d
GL_DRAW_BUFFER3	.\\include\\gl_core_3_3.h	/^		#define GL_DRAW_BUFFER3 /;"	d
GL_DRAW_BUFFER4	.\\include\\gl_core_3_3.h	/^		#define GL_DRAW_BUFFER4 /;"	d
GL_DRAW_BUFFER5	.\\include\\gl_core_3_3.h	/^		#define GL_DRAW_BUFFER5 /;"	d
GL_DRAW_BUFFER6	.\\include\\gl_core_3_3.h	/^		#define GL_DRAW_BUFFER6 /;"	d
GL_DRAW_BUFFER7	.\\include\\gl_core_3_3.h	/^		#define GL_DRAW_BUFFER7 /;"	d
GL_DRAW_BUFFER8	.\\include\\gl_core_3_3.h	/^		#define GL_DRAW_BUFFER8 /;"	d
GL_DRAW_BUFFER9	.\\include\\gl_core_3_3.h	/^		#define GL_DRAW_BUFFER9 /;"	d
GL_DRAW_FRAMEBUFFER	.\\include\\gl_core_3_3.h	/^		#define GL_DRAW_FRAMEBUFFER /;"	d
GL_DRAW_FRAMEBUFFER_BINDING	.\\include\\gl_core_3_3.h	/^		#define GL_DRAW_FRAMEBUFFER_BINDING /;"	d
GL_DST_ALPHA	.\\include\\gl_core_3_3.h	/^		#define GL_DST_ALPHA /;"	d
GL_DST_COLOR	.\\include\\gl_core_3_3.h	/^		#define GL_DST_COLOR /;"	d
GL_DYNAMIC_COPY	.\\include\\gl_core_3_3.h	/^		#define GL_DYNAMIC_COPY /;"	d
GL_DYNAMIC_DRAW	.\\include\\gl_core_3_3.h	/^		#define GL_DYNAMIC_DRAW /;"	d
GL_DYNAMIC_READ	.\\include\\gl_core_3_3.h	/^		#define GL_DYNAMIC_READ /;"	d
GL_ELEMENT_ARRAY_BUFFER	.\\include\\gl_core_3_3.h	/^		#define GL_ELEMENT_ARRAY_BUFFER /;"	d
GL_ELEMENT_ARRAY_BUFFER_BINDING	.\\include\\gl_core_3_3.h	/^		#define GL_ELEMENT_ARRAY_BUFFER_BINDING /;"	d
GL_EQUAL	.\\include\\gl_core_3_3.h	/^		#define GL_EQUAL /;"	d
GL_EQUIV	.\\include\\gl_core_3_3.h	/^		#define GL_EQUIV /;"	d
GL_EXTENSIONS	.\\include\\gl_core_3_3.h	/^		#define GL_EXTENSIONS /;"	d
GL_FALSE	.\\include\\gl_core_3_3.h	/^		#define GL_FALSE /;"	d
GL_FASTEST	.\\include\\gl_core_3_3.h	/^		#define GL_FASTEST /;"	d
GL_FILL	.\\include\\gl_core_3_3.h	/^		#define GL_FILL /;"	d
GL_FIRST_VERTEX_CONVENTION	.\\include\\gl_core_3_3.h	/^		#define GL_FIRST_VERTEX_CONVENTION /;"	d
GL_FIXED_ONLY	.\\include\\gl_core_3_3.h	/^		#define GL_FIXED_ONLY /;"	d
GL_FLOAT	.\\include\\gl_core_3_3.h	/^		#define GL_FLOAT /;"	d
GL_FLOAT_32_UNSIGNED_INT_24_8_REV	.\\include\\gl_core_3_3.h	/^		#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV /;"	d
GL_FLOAT_MAT2	.\\include\\gl_core_3_3.h	/^		#define GL_FLOAT_MAT2 /;"	d
GL_FLOAT_MAT2x3	.\\include\\gl_core_3_3.h	/^		#define GL_FLOAT_MAT2x3 /;"	d
GL_FLOAT_MAT2x4	.\\include\\gl_core_3_3.h	/^		#define GL_FLOAT_MAT2x4 /;"	d
GL_FLOAT_MAT3	.\\include\\gl_core_3_3.h	/^		#define GL_FLOAT_MAT3 /;"	d
GL_FLOAT_MAT3x2	.\\include\\gl_core_3_3.h	/^		#define GL_FLOAT_MAT3x2 /;"	d
GL_FLOAT_MAT3x4	.\\include\\gl_core_3_3.h	/^		#define GL_FLOAT_MAT3x4 /;"	d
GL_FLOAT_MAT4	.\\include\\gl_core_3_3.h	/^		#define GL_FLOAT_MAT4 /;"	d
GL_FLOAT_MAT4x2	.\\include\\gl_core_3_3.h	/^		#define GL_FLOAT_MAT4x2 /;"	d
GL_FLOAT_MAT4x3	.\\include\\gl_core_3_3.h	/^		#define GL_FLOAT_MAT4x3 /;"	d
GL_FLOAT_VEC2	.\\include\\gl_core_3_3.h	/^		#define GL_FLOAT_VEC2 /;"	d
GL_FLOAT_VEC3	.\\include\\gl_core_3_3.h	/^		#define GL_FLOAT_VEC3 /;"	d
GL_FLOAT_VEC4	.\\include\\gl_core_3_3.h	/^		#define GL_FLOAT_VEC4 /;"	d
GL_FRAGMENT_SHADER	.\\include\\gl_core_3_3.h	/^		#define GL_FRAGMENT_SHADER /;"	d
GL_FRAGMENT_SHADER_DERIVATIVE_HINT	.\\include\\gl_core_3_3.h	/^		#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT /;"	d
GL_FRAMEBUFFER	.\\include\\gl_core_3_3.h	/^		#define GL_FRAMEBUFFER /;"	d
GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE	.\\include\\gl_core_3_3.h	/^		#define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE	.\\include\\gl_core_3_3.h	/^		#define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING	.\\include\\gl_core_3_3.h	/^		#define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING /;"	d
GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE	.\\include\\gl_core_3_3.h	/^		#define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE	.\\include\\gl_core_3_3.h	/^		#define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE	.\\include\\gl_core_3_3.h	/^		#define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED	.\\include\\gl_core_3_3.h	/^		#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED /;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME	.\\include\\gl_core_3_3.h	/^		#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME /;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE	.\\include\\gl_core_3_3.h	/^		#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE	.\\include\\gl_core_3_3.h	/^		#define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE	.\\include\\gl_core_3_3.h	/^		#define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE	.\\include\\gl_core_3_3.h	/^		#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER	.\\include\\gl_core_3_3.h	/^		#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL	.\\include\\gl_core_3_3.h	/^		#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL /;"	d
GL_FRAMEBUFFER_BINDING	.\\include\\gl_core_3_3.h	/^		#define GL_FRAMEBUFFER_BINDING /;"	d
GL_FRAMEBUFFER_COMPLETE	.\\include\\gl_core_3_3.h	/^		#define GL_FRAMEBUFFER_COMPLETE /;"	d
GL_FRAMEBUFFER_DEFAULT	.\\include\\gl_core_3_3.h	/^		#define GL_FRAMEBUFFER_DEFAULT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT	.\\include\\gl_core_3_3.h	/^		#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER	.\\include\\gl_core_3_3.h	/^		#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER /;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS	.\\include\\gl_core_3_3.h	/^		#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS /;"	d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT	.\\include\\gl_core_3_3.h	/^		#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE	.\\include\\gl_core_3_3.h	/^		#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE /;"	d
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER	.\\include\\gl_core_3_3.h	/^		#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER /;"	d
GL_FRAMEBUFFER_SRGB	.\\include\\gl_core_3_3.h	/^		#define GL_FRAMEBUFFER_SRGB /;"	d
GL_FRAMEBUFFER_UNDEFINED	.\\include\\gl_core_3_3.h	/^		#define GL_FRAMEBUFFER_UNDEFINED /;"	d
GL_FRAMEBUFFER_UNSUPPORTED	.\\include\\gl_core_3_3.h	/^		#define GL_FRAMEBUFFER_UNSUPPORTED /;"	d
GL_FRONT	.\\include\\gl_core_3_3.h	/^		#define GL_FRONT /;"	d
GL_FRONT_AND_BACK	.\\include\\gl_core_3_3.h	/^		#define GL_FRONT_AND_BACK /;"	d
GL_FRONT_FACE	.\\include\\gl_core_3_3.h	/^		#define GL_FRONT_FACE /;"	d
GL_FRONT_LEFT	.\\include\\gl_core_3_3.h	/^		#define GL_FRONT_LEFT /;"	d
GL_FRONT_RIGHT	.\\include\\gl_core_3_3.h	/^		#define GL_FRONT_RIGHT /;"	d
GL_FUNC_ADD	.\\include\\gl_core_3_3.h	/^		#define GL_FUNC_ADD /;"	d
GL_FUNC_REVERSE_SUBTRACT	.\\include\\gl_core_3_3.h	/^		#define GL_FUNC_REVERSE_SUBTRACT /;"	d
GL_FUNC_SUBTRACT	.\\include\\gl_core_3_3.h	/^		#define GL_FUNC_SUBTRACT /;"	d
GL_GEOMETRY_INPUT_TYPE	.\\include\\gl_core_3_3.h	/^		#define GL_GEOMETRY_INPUT_TYPE /;"	d
GL_GEOMETRY_OUTPUT_TYPE	.\\include\\gl_core_3_3.h	/^		#define GL_GEOMETRY_OUTPUT_TYPE /;"	d
GL_GEOMETRY_SHADER	.\\include\\gl_core_3_3.h	/^		#define GL_GEOMETRY_SHADER /;"	d
GL_GEOMETRY_VERTICES_OUT	.\\include\\gl_core_3_3.h	/^		#define GL_GEOMETRY_VERTICES_OUT /;"	d
GL_GEQUAL	.\\include\\gl_core_3_3.h	/^		#define GL_GEQUAL /;"	d
GL_GREATER	.\\include\\gl_core_3_3.h	/^		#define GL_GREATER /;"	d
GL_GREEN	.\\include\\gl_core_3_3.h	/^		#define GL_GREEN /;"	d
GL_GREEN_INTEGER	.\\include\\gl_core_3_3.h	/^		#define GL_GREEN_INTEGER /;"	d
GL_HALF_FLOAT	.\\include\\gl_core_3_3.h	/^		#define GL_HALF_FLOAT /;"	d
GL_INCR	.\\include\\gl_core_3_3.h	/^		#define GL_INCR /;"	d
GL_INCR_WRAP	.\\include\\gl_core_3_3.h	/^		#define GL_INCR_WRAP /;"	d
GL_INFO_LOG_LENGTH	.\\include\\gl_core_3_3.h	/^		#define GL_INFO_LOG_LENGTH /;"	d
GL_INT	.\\include\\gl_core_3_3.h	/^		#define GL_INT /;"	d
GL_INTERLEAVED_ATTRIBS	.\\include\\gl_core_3_3.h	/^		#define GL_INTERLEAVED_ATTRIBS /;"	d
GL_INT_2_10_10_10_REV	.\\include\\gl_core_3_3.h	/^		#define GL_INT_2_10_10_10_REV /;"	d
GL_INT_SAMPLER_1D	.\\include\\gl_core_3_3.h	/^		#define GL_INT_SAMPLER_1D /;"	d
GL_INT_SAMPLER_1D_ARRAY	.\\include\\gl_core_3_3.h	/^		#define GL_INT_SAMPLER_1D_ARRAY /;"	d
GL_INT_SAMPLER_2D	.\\include\\gl_core_3_3.h	/^		#define GL_INT_SAMPLER_2D /;"	d
GL_INT_SAMPLER_2D_ARRAY	.\\include\\gl_core_3_3.h	/^		#define GL_INT_SAMPLER_2D_ARRAY /;"	d
GL_INT_SAMPLER_2D_MULTISAMPLE	.\\include\\gl_core_3_3.h	/^		#define GL_INT_SAMPLER_2D_MULTISAMPLE /;"	d
GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY	.\\include\\gl_core_3_3.h	/^		#define GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY /;"	d
GL_INT_SAMPLER_2D_RECT	.\\include\\gl_core_3_3.h	/^		#define GL_INT_SAMPLER_2D_RECT /;"	d
GL_INT_SAMPLER_3D	.\\include\\gl_core_3_3.h	/^		#define GL_INT_SAMPLER_3D /;"	d
GL_INT_SAMPLER_BUFFER	.\\include\\gl_core_3_3.h	/^		#define GL_INT_SAMPLER_BUFFER /;"	d
GL_INT_SAMPLER_CUBE	.\\include\\gl_core_3_3.h	/^		#define GL_INT_SAMPLER_CUBE /;"	d
GL_INT_VEC2	.\\include\\gl_core_3_3.h	/^		#define GL_INT_VEC2 /;"	d
GL_INT_VEC3	.\\include\\gl_core_3_3.h	/^		#define GL_INT_VEC3 /;"	d
GL_INT_VEC4	.\\include\\gl_core_3_3.h	/^		#define GL_INT_VEC4 /;"	d
GL_INVALID_ENUM	.\\include\\gl_core_3_3.h	/^		#define GL_INVALID_ENUM /;"	d
GL_INVALID_FRAMEBUFFER_OPERATION	.\\include\\gl_core_3_3.h	/^		#define GL_INVALID_FRAMEBUFFER_OPERATION /;"	d
GL_INVALID_INDEX	.\\include\\gl_core_3_3.h	/^		#define GL_INVALID_INDEX /;"	d
GL_INVALID_OPERATION	.\\include\\gl_core_3_3.h	/^		#define GL_INVALID_OPERATION /;"	d
GL_INVALID_VALUE	.\\include\\gl_core_3_3.h	/^		#define GL_INVALID_VALUE /;"	d
GL_INVERT	.\\include\\gl_core_3_3.h	/^		#define GL_INVERT /;"	d
GL_KEEP	.\\include\\gl_core_3_3.h	/^		#define GL_KEEP /;"	d
GL_LAST_VERTEX_CONVENTION	.\\include\\gl_core_3_3.h	/^		#define GL_LAST_VERTEX_CONVENTION /;"	d
GL_LEFT	.\\include\\gl_core_3_3.h	/^		#define GL_LEFT /;"	d
GL_LEQUAL	.\\include\\gl_core_3_3.h	/^		#define GL_LEQUAL /;"	d
GL_LESS	.\\include\\gl_core_3_3.h	/^		#define GL_LESS /;"	d
GL_LINE	.\\include\\gl_core_3_3.h	/^		#define GL_LINE /;"	d
GL_LINEAR	.\\include\\gl_core_3_3.h	/^		#define GL_LINEAR /;"	d
GL_LINEAR_MIPMAP_LINEAR	.\\include\\gl_core_3_3.h	/^		#define GL_LINEAR_MIPMAP_LINEAR /;"	d
GL_LINEAR_MIPMAP_NEAREST	.\\include\\gl_core_3_3.h	/^		#define GL_LINEAR_MIPMAP_NEAREST /;"	d
GL_LINES	.\\include\\gl_core_3_3.h	/^		#define GL_LINES /;"	d
GL_LINES_ADJACENCY	.\\include\\gl_core_3_3.h	/^		#define GL_LINES_ADJACENCY /;"	d
GL_LINE_LOOP	.\\include\\gl_core_3_3.h	/^		#define GL_LINE_LOOP /;"	d
GL_LINE_SMOOTH	.\\include\\gl_core_3_3.h	/^		#define GL_LINE_SMOOTH /;"	d
GL_LINE_SMOOTH_HINT	.\\include\\gl_core_3_3.h	/^		#define GL_LINE_SMOOTH_HINT /;"	d
GL_LINE_STRIP	.\\include\\gl_core_3_3.h	/^		#define GL_LINE_STRIP /;"	d
GL_LINE_STRIP_ADJACENCY	.\\include\\gl_core_3_3.h	/^		#define GL_LINE_STRIP_ADJACENCY /;"	d
GL_LINE_WIDTH	.\\include\\gl_core_3_3.h	/^		#define GL_LINE_WIDTH /;"	d
GL_LINE_WIDTH_GRANULARITY	.\\include\\gl_core_3_3.h	/^		#define GL_LINE_WIDTH_GRANULARITY /;"	d
GL_LINE_WIDTH_RANGE	.\\include\\gl_core_3_3.h	/^		#define GL_LINE_WIDTH_RANGE /;"	d
GL_LINK_STATUS	.\\include\\gl_core_3_3.h	/^		#define GL_LINK_STATUS /;"	d
GL_LOAD_GEN_BASIC_OPENGL_TYPEDEFS	.\\include\\gl_core_3_3.h	/^#define GL_LOAD_GEN_BASIC_OPENGL_TYPEDEFS$/;"	d
GL_LOGIC_OP_MODE	.\\include\\gl_core_3_3.h	/^		#define GL_LOGIC_OP_MODE /;"	d
GL_LOWER_LEFT	.\\include\\gl_core_3_3.h	/^		#define GL_LOWER_LEFT /;"	d
GL_MAJOR_VERSION	.\\include\\gl_core_3_3.h	/^		#define GL_MAJOR_VERSION /;"	d
GL_MAP_FLUSH_EXPLICIT_BIT	.\\include\\gl_core_3_3.h	/^		#define GL_MAP_FLUSH_EXPLICIT_BIT /;"	d
GL_MAP_INVALIDATE_BUFFER_BIT	.\\include\\gl_core_3_3.h	/^		#define GL_MAP_INVALIDATE_BUFFER_BIT /;"	d
GL_MAP_INVALIDATE_RANGE_BIT	.\\include\\gl_core_3_3.h	/^		#define GL_MAP_INVALIDATE_RANGE_BIT /;"	d
GL_MAP_READ_BIT	.\\include\\gl_core_3_3.h	/^		#define GL_MAP_READ_BIT /;"	d
GL_MAP_UNSYNCHRONIZED_BIT	.\\include\\gl_core_3_3.h	/^		#define GL_MAP_UNSYNCHRONIZED_BIT /;"	d
GL_MAP_WRITE_BIT	.\\include\\gl_core_3_3.h	/^		#define GL_MAP_WRITE_BIT /;"	d
GL_MAX	.\\include\\gl_core_3_3.h	/^		#define GL_MAX /;"	d
GL_MAX_3D_TEXTURE_SIZE	.\\include\\gl_core_3_3.h	/^		#define GL_MAX_3D_TEXTURE_SIZE /;"	d
GL_MAX_ARRAY_TEXTURE_LAYERS	.\\include\\gl_core_3_3.h	/^		#define GL_MAX_ARRAY_TEXTURE_LAYERS /;"	d
GL_MAX_CLIP_DISTANCES	.\\include\\gl_core_3_3.h	/^		#define GL_MAX_CLIP_DISTANCES /;"	d
GL_MAX_COLOR_ATTACHMENTS	.\\include\\gl_core_3_3.h	/^		#define GL_MAX_COLOR_ATTACHMENTS /;"	d
GL_MAX_COLOR_TEXTURE_SAMPLES	.\\include\\gl_core_3_3.h	/^		#define GL_MAX_COLOR_TEXTURE_SAMPLES /;"	d
GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS	.\\include\\gl_core_3_3.h	/^		#define GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS	.\\include\\gl_core_3_3.h	/^		#define GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS	.\\include\\gl_core_3_3.h	/^		#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_COMBINED_UNIFORM_BLOCKS	.\\include\\gl_core_3_3.h	/^		#define GL_MAX_COMBINED_UNIFORM_BLOCKS /;"	d
GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS	.\\include\\gl_core_3_3.h	/^		#define GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS /;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE	.\\include\\gl_core_3_3.h	/^		#define GL_MAX_CUBE_MAP_TEXTURE_SIZE /;"	d
GL_MAX_DEPTH_TEXTURE_SAMPLES	.\\include\\gl_core_3_3.h	/^		#define GL_MAX_DEPTH_TEXTURE_SAMPLES /;"	d
GL_MAX_DRAW_BUFFERS	.\\include\\gl_core_3_3.h	/^		#define GL_MAX_DRAW_BUFFERS /;"	d
GL_MAX_DUAL_SOURCE_DRAW_BUFFERS	.\\include\\gl_core_3_3.h	/^		#define GL_MAX_DUAL_SOURCE_DRAW_BUFFERS /;"	d
GL_MAX_ELEMENTS_INDICES	.\\include\\gl_core_3_3.h	/^		#define GL_MAX_ELEMENTS_INDICES /;"	d
GL_MAX_ELEMENTS_VERTICES	.\\include\\gl_core_3_3.h	/^		#define GL_MAX_ELEMENTS_VERTICES /;"	d
GL_MAX_FRAGMENT_INPUT_COMPONENTS	.\\include\\gl_core_3_3.h	/^		#define GL_MAX_FRAGMENT_INPUT_COMPONENTS /;"	d
GL_MAX_FRAGMENT_UNIFORM_BLOCKS	.\\include\\gl_core_3_3.h	/^		#define GL_MAX_FRAGMENT_UNIFORM_BLOCKS /;"	d
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS	.\\include\\gl_core_3_3.h	/^		#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS /;"	d
GL_MAX_GEOMETRY_INPUT_COMPONENTS	.\\include\\gl_core_3_3.h	/^		#define GL_MAX_GEOMETRY_INPUT_COMPONENTS /;"	d
GL_MAX_GEOMETRY_OUTPUT_COMPONENTS	.\\include\\gl_core_3_3.h	/^		#define GL_MAX_GEOMETRY_OUTPUT_COMPONENTS /;"	d
GL_MAX_GEOMETRY_OUTPUT_VERTICES	.\\include\\gl_core_3_3.h	/^		#define GL_MAX_GEOMETRY_OUTPUT_VERTICES /;"	d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS	.\\include\\gl_core_3_3.h	/^		#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS	.\\include\\gl_core_3_3.h	/^		#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS /;"	d
GL_MAX_GEOMETRY_UNIFORM_BLOCKS	.\\include\\gl_core_3_3.h	/^		#define GL_MAX_GEOMETRY_UNIFORM_BLOCKS /;"	d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS	.\\include\\gl_core_3_3.h	/^		#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS /;"	d
GL_MAX_INTEGER_SAMPLES	.\\include\\gl_core_3_3.h	/^		#define GL_MAX_INTEGER_SAMPLES /;"	d
GL_MAX_PROGRAM_TEXEL_OFFSET	.\\include\\gl_core_3_3.h	/^		#define GL_MAX_PROGRAM_TEXEL_OFFSET /;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE	.\\include\\gl_core_3_3.h	/^		#define GL_MAX_RECTANGLE_TEXTURE_SIZE /;"	d
GL_MAX_RENDERBUFFER_SIZE	.\\include\\gl_core_3_3.h	/^		#define GL_MAX_RENDERBUFFER_SIZE /;"	d
GL_MAX_SAMPLES	.\\include\\gl_core_3_3.h	/^		#define GL_MAX_SAMPLES /;"	d
GL_MAX_SAMPLE_MASK_WORDS	.\\include\\gl_core_3_3.h	/^		#define GL_MAX_SAMPLE_MASK_WORDS /;"	d
GL_MAX_SERVER_WAIT_TIMEOUT	.\\include\\gl_core_3_3.h	/^		#define GL_MAX_SERVER_WAIT_TIMEOUT /;"	d
GL_MAX_TEXTURE_BUFFER_SIZE	.\\include\\gl_core_3_3.h	/^		#define GL_MAX_TEXTURE_BUFFER_SIZE /;"	d
GL_MAX_TEXTURE_IMAGE_UNITS	.\\include\\gl_core_3_3.h	/^		#define GL_MAX_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_TEXTURE_LOD_BIAS	.\\include\\gl_core_3_3.h	/^		#define GL_MAX_TEXTURE_LOD_BIAS /;"	d
GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT	.\\include\\gl_core_3_3.h	/^		#define GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT /;"	d
GL_MAX_TEXTURE_SIZE	.\\include\\gl_core_3_3.h	/^		#define GL_MAX_TEXTURE_SIZE /;"	d
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS	.\\include\\gl_core_3_3.h	/^		#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS /;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS	.\\include\\gl_core_3_3.h	/^		#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS /;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS	.\\include\\gl_core_3_3.h	/^		#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS /;"	d
GL_MAX_UNIFORM_BLOCK_SIZE	.\\include\\gl_core_3_3.h	/^		#define GL_MAX_UNIFORM_BLOCK_SIZE /;"	d
GL_MAX_UNIFORM_BUFFER_BINDINGS	.\\include\\gl_core_3_3.h	/^		#define GL_MAX_UNIFORM_BUFFER_BINDINGS /;"	d
GL_MAX_VARYING_COMPONENTS	.\\include\\gl_core_3_3.h	/^		#define GL_MAX_VARYING_COMPONENTS /;"	d
GL_MAX_VARYING_FLOATS	.\\include\\gl_core_3_3.h	/^		#define GL_MAX_VARYING_FLOATS /;"	d
GL_MAX_VERTEX_ATTRIBS	.\\include\\gl_core_3_3.h	/^		#define GL_MAX_VERTEX_ATTRIBS /;"	d
GL_MAX_VERTEX_OUTPUT_COMPONENTS	.\\include\\gl_core_3_3.h	/^		#define GL_MAX_VERTEX_OUTPUT_COMPONENTS /;"	d
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS	.\\include\\gl_core_3_3.h	/^		#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_VERTEX_UNIFORM_BLOCKS	.\\include\\gl_core_3_3.h	/^		#define GL_MAX_VERTEX_UNIFORM_BLOCKS /;"	d
GL_MAX_VERTEX_UNIFORM_COMPONENTS	.\\include\\gl_core_3_3.h	/^		#define GL_MAX_VERTEX_UNIFORM_COMPONENTS /;"	d
GL_MAX_VIEWPORT_DIMS	.\\include\\gl_core_3_3.h	/^		#define GL_MAX_VIEWPORT_DIMS /;"	d
GL_MIN	.\\include\\gl_core_3_3.h	/^		#define GL_MIN /;"	d
GL_MINOR_VERSION	.\\include\\gl_core_3_3.h	/^		#define GL_MINOR_VERSION /;"	d
GL_MIN_PROGRAM_TEXEL_OFFSET	.\\include\\gl_core_3_3.h	/^		#define GL_MIN_PROGRAM_TEXEL_OFFSET /;"	d
GL_MIRRORED_REPEAT	.\\include\\gl_core_3_3.h	/^		#define GL_MIRRORED_REPEAT /;"	d
GL_MULTISAMPLE	.\\include\\gl_core_3_3.h	/^		#define GL_MULTISAMPLE /;"	d
GL_NAND	.\\include\\gl_core_3_3.h	/^		#define GL_NAND /;"	d
GL_NEAREST	.\\include\\gl_core_3_3.h	/^		#define GL_NEAREST /;"	d
GL_NEAREST_MIPMAP_LINEAR	.\\include\\gl_core_3_3.h	/^		#define GL_NEAREST_MIPMAP_LINEAR /;"	d
GL_NEAREST_MIPMAP_NEAREST	.\\include\\gl_core_3_3.h	/^		#define GL_NEAREST_MIPMAP_NEAREST /;"	d
GL_NEVER	.\\include\\gl_core_3_3.h	/^		#define GL_NEVER /;"	d
GL_NICEST	.\\include\\gl_core_3_3.h	/^		#define GL_NICEST /;"	d
GL_NONE	.\\include\\gl_core_3_3.h	/^		#define GL_NONE /;"	d
GL_NOOP	.\\include\\gl_core_3_3.h	/^		#define GL_NOOP /;"	d
GL_NOR	.\\include\\gl_core_3_3.h	/^		#define GL_NOR /;"	d
GL_NOTEQUAL	.\\include\\gl_core_3_3.h	/^		#define GL_NOTEQUAL /;"	d
GL_NO_ERROR	.\\include\\gl_core_3_3.h	/^		#define GL_NO_ERROR /;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS	.\\include\\gl_core_3_3.h	/^		#define GL_NUM_COMPRESSED_TEXTURE_FORMATS /;"	d
GL_NUM_EXTENSIONS	.\\include\\gl_core_3_3.h	/^		#define GL_NUM_EXTENSIONS /;"	d
GL_OBJECT_TYPE	.\\include\\gl_core_3_3.h	/^		#define GL_OBJECT_TYPE /;"	d
GL_ONE	.\\include\\gl_core_3_3.h	/^		#define GL_ONE /;"	d
GL_ONE_MINUS_CONSTANT_ALPHA	.\\include\\gl_core_3_3.h	/^		#define GL_ONE_MINUS_CONSTANT_ALPHA /;"	d
GL_ONE_MINUS_CONSTANT_COLOR	.\\include\\gl_core_3_3.h	/^		#define GL_ONE_MINUS_CONSTANT_COLOR /;"	d
GL_ONE_MINUS_DST_ALPHA	.\\include\\gl_core_3_3.h	/^		#define GL_ONE_MINUS_DST_ALPHA /;"	d
GL_ONE_MINUS_DST_COLOR	.\\include\\gl_core_3_3.h	/^		#define GL_ONE_MINUS_DST_COLOR /;"	d
GL_ONE_MINUS_SRC1_ALPHA	.\\include\\gl_core_3_3.h	/^		#define GL_ONE_MINUS_SRC1_ALPHA /;"	d
GL_ONE_MINUS_SRC1_COLOR	.\\include\\gl_core_3_3.h	/^		#define GL_ONE_MINUS_SRC1_COLOR /;"	d
GL_ONE_MINUS_SRC_ALPHA	.\\include\\gl_core_3_3.h	/^		#define GL_ONE_MINUS_SRC_ALPHA /;"	d
GL_ONE_MINUS_SRC_COLOR	.\\include\\gl_core_3_3.h	/^		#define GL_ONE_MINUS_SRC_COLOR /;"	d
GL_OR	.\\include\\gl_core_3_3.h	/^		#define GL_OR /;"	d
GL_OR_INVERTED	.\\include\\gl_core_3_3.h	/^		#define GL_OR_INVERTED /;"	d
GL_OR_REVERSE	.\\include\\gl_core_3_3.h	/^		#define GL_OR_REVERSE /;"	d
GL_OUT_OF_MEMORY	.\\include\\gl_core_3_3.h	/^		#define GL_OUT_OF_MEMORY /;"	d
GL_PACK_ALIGNMENT	.\\include\\gl_core_3_3.h	/^		#define GL_PACK_ALIGNMENT /;"	d
GL_PACK_IMAGE_HEIGHT	.\\include\\gl_core_3_3.h	/^		#define GL_PACK_IMAGE_HEIGHT /;"	d
GL_PACK_LSB_FIRST	.\\include\\gl_core_3_3.h	/^		#define GL_PACK_LSB_FIRST /;"	d
GL_PACK_ROW_LENGTH	.\\include\\gl_core_3_3.h	/^		#define GL_PACK_ROW_LENGTH /;"	d
GL_PACK_SKIP_IMAGES	.\\include\\gl_core_3_3.h	/^		#define GL_PACK_SKIP_IMAGES /;"	d
GL_PACK_SKIP_PIXELS	.\\include\\gl_core_3_3.h	/^		#define GL_PACK_SKIP_PIXELS /;"	d
GL_PACK_SKIP_ROWS	.\\include\\gl_core_3_3.h	/^		#define GL_PACK_SKIP_ROWS /;"	d
GL_PACK_SWAP_BYTES	.\\include\\gl_core_3_3.h	/^		#define GL_PACK_SWAP_BYTES /;"	d
GL_PIXEL_PACK_BUFFER	.\\include\\gl_core_3_3.h	/^		#define GL_PIXEL_PACK_BUFFER /;"	d
GL_PIXEL_PACK_BUFFER_BINDING	.\\include\\gl_core_3_3.h	/^		#define GL_PIXEL_PACK_BUFFER_BINDING /;"	d
GL_PIXEL_UNPACK_BUFFER	.\\include\\gl_core_3_3.h	/^		#define GL_PIXEL_UNPACK_BUFFER /;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING	.\\include\\gl_core_3_3.h	/^		#define GL_PIXEL_UNPACK_BUFFER_BINDING /;"	d
GL_POINT	.\\include\\gl_core_3_3.h	/^		#define GL_POINT /;"	d
GL_POINTS	.\\include\\gl_core_3_3.h	/^		#define GL_POINTS /;"	d
GL_POINT_FADE_THRESHOLD_SIZE	.\\include\\gl_core_3_3.h	/^		#define GL_POINT_FADE_THRESHOLD_SIZE /;"	d
GL_POINT_SIZE	.\\include\\gl_core_3_3.h	/^		#define GL_POINT_SIZE /;"	d
GL_POINT_SIZE_GRANULARITY	.\\include\\gl_core_3_3.h	/^		#define GL_POINT_SIZE_GRANULARITY /;"	d
GL_POINT_SIZE_RANGE	.\\include\\gl_core_3_3.h	/^		#define GL_POINT_SIZE_RANGE /;"	d
GL_POINT_SPRITE_COORD_ORIGIN	.\\include\\gl_core_3_3.h	/^		#define GL_POINT_SPRITE_COORD_ORIGIN /;"	d
GL_POLYGON_MODE	.\\include\\gl_core_3_3.h	/^		#define GL_POLYGON_MODE /;"	d
GL_POLYGON_OFFSET_FACTOR	.\\include\\gl_core_3_3.h	/^		#define GL_POLYGON_OFFSET_FACTOR /;"	d
GL_POLYGON_OFFSET_FILL	.\\include\\gl_core_3_3.h	/^		#define GL_POLYGON_OFFSET_FILL /;"	d
GL_POLYGON_OFFSET_LINE	.\\include\\gl_core_3_3.h	/^		#define GL_POLYGON_OFFSET_LINE /;"	d
GL_POLYGON_OFFSET_POINT	.\\include\\gl_core_3_3.h	/^		#define GL_POLYGON_OFFSET_POINT /;"	d
GL_POLYGON_OFFSET_UNITS	.\\include\\gl_core_3_3.h	/^		#define GL_POLYGON_OFFSET_UNITS /;"	d
GL_POLYGON_SMOOTH	.\\include\\gl_core_3_3.h	/^		#define GL_POLYGON_SMOOTH /;"	d
GL_POLYGON_SMOOTH_HINT	.\\include\\gl_core_3_3.h	/^		#define GL_POLYGON_SMOOTH_HINT /;"	d
GL_PRIMITIVES_GENERATED	.\\include\\gl_core_3_3.h	/^		#define GL_PRIMITIVES_GENERATED /;"	d
GL_PRIMITIVE_RESTART	.\\include\\gl_core_3_3.h	/^		#define GL_PRIMITIVE_RESTART /;"	d
GL_PRIMITIVE_RESTART_INDEX	.\\include\\gl_core_3_3.h	/^		#define GL_PRIMITIVE_RESTART_INDEX /;"	d
GL_PROGRAM_POINT_SIZE	.\\include\\gl_core_3_3.h	/^		#define GL_PROGRAM_POINT_SIZE /;"	d
GL_PROVOKING_VERTEX	.\\include\\gl_core_3_3.h	/^		#define GL_PROVOKING_VERTEX /;"	d
GL_PROXY_TEXTURE_1D	.\\include\\gl_core_3_3.h	/^		#define GL_PROXY_TEXTURE_1D /;"	d
GL_PROXY_TEXTURE_1D_ARRAY	.\\include\\gl_core_3_3.h	/^		#define GL_PROXY_TEXTURE_1D_ARRAY /;"	d
GL_PROXY_TEXTURE_2D	.\\include\\gl_core_3_3.h	/^		#define GL_PROXY_TEXTURE_2D /;"	d
GL_PROXY_TEXTURE_2D_ARRAY	.\\include\\gl_core_3_3.h	/^		#define GL_PROXY_TEXTURE_2D_ARRAY /;"	d
GL_PROXY_TEXTURE_2D_MULTISAMPLE	.\\include\\gl_core_3_3.h	/^		#define GL_PROXY_TEXTURE_2D_MULTISAMPLE /;"	d
GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY	.\\include\\gl_core_3_3.h	/^		#define GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY /;"	d
GL_PROXY_TEXTURE_3D	.\\include\\gl_core_3_3.h	/^		#define GL_PROXY_TEXTURE_3D /;"	d
GL_PROXY_TEXTURE_CUBE_MAP	.\\include\\gl_core_3_3.h	/^		#define GL_PROXY_TEXTURE_CUBE_MAP /;"	d
GL_PROXY_TEXTURE_RECTANGLE	.\\include\\gl_core_3_3.h	/^		#define GL_PROXY_TEXTURE_RECTANGLE /;"	d
GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION	.\\include\\gl_core_3_3.h	/^		#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION /;"	d
GL_QUERY_BY_REGION_NO_WAIT	.\\include\\gl_core_3_3.h	/^		#define GL_QUERY_BY_REGION_NO_WAIT /;"	d
GL_QUERY_BY_REGION_WAIT	.\\include\\gl_core_3_3.h	/^		#define GL_QUERY_BY_REGION_WAIT /;"	d
GL_QUERY_COUNTER_BITS	.\\include\\gl_core_3_3.h	/^		#define GL_QUERY_COUNTER_BITS /;"	d
GL_QUERY_NO_WAIT	.\\include\\gl_core_3_3.h	/^		#define GL_QUERY_NO_WAIT /;"	d
GL_QUERY_RESULT	.\\include\\gl_core_3_3.h	/^		#define GL_QUERY_RESULT /;"	d
GL_QUERY_RESULT_AVAILABLE	.\\include\\gl_core_3_3.h	/^		#define GL_QUERY_RESULT_AVAILABLE /;"	d
GL_QUERY_WAIT	.\\include\\gl_core_3_3.h	/^		#define GL_QUERY_WAIT /;"	d
GL_R11F_G11F_B10F	.\\include\\gl_core_3_3.h	/^		#define GL_R11F_G11F_B10F /;"	d
GL_R16	.\\include\\gl_core_3_3.h	/^		#define GL_R16 /;"	d
GL_R16F	.\\include\\gl_core_3_3.h	/^		#define GL_R16F /;"	d
GL_R16I	.\\include\\gl_core_3_3.h	/^		#define GL_R16I /;"	d
GL_R16UI	.\\include\\gl_core_3_3.h	/^		#define GL_R16UI /;"	d
GL_R16_SNORM	.\\include\\gl_core_3_3.h	/^		#define GL_R16_SNORM /;"	d
GL_R32F	.\\include\\gl_core_3_3.h	/^		#define GL_R32F /;"	d
GL_R32I	.\\include\\gl_core_3_3.h	/^		#define GL_R32I /;"	d
GL_R32UI	.\\include\\gl_core_3_3.h	/^		#define GL_R32UI /;"	d
GL_R3_G3_B2	.\\include\\gl_core_3_3.h	/^		#define GL_R3_G3_B2 /;"	d
GL_R8	.\\include\\gl_core_3_3.h	/^		#define GL_R8 /;"	d
GL_R8I	.\\include\\gl_core_3_3.h	/^		#define GL_R8I /;"	d
GL_R8UI	.\\include\\gl_core_3_3.h	/^		#define GL_R8UI /;"	d
GL_R8_SNORM	.\\include\\gl_core_3_3.h	/^		#define GL_R8_SNORM /;"	d
GL_RASTERIZER_DISCARD	.\\include\\gl_core_3_3.h	/^		#define GL_RASTERIZER_DISCARD /;"	d
GL_READ_BUFFER	.\\include\\gl_core_3_3.h	/^		#define GL_READ_BUFFER /;"	d
GL_READ_FRAMEBUFFER	.\\include\\gl_core_3_3.h	/^		#define GL_READ_FRAMEBUFFER /;"	d
GL_READ_FRAMEBUFFER_BINDING	.\\include\\gl_core_3_3.h	/^		#define GL_READ_FRAMEBUFFER_BINDING /;"	d
GL_READ_ONLY	.\\include\\gl_core_3_3.h	/^		#define GL_READ_ONLY /;"	d
GL_READ_WRITE	.\\include\\gl_core_3_3.h	/^		#define GL_READ_WRITE /;"	d
GL_RED	.\\include\\gl_core_3_3.h	/^		#define GL_RED /;"	d
GL_RED_INTEGER	.\\include\\gl_core_3_3.h	/^		#define GL_RED_INTEGER /;"	d
GL_RENDERBUFFER	.\\include\\gl_core_3_3.h	/^		#define GL_RENDERBUFFER /;"	d
GL_RENDERBUFFER_ALPHA_SIZE	.\\include\\gl_core_3_3.h	/^		#define GL_RENDERBUFFER_ALPHA_SIZE /;"	d
GL_RENDERBUFFER_BINDING	.\\include\\gl_core_3_3.h	/^		#define GL_RENDERBUFFER_BINDING /;"	d
GL_RENDERBUFFER_BLUE_SIZE	.\\include\\gl_core_3_3.h	/^		#define GL_RENDERBUFFER_BLUE_SIZE /;"	d
GL_RENDERBUFFER_DEPTH_SIZE	.\\include\\gl_core_3_3.h	/^		#define GL_RENDERBUFFER_DEPTH_SIZE /;"	d
GL_RENDERBUFFER_GREEN_SIZE	.\\include\\gl_core_3_3.h	/^		#define GL_RENDERBUFFER_GREEN_SIZE /;"	d
GL_RENDERBUFFER_HEIGHT	.\\include\\gl_core_3_3.h	/^		#define GL_RENDERBUFFER_HEIGHT /;"	d
GL_RENDERBUFFER_INTERNAL_FORMAT	.\\include\\gl_core_3_3.h	/^		#define GL_RENDERBUFFER_INTERNAL_FORMAT /;"	d
GL_RENDERBUFFER_RED_SIZE	.\\include\\gl_core_3_3.h	/^		#define GL_RENDERBUFFER_RED_SIZE /;"	d
GL_RENDERBUFFER_SAMPLES	.\\include\\gl_core_3_3.h	/^		#define GL_RENDERBUFFER_SAMPLES /;"	d
GL_RENDERBUFFER_STENCIL_SIZE	.\\include\\gl_core_3_3.h	/^		#define GL_RENDERBUFFER_STENCIL_SIZE /;"	d
GL_RENDERBUFFER_WIDTH	.\\include\\gl_core_3_3.h	/^		#define GL_RENDERBUFFER_WIDTH /;"	d
GL_RENDERER	.\\include\\gl_core_3_3.h	/^		#define GL_RENDERER /;"	d
GL_REPEAT	.\\include\\gl_core_3_3.h	/^		#define GL_REPEAT /;"	d
GL_REPLACE	.\\include\\gl_core_3_3.h	/^		#define GL_REPLACE /;"	d
GL_RG	.\\include\\gl_core_3_3.h	/^		#define GL_RG /;"	d
GL_RG16	.\\include\\gl_core_3_3.h	/^		#define GL_RG16 /;"	d
GL_RG16F	.\\include\\gl_core_3_3.h	/^		#define GL_RG16F /;"	d
GL_RG16I	.\\include\\gl_core_3_3.h	/^		#define GL_RG16I /;"	d
GL_RG16UI	.\\include\\gl_core_3_3.h	/^		#define GL_RG16UI /;"	d
GL_RG16_SNORM	.\\include\\gl_core_3_3.h	/^		#define GL_RG16_SNORM /;"	d
GL_RG32F	.\\include\\gl_core_3_3.h	/^		#define GL_RG32F /;"	d
GL_RG32I	.\\include\\gl_core_3_3.h	/^		#define GL_RG32I /;"	d
GL_RG32UI	.\\include\\gl_core_3_3.h	/^		#define GL_RG32UI /;"	d
GL_RG8	.\\include\\gl_core_3_3.h	/^		#define GL_RG8 /;"	d
GL_RG8I	.\\include\\gl_core_3_3.h	/^		#define GL_RG8I /;"	d
GL_RG8UI	.\\include\\gl_core_3_3.h	/^		#define GL_RG8UI /;"	d
GL_RG8_SNORM	.\\include\\gl_core_3_3.h	/^		#define GL_RG8_SNORM /;"	d
GL_RGB	.\\include\\gl_core_3_3.h	/^		#define GL_RGB /;"	d
GL_RGB10	.\\include\\gl_core_3_3.h	/^		#define GL_RGB10 /;"	d
GL_RGB10_A2	.\\include\\gl_core_3_3.h	/^		#define GL_RGB10_A2 /;"	d
GL_RGB10_A2UI	.\\include\\gl_core_3_3.h	/^		#define GL_RGB10_A2UI /;"	d
GL_RGB12	.\\include\\gl_core_3_3.h	/^		#define GL_RGB12 /;"	d
GL_RGB16	.\\include\\gl_core_3_3.h	/^		#define GL_RGB16 /;"	d
GL_RGB16F	.\\include\\gl_core_3_3.h	/^		#define GL_RGB16F /;"	d
GL_RGB16I	.\\include\\gl_core_3_3.h	/^		#define GL_RGB16I /;"	d
GL_RGB16UI	.\\include\\gl_core_3_3.h	/^		#define GL_RGB16UI /;"	d
GL_RGB16_SNORM	.\\include\\gl_core_3_3.h	/^		#define GL_RGB16_SNORM /;"	d
GL_RGB32F	.\\include\\gl_core_3_3.h	/^		#define GL_RGB32F /;"	d
GL_RGB32I	.\\include\\gl_core_3_3.h	/^		#define GL_RGB32I /;"	d
GL_RGB32UI	.\\include\\gl_core_3_3.h	/^		#define GL_RGB32UI /;"	d
GL_RGB4	.\\include\\gl_core_3_3.h	/^		#define GL_RGB4 /;"	d
GL_RGB5	.\\include\\gl_core_3_3.h	/^		#define GL_RGB5 /;"	d
GL_RGB5_A1	.\\include\\gl_core_3_3.h	/^		#define GL_RGB5_A1 /;"	d
GL_RGB8	.\\include\\gl_core_3_3.h	/^		#define GL_RGB8 /;"	d
GL_RGB8I	.\\include\\gl_core_3_3.h	/^		#define GL_RGB8I /;"	d
GL_RGB8UI	.\\include\\gl_core_3_3.h	/^		#define GL_RGB8UI /;"	d
GL_RGB8_SNORM	.\\include\\gl_core_3_3.h	/^		#define GL_RGB8_SNORM /;"	d
GL_RGB9_E5	.\\include\\gl_core_3_3.h	/^		#define GL_RGB9_E5 /;"	d
GL_RGBA	.\\include\\gl_core_3_3.h	/^		#define GL_RGBA /;"	d
GL_RGBA12	.\\include\\gl_core_3_3.h	/^		#define GL_RGBA12 /;"	d
GL_RGBA16	.\\include\\gl_core_3_3.h	/^		#define GL_RGBA16 /;"	d
GL_RGBA16F	.\\include\\gl_core_3_3.h	/^		#define GL_RGBA16F /;"	d
GL_RGBA16I	.\\include\\gl_core_3_3.h	/^		#define GL_RGBA16I /;"	d
GL_RGBA16UI	.\\include\\gl_core_3_3.h	/^		#define GL_RGBA16UI /;"	d
GL_RGBA16_SNORM	.\\include\\gl_core_3_3.h	/^		#define GL_RGBA16_SNORM /;"	d
GL_RGBA2	.\\include\\gl_core_3_3.h	/^		#define GL_RGBA2 /;"	d
GL_RGBA32F	.\\include\\gl_core_3_3.h	/^		#define GL_RGBA32F /;"	d
GL_RGBA32I	.\\include\\gl_core_3_3.h	/^		#define GL_RGBA32I /;"	d
GL_RGBA32UI	.\\include\\gl_core_3_3.h	/^		#define GL_RGBA32UI /;"	d
GL_RGBA4	.\\include\\gl_core_3_3.h	/^		#define GL_RGBA4 /;"	d
GL_RGBA8	.\\include\\gl_core_3_3.h	/^		#define GL_RGBA8 /;"	d
GL_RGBA8I	.\\include\\gl_core_3_3.h	/^		#define GL_RGBA8I /;"	d
GL_RGBA8UI	.\\include\\gl_core_3_3.h	/^		#define GL_RGBA8UI /;"	d
GL_RGBA8_SNORM	.\\include\\gl_core_3_3.h	/^		#define GL_RGBA8_SNORM /;"	d
GL_RGBA_INTEGER	.\\include\\gl_core_3_3.h	/^		#define GL_RGBA_INTEGER /;"	d
GL_RGB_INTEGER	.\\include\\gl_core_3_3.h	/^		#define GL_RGB_INTEGER /;"	d
GL_RG_INTEGER	.\\include\\gl_core_3_3.h	/^		#define GL_RG_INTEGER /;"	d
GL_RIGHT	.\\include\\gl_core_3_3.h	/^		#define GL_RIGHT /;"	d
GL_SAMPLER_1D	.\\include\\gl_core_3_3.h	/^		#define GL_SAMPLER_1D /;"	d
GL_SAMPLER_1D_ARRAY	.\\include\\gl_core_3_3.h	/^		#define GL_SAMPLER_1D_ARRAY /;"	d
GL_SAMPLER_1D_ARRAY_SHADOW	.\\include\\gl_core_3_3.h	/^		#define GL_SAMPLER_1D_ARRAY_SHADOW /;"	d
GL_SAMPLER_1D_SHADOW	.\\include\\gl_core_3_3.h	/^		#define GL_SAMPLER_1D_SHADOW /;"	d
GL_SAMPLER_2D	.\\include\\gl_core_3_3.h	/^		#define GL_SAMPLER_2D /;"	d
GL_SAMPLER_2D_ARRAY	.\\include\\gl_core_3_3.h	/^		#define GL_SAMPLER_2D_ARRAY /;"	d
GL_SAMPLER_2D_ARRAY_SHADOW	.\\include\\gl_core_3_3.h	/^		#define GL_SAMPLER_2D_ARRAY_SHADOW /;"	d
GL_SAMPLER_2D_MULTISAMPLE	.\\include\\gl_core_3_3.h	/^		#define GL_SAMPLER_2D_MULTISAMPLE /;"	d
GL_SAMPLER_2D_MULTISAMPLE_ARRAY	.\\include\\gl_core_3_3.h	/^		#define GL_SAMPLER_2D_MULTISAMPLE_ARRAY /;"	d
GL_SAMPLER_2D_RECT	.\\include\\gl_core_3_3.h	/^		#define GL_SAMPLER_2D_RECT /;"	d
GL_SAMPLER_2D_RECT_SHADOW	.\\include\\gl_core_3_3.h	/^		#define GL_SAMPLER_2D_RECT_SHADOW /;"	d
GL_SAMPLER_2D_SHADOW	.\\include\\gl_core_3_3.h	/^		#define GL_SAMPLER_2D_SHADOW /;"	d
GL_SAMPLER_3D	.\\include\\gl_core_3_3.h	/^		#define GL_SAMPLER_3D /;"	d
GL_SAMPLER_BINDING	.\\include\\gl_core_3_3.h	/^		#define GL_SAMPLER_BINDING /;"	d
GL_SAMPLER_BUFFER	.\\include\\gl_core_3_3.h	/^		#define GL_SAMPLER_BUFFER /;"	d
GL_SAMPLER_CUBE	.\\include\\gl_core_3_3.h	/^		#define GL_SAMPLER_CUBE /;"	d
GL_SAMPLER_CUBE_SHADOW	.\\include\\gl_core_3_3.h	/^		#define GL_SAMPLER_CUBE_SHADOW /;"	d
GL_SAMPLES	.\\include\\gl_core_3_3.h	/^		#define GL_SAMPLES /;"	d
GL_SAMPLES_PASSED	.\\include\\gl_core_3_3.h	/^		#define GL_SAMPLES_PASSED /;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE	.\\include\\gl_core_3_3.h	/^		#define GL_SAMPLE_ALPHA_TO_COVERAGE /;"	d
GL_SAMPLE_ALPHA_TO_ONE	.\\include\\gl_core_3_3.h	/^		#define GL_SAMPLE_ALPHA_TO_ONE /;"	d
GL_SAMPLE_BUFFERS	.\\include\\gl_core_3_3.h	/^		#define GL_SAMPLE_BUFFERS /;"	d
GL_SAMPLE_COVERAGE	.\\include\\gl_core_3_3.h	/^		#define GL_SAMPLE_COVERAGE /;"	d
GL_SAMPLE_COVERAGE_INVERT	.\\include\\gl_core_3_3.h	/^		#define GL_SAMPLE_COVERAGE_INVERT /;"	d
GL_SAMPLE_COVERAGE_VALUE	.\\include\\gl_core_3_3.h	/^		#define GL_SAMPLE_COVERAGE_VALUE /;"	d
GL_SAMPLE_MASK	.\\include\\gl_core_3_3.h	/^		#define GL_SAMPLE_MASK /;"	d
GL_SAMPLE_MASK_VALUE	.\\include\\gl_core_3_3.h	/^		#define GL_SAMPLE_MASK_VALUE /;"	d
GL_SAMPLE_POSITION	.\\include\\gl_core_3_3.h	/^		#define GL_SAMPLE_POSITION /;"	d
GL_SCISSOR_BOX	.\\include\\gl_core_3_3.h	/^		#define GL_SCISSOR_BOX /;"	d
GL_SCISSOR_TEST	.\\include\\gl_core_3_3.h	/^		#define GL_SCISSOR_TEST /;"	d
GL_SEPARATE_ATTRIBS	.\\include\\gl_core_3_3.h	/^		#define GL_SEPARATE_ATTRIBS /;"	d
GL_SET	.\\include\\gl_core_3_3.h	/^		#define GL_SET /;"	d
GL_SHADER_SOURCE_LENGTH	.\\include\\gl_core_3_3.h	/^		#define GL_SHADER_SOURCE_LENGTH /;"	d
GL_SHADER_TYPE	.\\include\\gl_core_3_3.h	/^		#define GL_SHADER_TYPE /;"	d
GL_SHADING_LANGUAGE_VERSION	.\\include\\gl_core_3_3.h	/^		#define GL_SHADING_LANGUAGE_VERSION /;"	d
GL_SHORT	.\\include\\gl_core_3_3.h	/^		#define GL_SHORT /;"	d
GL_SIGNALED	.\\include\\gl_core_3_3.h	/^		#define GL_SIGNALED /;"	d
GL_SIGNED_NORMALIZED	.\\include\\gl_core_3_3.h	/^		#define GL_SIGNED_NORMALIZED /;"	d
GL_SLUMINANCE8_ALPHA8_EXT	.\\include\\gl_core_3_3.h	/^		#define GL_SLUMINANCE8_ALPHA8_EXT /;"	d
GL_SLUMINANCE8_EXT	.\\include\\gl_core_3_3.h	/^		#define GL_SLUMINANCE8_EXT /;"	d
GL_SLUMINANCE_ALPHA_EXT	.\\include\\gl_core_3_3.h	/^		#define GL_SLUMINANCE_ALPHA_EXT /;"	d
GL_SLUMINANCE_EXT	.\\include\\gl_core_3_3.h	/^		#define GL_SLUMINANCE_EXT /;"	d
GL_SMOOTH_LINE_WIDTH_GRANULARITY	.\\include\\gl_core_3_3.h	/^		#define GL_SMOOTH_LINE_WIDTH_GRANULARITY /;"	d
GL_SMOOTH_LINE_WIDTH_RANGE	.\\include\\gl_core_3_3.h	/^		#define GL_SMOOTH_LINE_WIDTH_RANGE /;"	d
GL_SMOOTH_POINT_SIZE_GRANULARITY	.\\include\\gl_core_3_3.h	/^		#define GL_SMOOTH_POINT_SIZE_GRANULARITY /;"	d
GL_SMOOTH_POINT_SIZE_RANGE	.\\include\\gl_core_3_3.h	/^		#define GL_SMOOTH_POINT_SIZE_RANGE /;"	d
GL_SRC1_ALPHA	.\\include\\gl_core_3_3.h	/^		#define GL_SRC1_ALPHA /;"	d
GL_SRC1_COLOR	.\\include\\gl_core_3_3.h	/^		#define GL_SRC1_COLOR /;"	d
GL_SRC_ALPHA	.\\include\\gl_core_3_3.h	/^		#define GL_SRC_ALPHA /;"	d
GL_SRC_ALPHA_SATURATE	.\\include\\gl_core_3_3.h	/^		#define GL_SRC_ALPHA_SATURATE /;"	d
GL_SRC_COLOR	.\\include\\gl_core_3_3.h	/^		#define GL_SRC_COLOR /;"	d
GL_SRGB	.\\include\\gl_core_3_3.h	/^		#define GL_SRGB /;"	d
GL_SRGB8	.\\include\\gl_core_3_3.h	/^		#define GL_SRGB8 /;"	d
GL_SRGB8_ALPHA8	.\\include\\gl_core_3_3.h	/^		#define GL_SRGB8_ALPHA8 /;"	d
GL_SRGB8_ALPHA8_EXT	.\\include\\gl_core_3_3.h	/^		#define GL_SRGB8_ALPHA8_EXT /;"	d
GL_SRGB8_EXT	.\\include\\gl_core_3_3.h	/^		#define GL_SRGB8_EXT /;"	d
GL_SRGB_ALPHA	.\\include\\gl_core_3_3.h	/^		#define GL_SRGB_ALPHA /;"	d
GL_SRGB_ALPHA_EXT	.\\include\\gl_core_3_3.h	/^		#define GL_SRGB_ALPHA_EXT /;"	d
GL_SRGB_EXT	.\\include\\gl_core_3_3.h	/^		#define GL_SRGB_EXT /;"	d
GL_STATIC_COPY	.\\include\\gl_core_3_3.h	/^		#define GL_STATIC_COPY /;"	d
GL_STATIC_DRAW	.\\include\\gl_core_3_3.h	/^		#define GL_STATIC_DRAW /;"	d
GL_STATIC_READ	.\\include\\gl_core_3_3.h	/^		#define GL_STATIC_READ /;"	d
GL_STENCIL	.\\include\\gl_core_3_3.h	/^		#define GL_STENCIL /;"	d
GL_STENCIL_ATTACHMENT	.\\include\\gl_core_3_3.h	/^		#define GL_STENCIL_ATTACHMENT /;"	d
GL_STENCIL_BACK_FAIL	.\\include\\gl_core_3_3.h	/^		#define GL_STENCIL_BACK_FAIL /;"	d
GL_STENCIL_BACK_FUNC	.\\include\\gl_core_3_3.h	/^		#define GL_STENCIL_BACK_FUNC /;"	d
GL_STENCIL_BACK_PASS_DEPTH_FAIL	.\\include\\gl_core_3_3.h	/^		#define GL_STENCIL_BACK_PASS_DEPTH_FAIL /;"	d
GL_STENCIL_BACK_PASS_DEPTH_PASS	.\\include\\gl_core_3_3.h	/^		#define GL_STENCIL_BACK_PASS_DEPTH_PASS /;"	d
GL_STENCIL_BACK_REF	.\\include\\gl_core_3_3.h	/^		#define GL_STENCIL_BACK_REF /;"	d
GL_STENCIL_BACK_VALUE_MASK	.\\include\\gl_core_3_3.h	/^		#define GL_STENCIL_BACK_VALUE_MASK /;"	d
GL_STENCIL_BACK_WRITEMASK	.\\include\\gl_core_3_3.h	/^		#define GL_STENCIL_BACK_WRITEMASK /;"	d
GL_STENCIL_BUFFER_BIT	.\\include\\gl_core_3_3.h	/^		#define GL_STENCIL_BUFFER_BIT /;"	d
GL_STENCIL_CLEAR_VALUE	.\\include\\gl_core_3_3.h	/^		#define GL_STENCIL_CLEAR_VALUE /;"	d
GL_STENCIL_FAIL	.\\include\\gl_core_3_3.h	/^		#define GL_STENCIL_FAIL /;"	d
GL_STENCIL_FUNC	.\\include\\gl_core_3_3.h	/^		#define GL_STENCIL_FUNC /;"	d
GL_STENCIL_INDEX	.\\include\\gl_core_3_3.h	/^		#define GL_STENCIL_INDEX /;"	d
GL_STENCIL_INDEX1	.\\include\\gl_core_3_3.h	/^		#define GL_STENCIL_INDEX1 /;"	d
GL_STENCIL_INDEX16	.\\include\\gl_core_3_3.h	/^		#define GL_STENCIL_INDEX16 /;"	d
GL_STENCIL_INDEX4	.\\include\\gl_core_3_3.h	/^		#define GL_STENCIL_INDEX4 /;"	d
GL_STENCIL_INDEX8	.\\include\\gl_core_3_3.h	/^		#define GL_STENCIL_INDEX8 /;"	d
GL_STENCIL_PASS_DEPTH_FAIL	.\\include\\gl_core_3_3.h	/^		#define GL_STENCIL_PASS_DEPTH_FAIL /;"	d
GL_STENCIL_PASS_DEPTH_PASS	.\\include\\gl_core_3_3.h	/^		#define GL_STENCIL_PASS_DEPTH_PASS /;"	d
GL_STENCIL_REF	.\\include\\gl_core_3_3.h	/^		#define GL_STENCIL_REF /;"	d
GL_STENCIL_TEST	.\\include\\gl_core_3_3.h	/^		#define GL_STENCIL_TEST /;"	d
GL_STENCIL_VALUE_MASK	.\\include\\gl_core_3_3.h	/^		#define GL_STENCIL_VALUE_MASK /;"	d
GL_STENCIL_WRITEMASK	.\\include\\gl_core_3_3.h	/^		#define GL_STENCIL_WRITEMASK /;"	d
GL_STEREO	.\\include\\gl_core_3_3.h	/^		#define GL_STEREO /;"	d
GL_STREAM_COPY	.\\include\\gl_core_3_3.h	/^		#define GL_STREAM_COPY /;"	d
GL_STREAM_DRAW	.\\include\\gl_core_3_3.h	/^		#define GL_STREAM_DRAW /;"	d
GL_STREAM_READ	.\\include\\gl_core_3_3.h	/^		#define GL_STREAM_READ /;"	d
GL_SUBPIXEL_BITS	.\\include\\gl_core_3_3.h	/^		#define GL_SUBPIXEL_BITS /;"	d
GL_SYNC_CONDITION	.\\include\\gl_core_3_3.h	/^		#define GL_SYNC_CONDITION /;"	d
GL_SYNC_FENCE	.\\include\\gl_core_3_3.h	/^		#define GL_SYNC_FENCE /;"	d
GL_SYNC_FLAGS	.\\include\\gl_core_3_3.h	/^		#define GL_SYNC_FLAGS /;"	d
GL_SYNC_FLUSH_COMMANDS_BIT	.\\include\\gl_core_3_3.h	/^		#define GL_SYNC_FLUSH_COMMANDS_BIT /;"	d
GL_SYNC_GPU_COMMANDS_COMPLETE	.\\include\\gl_core_3_3.h	/^		#define GL_SYNC_GPU_COMMANDS_COMPLETE /;"	d
GL_SYNC_STATUS	.\\include\\gl_core_3_3.h	/^		#define GL_SYNC_STATUS /;"	d
GL_TEXTURE	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE /;"	d
GL_TEXTURE0	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE0 /;"	d
GL_TEXTURE1	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE1 /;"	d
GL_TEXTURE10	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE10 /;"	d
GL_TEXTURE11	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE11 /;"	d
GL_TEXTURE12	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE12 /;"	d
GL_TEXTURE13	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE13 /;"	d
GL_TEXTURE14	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE14 /;"	d
GL_TEXTURE15	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE15 /;"	d
GL_TEXTURE16	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE16 /;"	d
GL_TEXTURE17	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE17 /;"	d
GL_TEXTURE18	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE18 /;"	d
GL_TEXTURE19	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE19 /;"	d
GL_TEXTURE2	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE2 /;"	d
GL_TEXTURE20	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE20 /;"	d
GL_TEXTURE21	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE21 /;"	d
GL_TEXTURE22	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE22 /;"	d
GL_TEXTURE23	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE23 /;"	d
GL_TEXTURE24	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE24 /;"	d
GL_TEXTURE25	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE25 /;"	d
GL_TEXTURE26	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE26 /;"	d
GL_TEXTURE27	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE27 /;"	d
GL_TEXTURE28	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE28 /;"	d
GL_TEXTURE29	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE29 /;"	d
GL_TEXTURE3	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE3 /;"	d
GL_TEXTURE30	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE30 /;"	d
GL_TEXTURE31	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE31 /;"	d
GL_TEXTURE4	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE4 /;"	d
GL_TEXTURE5	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE5 /;"	d
GL_TEXTURE6	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE6 /;"	d
GL_TEXTURE7	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE7 /;"	d
GL_TEXTURE8	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE8 /;"	d
GL_TEXTURE9	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE9 /;"	d
GL_TEXTURE_1D	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_1D /;"	d
GL_TEXTURE_1D_ARRAY	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_1D_ARRAY /;"	d
GL_TEXTURE_2D	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_2D /;"	d
GL_TEXTURE_2D_ARRAY	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_2D_ARRAY /;"	d
GL_TEXTURE_2D_MULTISAMPLE	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_2D_MULTISAMPLE /;"	d
GL_TEXTURE_2D_MULTISAMPLE_ARRAY	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_2D_MULTISAMPLE_ARRAY /;"	d
GL_TEXTURE_3D	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_3D /;"	d
GL_TEXTURE_ALPHA_SIZE	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_ALPHA_SIZE /;"	d
GL_TEXTURE_ALPHA_TYPE	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_ALPHA_TYPE /;"	d
GL_TEXTURE_BASE_LEVEL	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_BASE_LEVEL /;"	d
GL_TEXTURE_BINDING_1D	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_BINDING_1D /;"	d
GL_TEXTURE_BINDING_1D_ARRAY	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_BINDING_1D_ARRAY /;"	d
GL_TEXTURE_BINDING_2D	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_BINDING_2D /;"	d
GL_TEXTURE_BINDING_2D_ARRAY	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_BINDING_2D_ARRAY /;"	d
GL_TEXTURE_BINDING_2D_MULTISAMPLE	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_BINDING_2D_MULTISAMPLE /;"	d
GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY /;"	d
GL_TEXTURE_BINDING_3D	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_BINDING_3D /;"	d
GL_TEXTURE_BINDING_BUFFER	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_BINDING_BUFFER /;"	d
GL_TEXTURE_BINDING_CUBE_MAP	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_BINDING_CUBE_MAP /;"	d
GL_TEXTURE_BINDING_RECTANGLE	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_BINDING_RECTANGLE /;"	d
GL_TEXTURE_BLUE_SIZE	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_BLUE_SIZE /;"	d
GL_TEXTURE_BLUE_TYPE	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_BLUE_TYPE /;"	d
GL_TEXTURE_BORDER_COLOR	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_BORDER_COLOR /;"	d
GL_TEXTURE_BUFFER	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_BUFFER /;"	d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING /;"	d
GL_TEXTURE_COMPARE_FUNC	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_COMPARE_FUNC /;"	d
GL_TEXTURE_COMPARE_MODE	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_COMPARE_MODE /;"	d
GL_TEXTURE_COMPRESSED	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_COMPRESSED /;"	d
GL_TEXTURE_COMPRESSED_IMAGE_SIZE	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE /;"	d
GL_TEXTURE_COMPRESSION_HINT	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_COMPRESSION_HINT /;"	d
GL_TEXTURE_CUBE_MAP	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_CUBE_MAP /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_CUBE_MAP_POSITIVE_X /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z /;"	d
GL_TEXTURE_CUBE_MAP_SEAMLESS	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_CUBE_MAP_SEAMLESS /;"	d
GL_TEXTURE_DEPTH	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_DEPTH /;"	d
GL_TEXTURE_DEPTH_SIZE	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_DEPTH_SIZE /;"	d
GL_TEXTURE_DEPTH_TYPE	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_DEPTH_TYPE /;"	d
GL_TEXTURE_FIXED_SAMPLE_LOCATIONS	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_FIXED_SAMPLE_LOCATIONS /;"	d
GL_TEXTURE_GREEN_SIZE	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_GREEN_SIZE /;"	d
GL_TEXTURE_GREEN_TYPE	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_GREEN_TYPE /;"	d
GL_TEXTURE_HEIGHT	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_HEIGHT /;"	d
GL_TEXTURE_INTERNAL_FORMAT	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_INTERNAL_FORMAT /;"	d
GL_TEXTURE_LOD_BIAS	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_LOD_BIAS /;"	d
GL_TEXTURE_MAG_FILTER	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_MAG_FILTER /;"	d
GL_TEXTURE_MAX_ANISOTROPY_EXT	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_MAX_ANISOTROPY_EXT /;"	d
GL_TEXTURE_MAX_LEVEL	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_MAX_LEVEL /;"	d
GL_TEXTURE_MAX_LOD	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_MAX_LOD /;"	d
GL_TEXTURE_MIN_FILTER	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_MIN_FILTER /;"	d
GL_TEXTURE_MIN_LOD	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_MIN_LOD /;"	d
GL_TEXTURE_RECTANGLE	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_RECTANGLE /;"	d
GL_TEXTURE_RED_SIZE	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_RED_SIZE /;"	d
GL_TEXTURE_RED_TYPE	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_RED_TYPE /;"	d
GL_TEXTURE_SAMPLES	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_SAMPLES /;"	d
GL_TEXTURE_SHARED_SIZE	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_SHARED_SIZE /;"	d
GL_TEXTURE_STENCIL_SIZE	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_STENCIL_SIZE /;"	d
GL_TEXTURE_SWIZZLE_A	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_SWIZZLE_A /;"	d
GL_TEXTURE_SWIZZLE_B	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_SWIZZLE_B /;"	d
GL_TEXTURE_SWIZZLE_G	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_SWIZZLE_G /;"	d
GL_TEXTURE_SWIZZLE_R	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_SWIZZLE_R /;"	d
GL_TEXTURE_SWIZZLE_RGBA	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_SWIZZLE_RGBA /;"	d
GL_TEXTURE_WIDTH	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_WIDTH /;"	d
GL_TEXTURE_WRAP_R	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_WRAP_R /;"	d
GL_TEXTURE_WRAP_S	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_WRAP_S /;"	d
GL_TEXTURE_WRAP_T	.\\include\\gl_core_3_3.h	/^		#define GL_TEXTURE_WRAP_T /;"	d
GL_TIMEOUT_EXPIRED	.\\include\\gl_core_3_3.h	/^		#define GL_TIMEOUT_EXPIRED /;"	d
GL_TIMEOUT_IGNORED	.\\include\\gl_core_3_3.h	/^		#define GL_TIMEOUT_IGNORED /;"	d
GL_TIMESTAMP	.\\include\\gl_core_3_3.h	/^		#define GL_TIMESTAMP /;"	d
GL_TIME_ELAPSED	.\\include\\gl_core_3_3.h	/^		#define GL_TIME_ELAPSED /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER	.\\include\\gl_core_3_3.h	/^		#define GL_TRANSFORM_FEEDBACK_BUFFER /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING	.\\include\\gl_core_3_3.h	/^		#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_MODE	.\\include\\gl_core_3_3.h	/^		#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE	.\\include\\gl_core_3_3.h	/^		#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_START	.\\include\\gl_core_3_3.h	/^		#define GL_TRANSFORM_FEEDBACK_BUFFER_START /;"	d
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN	.\\include\\gl_core_3_3.h	/^		#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN /;"	d
GL_TRANSFORM_FEEDBACK_VARYINGS	.\\include\\gl_core_3_3.h	/^		#define GL_TRANSFORM_FEEDBACK_VARYINGS /;"	d
GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH	.\\include\\gl_core_3_3.h	/^		#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH /;"	d
GL_TRIANGLES	.\\include\\gl_core_3_3.h	/^		#define GL_TRIANGLES /;"	d
GL_TRIANGLES_ADJACENCY	.\\include\\gl_core_3_3.h	/^		#define GL_TRIANGLES_ADJACENCY /;"	d
GL_TRIANGLE_FAN	.\\include\\gl_core_3_3.h	/^		#define GL_TRIANGLE_FAN /;"	d
GL_TRIANGLE_STRIP	.\\include\\gl_core_3_3.h	/^		#define GL_TRIANGLE_STRIP /;"	d
GL_TRIANGLE_STRIP_ADJACENCY	.\\include\\gl_core_3_3.h	/^		#define GL_TRIANGLE_STRIP_ADJACENCY /;"	d
GL_TRUE	.\\include\\gl_core_3_3.h	/^		#define GL_TRUE /;"	d
GL_UNIFORM_ARRAY_STRIDE	.\\include\\gl_core_3_3.h	/^		#define GL_UNIFORM_ARRAY_STRIDE /;"	d
GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS	.\\include\\gl_core_3_3.h	/^		#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS /;"	d
GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES	.\\include\\gl_core_3_3.h	/^		#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES /;"	d
GL_UNIFORM_BLOCK_BINDING	.\\include\\gl_core_3_3.h	/^		#define GL_UNIFORM_BLOCK_BINDING /;"	d
GL_UNIFORM_BLOCK_DATA_SIZE	.\\include\\gl_core_3_3.h	/^		#define GL_UNIFORM_BLOCK_DATA_SIZE /;"	d
GL_UNIFORM_BLOCK_INDEX	.\\include\\gl_core_3_3.h	/^		#define GL_UNIFORM_BLOCK_INDEX /;"	d
GL_UNIFORM_BLOCK_NAME_LENGTH	.\\include\\gl_core_3_3.h	/^		#define GL_UNIFORM_BLOCK_NAME_LENGTH /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER	.\\include\\gl_core_3_3.h	/^		#define GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER	.\\include\\gl_core_3_3.h	/^		#define GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER	.\\include\\gl_core_3_3.h	/^		#define GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER /;"	d
GL_UNIFORM_BUFFER	.\\include\\gl_core_3_3.h	/^		#define GL_UNIFORM_BUFFER /;"	d
GL_UNIFORM_BUFFER_BINDING	.\\include\\gl_core_3_3.h	/^		#define GL_UNIFORM_BUFFER_BINDING /;"	d
GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT	.\\include\\gl_core_3_3.h	/^		#define GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT /;"	d
GL_UNIFORM_BUFFER_SIZE	.\\include\\gl_core_3_3.h	/^		#define GL_UNIFORM_BUFFER_SIZE /;"	d
GL_UNIFORM_BUFFER_START	.\\include\\gl_core_3_3.h	/^		#define GL_UNIFORM_BUFFER_START /;"	d
GL_UNIFORM_IS_ROW_MAJOR	.\\include\\gl_core_3_3.h	/^		#define GL_UNIFORM_IS_ROW_MAJOR /;"	d
GL_UNIFORM_MATRIX_STRIDE	.\\include\\gl_core_3_3.h	/^		#define GL_UNIFORM_MATRIX_STRIDE /;"	d
GL_UNIFORM_NAME_LENGTH	.\\include\\gl_core_3_3.h	/^		#define GL_UNIFORM_NAME_LENGTH /;"	d
GL_UNIFORM_OFFSET	.\\include\\gl_core_3_3.h	/^		#define GL_UNIFORM_OFFSET /;"	d
GL_UNIFORM_SIZE	.\\include\\gl_core_3_3.h	/^		#define GL_UNIFORM_SIZE /;"	d
GL_UNIFORM_TYPE	.\\include\\gl_core_3_3.h	/^		#define GL_UNIFORM_TYPE /;"	d
GL_UNPACK_ALIGNMENT	.\\include\\gl_core_3_3.h	/^		#define GL_UNPACK_ALIGNMENT /;"	d
GL_UNPACK_IMAGE_HEIGHT	.\\include\\gl_core_3_3.h	/^		#define GL_UNPACK_IMAGE_HEIGHT /;"	d
GL_UNPACK_LSB_FIRST	.\\include\\gl_core_3_3.h	/^		#define GL_UNPACK_LSB_FIRST /;"	d
GL_UNPACK_ROW_LENGTH	.\\include\\gl_core_3_3.h	/^		#define GL_UNPACK_ROW_LENGTH /;"	d
GL_UNPACK_SKIP_IMAGES	.\\include\\gl_core_3_3.h	/^		#define GL_UNPACK_SKIP_IMAGES /;"	d
GL_UNPACK_SKIP_PIXELS	.\\include\\gl_core_3_3.h	/^		#define GL_UNPACK_SKIP_PIXELS /;"	d
GL_UNPACK_SKIP_ROWS	.\\include\\gl_core_3_3.h	/^		#define GL_UNPACK_SKIP_ROWS /;"	d
GL_UNPACK_SWAP_BYTES	.\\include\\gl_core_3_3.h	/^		#define GL_UNPACK_SWAP_BYTES /;"	d
GL_UNSIGNALED	.\\include\\gl_core_3_3.h	/^		#define GL_UNSIGNALED /;"	d
GL_UNSIGNED_BYTE	.\\include\\gl_core_3_3.h	/^		#define GL_UNSIGNED_BYTE /;"	d
GL_UNSIGNED_BYTE_2_3_3_REV	.\\include\\gl_core_3_3.h	/^		#define GL_UNSIGNED_BYTE_2_3_3_REV /;"	d
GL_UNSIGNED_BYTE_3_3_2	.\\include\\gl_core_3_3.h	/^		#define GL_UNSIGNED_BYTE_3_3_2 /;"	d
GL_UNSIGNED_INT	.\\include\\gl_core_3_3.h	/^		#define GL_UNSIGNED_INT /;"	d
GL_UNSIGNED_INT_10F_11F_11F_REV	.\\include\\gl_core_3_3.h	/^		#define GL_UNSIGNED_INT_10F_11F_11F_REV /;"	d
GL_UNSIGNED_INT_10_10_10_2	.\\include\\gl_core_3_3.h	/^		#define GL_UNSIGNED_INT_10_10_10_2 /;"	d
GL_UNSIGNED_INT_24_8	.\\include\\gl_core_3_3.h	/^		#define GL_UNSIGNED_INT_24_8 /;"	d
GL_UNSIGNED_INT_2_10_10_10_REV	.\\include\\gl_core_3_3.h	/^		#define GL_UNSIGNED_INT_2_10_10_10_REV /;"	d
GL_UNSIGNED_INT_5_9_9_9_REV	.\\include\\gl_core_3_3.h	/^		#define GL_UNSIGNED_INT_5_9_9_9_REV /;"	d
GL_UNSIGNED_INT_8_8_8_8	.\\include\\gl_core_3_3.h	/^		#define GL_UNSIGNED_INT_8_8_8_8 /;"	d
GL_UNSIGNED_INT_8_8_8_8_REV	.\\include\\gl_core_3_3.h	/^		#define GL_UNSIGNED_INT_8_8_8_8_REV /;"	d
GL_UNSIGNED_INT_SAMPLER_1D	.\\include\\gl_core_3_3.h	/^		#define GL_UNSIGNED_INT_SAMPLER_1D /;"	d
GL_UNSIGNED_INT_SAMPLER_1D_ARRAY	.\\include\\gl_core_3_3.h	/^		#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY /;"	d
GL_UNSIGNED_INT_SAMPLER_2D	.\\include\\gl_core_3_3.h	/^		#define GL_UNSIGNED_INT_SAMPLER_2D /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_ARRAY	.\\include\\gl_core_3_3.h	/^		#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE	.\\include\\gl_core_3_3.h	/^		#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY	.\\include\\gl_core_3_3.h	/^		#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_RECT	.\\include\\gl_core_3_3.h	/^		#define GL_UNSIGNED_INT_SAMPLER_2D_RECT /;"	d
GL_UNSIGNED_INT_SAMPLER_3D	.\\include\\gl_core_3_3.h	/^		#define GL_UNSIGNED_INT_SAMPLER_3D /;"	d
GL_UNSIGNED_INT_SAMPLER_BUFFER	.\\include\\gl_core_3_3.h	/^		#define GL_UNSIGNED_INT_SAMPLER_BUFFER /;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE	.\\include\\gl_core_3_3.h	/^		#define GL_UNSIGNED_INT_SAMPLER_CUBE /;"	d
GL_UNSIGNED_INT_VEC2	.\\include\\gl_core_3_3.h	/^		#define GL_UNSIGNED_INT_VEC2 /;"	d
GL_UNSIGNED_INT_VEC3	.\\include\\gl_core_3_3.h	/^		#define GL_UNSIGNED_INT_VEC3 /;"	d
GL_UNSIGNED_INT_VEC4	.\\include\\gl_core_3_3.h	/^		#define GL_UNSIGNED_INT_VEC4 /;"	d
GL_UNSIGNED_NORMALIZED	.\\include\\gl_core_3_3.h	/^		#define GL_UNSIGNED_NORMALIZED /;"	d
GL_UNSIGNED_SHORT	.\\include\\gl_core_3_3.h	/^		#define GL_UNSIGNED_SHORT /;"	d
GL_UNSIGNED_SHORT_1_5_5_5_REV	.\\include\\gl_core_3_3.h	/^		#define GL_UNSIGNED_SHORT_1_5_5_5_REV /;"	d
GL_UNSIGNED_SHORT_4_4_4_4	.\\include\\gl_core_3_3.h	/^		#define GL_UNSIGNED_SHORT_4_4_4_4 /;"	d
GL_UNSIGNED_SHORT_4_4_4_4_REV	.\\include\\gl_core_3_3.h	/^		#define GL_UNSIGNED_SHORT_4_4_4_4_REV /;"	d
GL_UNSIGNED_SHORT_5_5_5_1	.\\include\\gl_core_3_3.h	/^		#define GL_UNSIGNED_SHORT_5_5_5_1 /;"	d
GL_UNSIGNED_SHORT_5_6_5	.\\include\\gl_core_3_3.h	/^		#define GL_UNSIGNED_SHORT_5_6_5 /;"	d
GL_UNSIGNED_SHORT_5_6_5_REV	.\\include\\gl_core_3_3.h	/^		#define GL_UNSIGNED_SHORT_5_6_5_REV /;"	d
GL_UPPER_LEFT	.\\include\\gl_core_3_3.h	/^		#define GL_UPPER_LEFT /;"	d
GL_VALIDATE_STATUS	.\\include\\gl_core_3_3.h	/^		#define GL_VALIDATE_STATUS /;"	d
GL_VENDOR	.\\include\\gl_core_3_3.h	/^		#define GL_VENDOR /;"	d
GL_VERSION	.\\include\\gl_core_3_3.h	/^		#define GL_VERSION /;"	d
GL_VERTEX_ARRAY_BINDING	.\\include\\gl_core_3_3.h	/^		#define GL_VERTEX_ARRAY_BINDING /;"	d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING	.\\include\\gl_core_3_3.h	/^		#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING /;"	d
GL_VERTEX_ATTRIB_ARRAY_DIVISOR	.\\include\\gl_core_3_3.h	/^		#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR /;"	d
GL_VERTEX_ATTRIB_ARRAY_ENABLED	.\\include\\gl_core_3_3.h	/^		#define GL_VERTEX_ATTRIB_ARRAY_ENABLED /;"	d
GL_VERTEX_ATTRIB_ARRAY_INTEGER	.\\include\\gl_core_3_3.h	/^		#define GL_VERTEX_ATTRIB_ARRAY_INTEGER /;"	d
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED	.\\include\\gl_core_3_3.h	/^		#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED /;"	d
GL_VERTEX_ATTRIB_ARRAY_POINTER	.\\include\\gl_core_3_3.h	/^		#define GL_VERTEX_ATTRIB_ARRAY_POINTER /;"	d
GL_VERTEX_ATTRIB_ARRAY_SIZE	.\\include\\gl_core_3_3.h	/^		#define GL_VERTEX_ATTRIB_ARRAY_SIZE /;"	d
GL_VERTEX_ATTRIB_ARRAY_STRIDE	.\\include\\gl_core_3_3.h	/^		#define GL_VERTEX_ATTRIB_ARRAY_STRIDE /;"	d
GL_VERTEX_ATTRIB_ARRAY_TYPE	.\\include\\gl_core_3_3.h	/^		#define GL_VERTEX_ATTRIB_ARRAY_TYPE /;"	d
GL_VERTEX_PROGRAM_POINT_SIZE	.\\include\\gl_core_3_3.h	/^		#define GL_VERTEX_PROGRAM_POINT_SIZE /;"	d
GL_VERTEX_SHADER	.\\include\\gl_core_3_3.h	/^		#define GL_VERTEX_SHADER /;"	d
GL_VIEWPORT	.\\include\\gl_core_3_3.h	/^		#define GL_VIEWPORT /;"	d
GL_WAIT_FAILED	.\\include\\gl_core_3_3.h	/^		#define GL_WAIT_FAILED /;"	d
GL_WRITE_ONLY	.\\include\\gl_core_3_3.h	/^		#define GL_WRITE_ONLY /;"	d
GL_XOR	.\\include\\gl_core_3_3.h	/^		#define GL_XOR /;"	d
GL_ZERO	.\\include\\gl_core_3_3.h	/^		#define GL_ZERO /;"	d
GLbitfield	.\\include\\gl_core_3_3.h	/^	typedef unsigned int GLbitfield;$/;"	t	typeref:typename:unsigned int
GLboolean	.\\include\\gl_core_3_3.h	/^	typedef unsigned char GLboolean;$/;"	t	typeref:typename:unsigned char
GLbyte	.\\include\\gl_core_3_3.h	/^	typedef signed char GLbyte;$/;"	t	typeref:typename:signed char
GLchar	.\\include\\gl_core_3_3.h	/^	typedef char GLchar;$/;"	t	typeref:typename:char
GLcharARB	.\\include\\gl_core_3_3.h	/^	typedef char GLcharARB;$/;"	t	typeref:typename:char
GLclampd	.\\include\\gl_core_3_3.h	/^	typedef double GLclampd;$/;"	t	typeref:typename:double
GLclampf	.\\include\\gl_core_3_3.h	/^	typedef float GLclampf;$/;"	t	typeref:typename:float
GLdouble	.\\include\\gl_core_3_3.h	/^	typedef double GLdouble;$/;"	t	typeref:typename:double
GLenum	.\\include\\gl_core_3_3.h	/^	typedef unsigned int GLenum;$/;"	t	typeref:typename:unsigned int
GLfixed	.\\include\\gl_core_3_3.h	/^		typedef GLint GLfixed;$/;"	t	typeref:typename:GLint
GLfloat	.\\include\\gl_core_3_3.h	/^	typedef float GLfloat;$/;"	t	typeref:typename:float
GLhalf	.\\include\\gl_core_3_3.h	/^		typedef unsigned short GLhalf;$/;"	t	typeref:typename:unsigned short
GLhalfARB	.\\include\\gl_core_3_3.h	/^		typedef unsigned short GLhalfARB;$/;"	t	typeref:typename:unsigned short
GLhalfNV	.\\include\\gl_core_3_3.h	/^		typedef unsigned short GLhalfNV;$/;"	t	typeref:typename:unsigned short
GLhandleARB	.\\include\\gl_core_3_3.h	/^typedef unsigned int GLhandleARB;$/;"	t	typeref:typename:unsigned int
GLhandleARB	.\\include\\gl_core_3_3.h	/^typedef void *GLhandleARB;$/;"	t	typeref:typename:void *
GLint	.\\include\\gl_core_3_3.h	/^	typedef int GLint;$/;"	t	typeref:typename:int
GLint64	.\\include\\gl_core_3_3.h	/^		typedef int64_t GLint64;$/;"	t	typeref:typename:int64_t
GLint64EXT	.\\include\\gl_core_3_3.h	/^		typedef int64_t GLint64EXT;$/;"	t	typeref:typename:int64_t
GLintptr	.\\include\\gl_core_3_3.h	/^		typedef ptrdiff_t GLintptr;$/;"	t	typeref:typename:ptrdiff_t
GLintptrARB	.\\include\\gl_core_3_3.h	/^		typedef ptrdiff_t GLintptrARB;$/;"	t	typeref:typename:ptrdiff_t
GLshort	.\\include\\gl_core_3_3.h	/^	typedef short GLshort;$/;"	t	typeref:typename:short
GLsizei	.\\include\\gl_core_3_3.h	/^	typedef int GLsizei;$/;"	t	typeref:typename:int
GLsizeiptr	.\\include\\gl_core_3_3.h	/^		typedef ptrdiff_t GLsizeiptr;$/;"	t	typeref:typename:ptrdiff_t
GLsizeiptrARB	.\\include\\gl_core_3_3.h	/^		typedef ptrdiff_t GLsizeiptrARB;$/;"	t	typeref:typename:ptrdiff_t
GLsync	.\\include\\gl_core_3_3.h	/^		typedef struct __GLsync *GLsync;$/;"	t	typeref:struct:__GLsync *
GLubyte	.\\include\\gl_core_3_3.h	/^	typedef unsigned char GLubyte;$/;"	t	typeref:typename:unsigned char
GLuint	.\\include\\gl_core_3_3.h	/^	typedef unsigned int GLuint;$/;"	t	typeref:typename:unsigned int
GLuint64	.\\include\\gl_core_3_3.h	/^		typedef uint64_t GLuint64;$/;"	t	typeref:typename:uint64_t
GLuint64EXT	.\\include\\gl_core_3_3.h	/^		typedef uint64_t GLuint64EXT;$/;"	t	typeref:typename:uint64_t
GLushort	.\\include\\gl_core_3_3.h	/^	typedef unsigned short GLushort;$/;"	t	typeref:typename:unsigned short
GLvdpauSurfaceNV	.\\include\\gl_core_3_3.h	/^		typedef GLintptr GLvdpauSurfaceNV;$/;"	t	typeref:typename:GLintptr
GLvoid	.\\include\\gl_core_3_3.h	/^	typedef void GLvoid;$/;"	t	typeref:typename:void
GX_Blend	.\\include\\freetype\\internal\\tttypes.h	/^  typedef struct GX_BlendRec_  *GX_Blend;$/;"	t	typeref:struct:GX_BlendRec_ *
Glyph_Data_Format	.\\include\\freetype\\tttables.h	/^    FT_Short   Glyph_Data_Format;$/;"	m	struct:TT_Header_	typeref:typename:FT_Short
HAVE_ALLOCA	.\\include\\oauthConfig.h	/^#define HAVE_ALLOCA /;"	d
HAVE_CURL	.\\include\\oauthConfig.h	/^#define HAVE_CURL /;"	d
HAVE_DIRENT_H	.\\include\\oauthConfig.h	/^#define HAVE_DIRENT_H /;"	d
HAVE_DLFCN_H	.\\include\\oauthConfig.h	/^#define HAVE_DLFCN_H /;"	d
HAVE_INTTYPES_H	.\\include\\oauthConfig.h	/^#define HAVE_INTTYPES_H /;"	d
HAVE_LIMIT_ON_IDENTS	.\\include\\freetype\\ttnameid.h	/^#define HAVE_LIMIT_ON_IDENTS$/;"	d
HAVE_MATH_H	.\\include\\oauthConfig.h	/^#define HAVE_MATH_H /;"	d
HAVE_MEMORY_H	.\\include\\oauthConfig.h	/^#define HAVE_MEMORY_H /;"	d
HAVE_OPENSSL_HMAC_H	.\\include\\oauthConfig.h	/^#define HAVE_OPENSSL_HMAC_H /;"	d
HAVE_STDARG_H	.\\include\\oauthConfig.h	/^#define HAVE_STDARG_H /;"	d
HAVE_STDINT_H	.\\include\\oauthConfig.h	/^#define HAVE_STDINT_H /;"	d
HAVE_STDIO_H	.\\include\\oauthConfig.h	/^#define HAVE_STDIO_H /;"	d
HAVE_STDLIB_H	.\\include\\oauthConfig.h	/^#define HAVE_STDLIB_H /;"	d
HAVE_STRINGS_H	.\\include\\oauthConfig.h	/^#define HAVE_STRINGS_H /;"	d
HAVE_STRING_H	.\\include\\oauthConfig.h	/^#define HAVE_STRING_H /;"	d
HAVE_SYS_STAT_H	.\\include\\oauthConfig.h	/^#define HAVE_SYS_STAT_H /;"	d
HAVE_SYS_TYPES_H	.\\include\\oauthConfig.h	/^#define HAVE_SYS_TYPES_H /;"	d
HAVE_TIME_H	.\\include\\oauthConfig.h	/^#define HAVE_TIME_H /;"	d
HAVE_UNISTD_H	.\\include\\oauthConfig.h	/^#define HAVE_UNISTD_H /;"	d
INCDIR	.\\makefile	/^INCDIR=.\/include$/;"	m
INT_TO_F26DOT6	.\\include\\freetype\\internal\\ftcalc.h	/^#define INT_TO_F26DOT6(/;"	d
INT_TO_F2DOT14	.\\include\\freetype\\internal\\ftcalc.h	/^#define INT_TO_F2DOT14(/;"	d
INT_TO_FIXED	.\\include\\freetype\\internal\\ftcalc.h	/^#define INT_TO_FIXED(/;"	d
ISXDIGIT	.\\src\\oauth.cpp	/^# define ISXDIGIT(/;"	d	file:
IS_PS_BASE85	.\\include\\freetype\\internal\\psaux.h	/^#define IS_PS_BASE85(/;"	d
IS_PS_DELIM	.\\include\\freetype\\internal\\psaux.h	/^#define IS_PS_DELIM(/;"	d
IS_PS_DIGIT	.\\include\\freetype\\internal\\psaux.h	/^#define IS_PS_DIGIT(/;"	d
IS_PS_NEWLINE	.\\include\\freetype\\internal\\psaux.h	/^#define IS_PS_NEWLINE(/;"	d
IS_PS_SPACE	.\\include\\freetype\\internal\\psaux.h	/^#define IS_PS_SPACE(/;"	d
IS_PS_SPECIAL	.\\include\\freetype\\internal\\psaux.h	/^#define IS_PS_SPECIAL(/;"	d
IS_PS_TOKEN	.\\include\\freetype\\internal\\psaux.h	/^#define IS_PS_TOKEN(/;"	d
IS_PS_XDIGIT	.\\include\\freetype\\internal\\psaux.h	/^#define IS_PS_XDIGIT(/;"	d
Index_To_Loc_Format	.\\include\\freetype\\tttables.h	/^    FT_Short   Index_To_Loc_Format;$/;"	m	struct:TT_Header_	typeref:typename:FT_Short
IntGetProcAddress	.\\src\\gl_core_3_3.cpp	/^			#define IntGetProcAddress(/;"	d	file:
IntGetProcAddress	.\\src\\gl_core_3_3.cpp	/^		#define IntGetProcAddress(/;"	d	file:
IntGetProcAddress	.\\src\\gl_core_3_3.cpp	/^#define IntGetProcAddress(/;"	d	file:
IsCIDFont	.\\include\\freetype\\internal\\t1types.h	/^    FT_Bool        IsCIDFont;$/;"	m	struct:AFM_FontInfoRec_	typeref:typename:FT_Bool
KernPairs	.\\include\\freetype\\internal\\t1types.h	/^    AFM_KernPair   KernPairs;    \/* free if non-NULL *\/$/;"	m	struct:AFM_FontInfoRec_	typeref:typename:AFM_KernPair
LIBCURL_COPYRIGHT	.\\include\\curl\\curlver.h	/^#define LIBCURL_COPYRIGHT /;"	d
LIBCURL_TIMESTAMP	.\\include\\curl\\curlver.h	/^#define LIBCURL_TIMESTAMP /;"	d
LIBCURL_VERSION	.\\include\\curl\\curlver.h	/^#define LIBCURL_VERSION /;"	d
LIBCURL_VERSION_MAJOR	.\\include\\curl\\curlver.h	/^#define LIBCURL_VERSION_MAJOR /;"	d
LIBCURL_VERSION_MINOR	.\\include\\curl\\curlver.h	/^#define LIBCURL_VERSION_MINOR /;"	d
LIBCURL_VERSION_NUM	.\\include\\curl\\curlver.h	/^#define LIBCURL_VERSION_NUM /;"	d
LIBCURL_VERSION_PATCH	.\\include\\curl\\curlver.h	/^#define LIBCURL_VERSION_PATCH /;"	d
LIBDIR	.\\makefile	/^LIBDIR=.\/lib$/;"	m
LIBOAUTH_AGE	.\\include\\oauth.h	/^#define LIBOAUTH_AGE /;"	d
LIBOAUTH_CUR	.\\include\\oauth.h	/^#define LIBOAUTH_CUR /;"	d
LIBOAUTH_REV	.\\include\\oauth.h	/^#define LIBOAUTH_REV /;"	d
LIBOAUTH_VERSION	.\\include\\oauth.h	/^#define LIBOAUTH_VERSION /;"	d
LIBOAUTH_VERSION_MAJOR	.\\include\\oauth.h	/^#define LIBOAUTH_VERSION_MAJOR /;"	d
LIBOAUTH_VERSION_MICRO	.\\include\\oauth.h	/^#define LIBOAUTH_VERSION_MICRO /;"	d
LIBOAUTH_VERSION_MINOR	.\\include\\oauth.h	/^#define LIBOAUTH_VERSION_MINOR /;"	d
LIBS	.\\makefile	/^LIBS=-lm -lfreetype.dll -lglfw3dll -lopengl32 -lcrypto -lgdi32 -lcurldll -loauth -pthread$/;"	m
LONG	.\\include\\curl\\curl.h	/^#define LONG /;"	d
LONG	.\\include\\curl\\multi.h	/^#define LONG /;"	d
LT_OBJDIR	.\\include\\oauthConfig.h	/^#define LT_OBJDIR /;"	d
Length	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ULong  Length;     \/*      table length *\/$/;"	m	struct:TT_TableRec_	typeref:typename:FT_ULong
Line_Gap	.\\include\\freetype\\tttables.h	/^    FT_Short   Line_Gap;$/;"	m	struct:TT_HoriHeader_	typeref:typename:FT_Short
Line_Gap	.\\include\\freetype\\tttables.h	/^    FT_Short   Line_Gap;$/;"	m	struct:TT_VertHeader_	typeref:typename:FT_Short
LoadExtByName	.\\src\\gl_core_3_3.cpp	/^static void LoadExtByName(const char *extensionName)$/;"	f	typeref:typename:void	file:
Lowest_Rec_PPEM	.\\include\\freetype\\tttables.h	/^    FT_UShort  Lowest_Rec_PPEM;$/;"	m	struct:TT_Header_	typeref:typename:FT_UShort
MY_RAND	.\\src\\oauth.cpp	/^#  define MY_RAND /;"	d	file:
MY_SRAND	.\\src\\oauth.cpp	/^#  define MY_SRAND /;"	d	file:
Mac_Style	.\\include\\freetype\\tttables.h	/^    FT_UShort  Mac_Style;$/;"	m	struct:TT_Header_	typeref:typename:FT_UShort
Magic_Number	.\\include\\freetype\\tttables.h	/^    FT_Long    Magic_Number;$/;"	m	struct:TT_Header_	typeref:typename:FT_Long
Modified	.\\include\\freetype\\tttables.h	/^    FT_Long    Modified[2];$/;"	m	struct:TT_Header_	typeref:typename:FT_Long[2]
NOMINMAX	.\\include\\gl_core_3_3.h	/^			#define NOMINMAX$/;"	d
NS_CERT_HEADER	.\\src\\hash.cpp	/^static const char NS_CERT_HEADER[]  = "-----BEGIN CERTIFICATE-----";$/;"	v	typeref:typename:const char[]	file:
NS_CERT_TRAILER	.\\src\\hash.cpp	/^static const char NS_CERT_TRAILER[] = "-----END CERTIFICATE-----";$/;"	v	typeref:typename:const char[]	file:
NS_PRIV_HEADER	.\\src\\hash.cpp	/^static const char NS_PRIV_HEADER[]  = "-----BEGIN PRIVATE KEY-----";$/;"	v	typeref:typename:const char[]	file:
NS_PRIV_TRAILER	.\\src\\hash.cpp	/^static const char NS_PRIV_TRAILER[] = "-----END PRIVATE KEY-----";$/;"	v	typeref:typename:const char[]	file:
NULL	.\\include\\freetype\\internal\\ftobjs.h	/^#define NULL /;"	d
NumKernPair	.\\include\\freetype\\internal\\t1types.h	/^    FT_UInt        NumKernPair;$/;"	m	struct:AFM_FontInfoRec_	typeref:typename:FT_UInt
NumTrackKern	.\\include\\freetype\\internal\\t1types.h	/^    FT_UInt        NumTrackKern;$/;"	m	struct:AFM_FontInfoRec_	typeref:typename:FT_UInt
OA_GCC_VERSION_AT_LEAST	.\\include\\oauth.h	/^#    define OA_GCC_VERSION_AT_LEAST(/;"	d
OA_HMAC	.\\include\\oauth.h	/^    OA_HMAC=0, \/\/\/< use HMAC-SHA1 request signing method$/;"	e	enum:__anonb3585c060103
OA_PLAINTEXT	.\\include\\oauth.h	/^    OA_PLAINTEXT \/\/\/< use plain text signature (for testing only)$/;"	e	enum:__anonb3585c060103
OA_RSA	.\\include\\oauth.h	/^    OA_RSA, \/\/\/< use RSA signature $/;"	e	enum:__anonb3585c060103
OAuthMethod	.\\include\\oauth.h	/^  } OAuthMethod;$/;"	t	typeref:enum:__anonb3585c060103
OBJ	.\\makefile	/^OBJ=$(patsubst %,$(OBJDIR)\/%,$(_OBJ))$/;"	m
OBJDIR	.\\makefile	/^OBJDIR=.\/obj$/;"	m
OBJECTPOINT	.\\include\\curl\\curl.h	/^#define OBJECTPOINT /;"	d
OBJECTPOINT	.\\include\\curl\\multi.h	/^#define OBJECTPOINT /;"	d
OFF_T	.\\include\\curl\\curl.h	/^#define OFF_T /;"	d
OFF_T	.\\include\\curl\\multi.h	/^#define OFF_T /;"	d
OPENGL_NOLOAD_STYLE_H	.\\include\\gl_core_3_3.h	/^#define OPENGL_NOLOAD_STYLE_H$/;"	d
Offset	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ULong  Offset;        \/* table file offset         *\/$/;"	m	struct:WOFF_TableRec_	typeref:typename:FT_ULong
Offset	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ULong  Offset;     \/* table file offset *\/$/;"	m	struct:TT_TableRec_	typeref:typename:FT_ULong
OrigLength	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ULong  OrigLength;    \/* uncompressed table length *\/$/;"	m	struct:WOFF_TableRec_	typeref:typename:FT_ULong
OrigOffset	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ULong  OrigOffset;    \/* uncompressed table file offset *\/$/;"	m	struct:WOFF_TableRec_	typeref:typename:FT_ULong
PACKAGE	.\\include\\oauthConfig.h	/^#define PACKAGE /;"	d
PACKAGE_BUGREPORT	.\\include\\oauthConfig.h	/^#define PACKAGE_BUGREPORT /;"	d
PACKAGE_NAME	.\\include\\oauthConfig.h	/^#define PACKAGE_NAME /;"	d
PACKAGE_STRING	.\\include\\oauthConfig.h	/^#define PACKAGE_STRING /;"	d
PACKAGE_TARNAME	.\\include\\oauthConfig.h	/^#define PACKAGE_TARNAME /;"	d
PACKAGE_URL	.\\include\\oauthConfig.h	/^#define PACKAGE_URL /;"	d
PACKAGE_VERSION	.\\include\\oauthConfig.h	/^#define PACKAGE_VERSION /;"	d
PSAUX_H_	.\\include\\freetype\\internal\\psaux.h	/^#define PSAUX_H_$/;"	d
PSAux_Interface	.\\include\\freetype\\internal\\psaux.h	/^  typedef PSAux_ServiceRec   PSAux_Interface;$/;"	t	typeref:typename:PSAux_ServiceRec
PSAux_Service	.\\include\\freetype\\internal\\psaux.h	/^  } PSAux_ServiceRec, *PSAux_Service;$/;"	t	typeref:struct:PSAux_ServiceRec_ *
PSAux_ServiceRec	.\\include\\freetype\\internal\\psaux.h	/^  } PSAux_ServiceRec, *PSAux_Service;$/;"	t	typeref:struct:PSAux_ServiceRec_
PSAux_ServiceRec_	.\\include\\freetype\\internal\\psaux.h	/^  typedef struct  PSAux_ServiceRec_$/;"	s
PSHINTS_H_	.\\include\\freetype\\internal\\pshints.h	/^#define PSHINTS_H_$/;"	d
PSH_Globals	.\\include\\freetype\\internal\\pshints.h	/^  typedef struct PSH_GlobalsRec_*  PSH_Globals;$/;"	t	typeref:struct:PSH_GlobalsRec_ *
PSH_Globals_DestroyFunc	.\\include\\freetype\\internal\\pshints.h	/^  (*PSH_Globals_DestroyFunc)( PSH_Globals  globals );$/;"	t	typeref:typename:void (*)(PSH_Globals globals)
PSH_Globals_Funcs	.\\include\\freetype\\internal\\pshints.h	/^  } PSH_Globals_FuncsRec, *PSH_Globals_Funcs;$/;"	t	typeref:struct:PSH_Globals_FuncsRec_ *
PSH_Globals_FuncsRec	.\\include\\freetype\\internal\\pshints.h	/^  } PSH_Globals_FuncsRec, *PSH_Globals_Funcs;$/;"	t	typeref:struct:PSH_Globals_FuncsRec_
PSH_Globals_FuncsRec_	.\\include\\freetype\\internal\\pshints.h	/^  typedef struct  PSH_Globals_FuncsRec_$/;"	s
PSH_Globals_NewFunc	.\\include\\freetype\\internal\\pshints.h	/^  (*PSH_Globals_NewFunc)( FT_Memory     memory,$/;"	t	typeref:typename:FT_Error (*)(FT_Memory memory,T1_Private * private_dict,PSH_Globals * aglobals)
PSH_Globals_SetScaleFunc	.\\include\\freetype\\internal\\pshints.h	/^  (*PSH_Globals_SetScaleFunc)( PSH_Globals  globals,$/;"	t	typeref:typename:void (*)(PSH_Globals globals,FT_Fixed x_scale,FT_Fixed y_scale,FT_Fixed x_delta,FT_Fixed y_delta)
PSHinter_Interface	.\\include\\freetype\\internal\\pshints.h	/^  } PSHinter_Interface;$/;"	t	typeref:struct:PSHinter_Interface_
PSHinter_Interface_	.\\include\\freetype\\internal\\pshints.h	/^  typedef struct  PSHinter_Interface_$/;"	s
PSHinter_Service	.\\include\\freetype\\internal\\pshints.h	/^  typedef PSHinter_Interface*  PSHinter_Service;$/;"	t	typeref:typename:PSHinter_Interface *
PS_Adobe_Std_StringsFunc	.\\include\\freetype\\internal\\services\\svpscmap.h	/^  (*PS_Adobe_Std_StringsFunc)( FT_UInt  string_index );$/;"	t	typeref:typename:const char * (*)(FT_UInt string_index)
PS_Blend	.\\include\\freetype\\t1tables.h	/^  } PS_BlendRec, *PS_Blend;$/;"	t	typeref:struct:PS_BlendRec_ *
PS_BlendRec	.\\include\\freetype\\t1tables.h	/^  } PS_BlendRec, *PS_Blend;$/;"	t	typeref:struct:PS_BlendRec_
PS_BlendRec_	.\\include\\freetype\\t1tables.h	/^  typedef struct  PS_BlendRec_$/;"	s
PS_DICT_BLUE_FUZZ	.\\include\\freetype\\t1tables.h	/^    PS_DICT_BLUE_FUZZ,              \/* FT_Int     *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_BLUE_SCALE	.\\include\\freetype\\t1tables.h	/^    PS_DICT_BLUE_SCALE,             \/* FT_Fixed   *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_BLUE_SHIFT	.\\include\\freetype\\t1tables.h	/^    PS_DICT_BLUE_SHIFT,             \/* FT_Int     *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_BLUE_VALUE	.\\include\\freetype\\t1tables.h	/^    PS_DICT_BLUE_VALUE,             \/* FT_Short   *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_CHAR_STRING	.\\include\\freetype\\t1tables.h	/^    PS_DICT_CHAR_STRING,            \/* FT_String*      *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_CHAR_STRING_KEY	.\\include\\freetype\\t1tables.h	/^    PS_DICT_CHAR_STRING_KEY,        \/* FT_String*      *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_ENCODING_ENTRY	.\\include\\freetype\\t1tables.h	/^    PS_DICT_ENCODING_ENTRY,         \/* FT_String*      *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_ENCODING_TYPE	.\\include\\freetype\\t1tables.h	/^    PS_DICT_ENCODING_TYPE,          \/* T1_EncodingType *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_FAMILY_BLUE	.\\include\\freetype\\t1tables.h	/^    PS_DICT_FAMILY_BLUE,            \/* FT_Short   *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_FAMILY_NAME	.\\include\\freetype\\t1tables.h	/^    PS_DICT_FAMILY_NAME,            \/* FT_String* *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_FAMILY_OTHER_BLUE	.\\include\\freetype\\t1tables.h	/^    PS_DICT_FAMILY_OTHER_BLUE,      \/* FT_Short   *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_FONT_BBOX	.\\include\\freetype\\t1tables.h	/^    PS_DICT_FONT_BBOX,              \/* FT_Fixed        *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_FONT_MATRIX	.\\include\\freetype\\t1tables.h	/^    PS_DICT_FONT_MATRIX,            \/* FT_Fixed        *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_FONT_NAME	.\\include\\freetype\\t1tables.h	/^    PS_DICT_FONT_NAME,              \/* FT_String*      *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_FONT_TYPE	.\\include\\freetype\\t1tables.h	/^    PS_DICT_FONT_TYPE,              \/* FT_Byte         *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_FORCE_BOLD	.\\include\\freetype\\t1tables.h	/^    PS_DICT_FORCE_BOLD,             \/* FT_Bool    *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_FS_TYPE	.\\include\\freetype\\t1tables.h	/^    PS_DICT_FS_TYPE,                \/* FT_UShort  *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_FULL_NAME	.\\include\\freetype\\t1tables.h	/^    PS_DICT_FULL_NAME,              \/* FT_String* *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_IS_FIXED_PITCH	.\\include\\freetype\\t1tables.h	/^    PS_DICT_IS_FIXED_PITCH,         \/* FT_Bool    *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_ITALIC_ANGLE	.\\include\\freetype\\t1tables.h	/^    PS_DICT_ITALIC_ANGLE,           \/* FT_Long    *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_LANGUAGE_GROUP	.\\include\\freetype\\t1tables.h	/^    PS_DICT_LANGUAGE_GROUP,         \/* FT_Long    *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_LEN_IV	.\\include\\freetype\\t1tables.h	/^    PS_DICT_LEN_IV,                 \/* FT_Int     *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_MAX	.\\include\\freetype\\t1tables.h	/^    PS_DICT_MAX = PS_DICT_ITALIC_ANGLE$/;"	e	enum:PS_Dict_Keys_
PS_DICT_MIN_FEATURE	.\\include\\freetype\\t1tables.h	/^    PS_DICT_MIN_FEATURE,            \/* FT_Short   *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_NOTICE	.\\include\\freetype\\t1tables.h	/^    PS_DICT_NOTICE,                 \/* FT_String* *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_NUM_BLUE_VALUES	.\\include\\freetype\\t1tables.h	/^    PS_DICT_NUM_BLUE_VALUES,        \/* FT_Byte    *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_NUM_CHAR_STRINGS	.\\include\\freetype\\t1tables.h	/^    PS_DICT_NUM_CHAR_STRINGS,       \/* FT_Int          *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_NUM_FAMILY_BLUES	.\\include\\freetype\\t1tables.h	/^    PS_DICT_NUM_FAMILY_BLUES,       \/* FT_Byte    *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_NUM_FAMILY_OTHER_BLUES	.\\include\\freetype\\t1tables.h	/^    PS_DICT_NUM_FAMILY_OTHER_BLUES, \/* FT_Byte    *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_NUM_OTHER_BLUES	.\\include\\freetype\\t1tables.h	/^    PS_DICT_NUM_OTHER_BLUES,        \/* FT_Byte    *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_NUM_STEM_SNAP_H	.\\include\\freetype\\t1tables.h	/^    PS_DICT_NUM_STEM_SNAP_H,        \/* FT_Byte    *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_NUM_STEM_SNAP_V	.\\include\\freetype\\t1tables.h	/^    PS_DICT_NUM_STEM_SNAP_V,        \/* FT_Byte    *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_NUM_SUBRS	.\\include\\freetype\\t1tables.h	/^    PS_DICT_NUM_SUBRS,              \/* FT_Int     *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_OTHER_BLUE	.\\include\\freetype\\t1tables.h	/^    PS_DICT_OTHER_BLUE,             \/* FT_Short   *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_PAINT_TYPE	.\\include\\freetype\\t1tables.h	/^    PS_DICT_PAINT_TYPE,             \/* FT_Byte         *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_PASSWORD	.\\include\\freetype\\t1tables.h	/^    PS_DICT_PASSWORD,               \/* FT_Long    *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_RND_STEM_UP	.\\include\\freetype\\t1tables.h	/^    PS_DICT_RND_STEM_UP,            \/* FT_Bool    *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_STD_HW	.\\include\\freetype\\t1tables.h	/^    PS_DICT_STD_HW,                 \/* FT_UShort  *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_STD_VW	.\\include\\freetype\\t1tables.h	/^    PS_DICT_STD_VW,                 \/* FT_UShort  *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_STEM_SNAP_H	.\\include\\freetype\\t1tables.h	/^    PS_DICT_STEM_SNAP_H,            \/* FT_Short   *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_STEM_SNAP_V	.\\include\\freetype\\t1tables.h	/^    PS_DICT_STEM_SNAP_V,            \/* FT_Short   *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_SUBR	.\\include\\freetype\\t1tables.h	/^    PS_DICT_SUBR,                   \/* FT_String* *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_UNDERLINE_POSITION	.\\include\\freetype\\t1tables.h	/^    PS_DICT_UNDERLINE_POSITION,     \/* FT_Short   *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_UNDERLINE_THICKNESS	.\\include\\freetype\\t1tables.h	/^    PS_DICT_UNDERLINE_THICKNESS,    \/* FT_UShort  *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_UNIQUE_ID	.\\include\\freetype\\t1tables.h	/^    PS_DICT_UNIQUE_ID,              \/* FT_Int          *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_VERSION	.\\include\\freetype\\t1tables.h	/^    PS_DICT_VERSION,                \/* FT_String* *\/$/;"	e	enum:PS_Dict_Keys_
PS_DICT_WEIGHT	.\\include\\freetype\\t1tables.h	/^    PS_DICT_WEIGHT,                 \/* FT_String* *\/$/;"	e	enum:PS_Dict_Keys_
PS_DesignMap	.\\include\\freetype\\t1tables.h	/^  } PS_DesignMapRec, *PS_DesignMap;$/;"	t	typeref:struct:PS_DesignMap_ *
PS_DesignMapRec	.\\include\\freetype\\t1tables.h	/^  } PS_DesignMapRec, *PS_DesignMap;$/;"	t	typeref:struct:PS_DesignMap_
PS_DesignMap_	.\\include\\freetype\\t1tables.h	/^  typedef struct  PS_DesignMap_$/;"	s
PS_Dict_Keys	.\\include\\freetype\\t1tables.h	/^  } PS_Dict_Keys;$/;"	t	typeref:enum:PS_Dict_Keys_
PS_Dict_Keys_	.\\include\\freetype\\t1tables.h	/^  typedef enum  PS_Dict_Keys_$/;"	g
PS_FontExtraRec	.\\include\\freetype\\internal\\t1types.h	/^  } PS_FontExtraRec;$/;"	t	typeref:struct:PS_FontExtraRec_
PS_FontExtraRec_	.\\include\\freetype\\internal\\t1types.h	/^  typedef struct  PS_FontExtraRec_$/;"	s
PS_FontInfo	.\\include\\freetype\\t1tables.h	/^  typedef struct PS_FontInfoRec_*  PS_FontInfo;$/;"	t	typeref:struct:PS_FontInfoRec_ *
PS_FontInfoRec	.\\include\\freetype\\t1tables.h	/^  } PS_FontInfoRec;$/;"	t	typeref:struct:PS_FontInfoRec_
PS_FontInfoRec_	.\\include\\freetype\\t1tables.h	/^  typedef struct  PS_FontInfoRec_$/;"	s
PS_FreeGlyphNameFunc	.\\include\\freetype\\internal\\services\\svpscmap.h	/^  (*PS_FreeGlyphNameFunc)( FT_Pointer  data,$/;"	t	typeref:typename:void (*)(FT_Pointer data,const char * name)
PS_GetFontExtraFunc	.\\include\\freetype\\internal\\services\\svpsinfo.h	/^  (*PS_GetFontExtraFunc)( FT_Face           face,$/;"	t	typeref:typename:FT_Error (*)(FT_Face face,PS_FontExtraRec * afont_extra)
PS_GetFontInfoFunc	.\\include\\freetype\\internal\\services\\svpsinfo.h	/^  (*PS_GetFontInfoFunc)( FT_Face          face,$/;"	t	typeref:typename:FT_Error (*)(FT_Face face,PS_FontInfoRec * afont_info)
PS_GetFontPrivateFunc	.\\include\\freetype\\internal\\services\\svpsinfo.h	/^  (*PS_GetFontPrivateFunc)( FT_Face         face,$/;"	t	typeref:typename:FT_Error (*)(FT_Face face,PS_PrivateRec * afont_private)
PS_GetFontValueFunc	.\\include\\freetype\\internal\\services\\svpsinfo.h	/^  (*PS_GetFontValueFunc)( FT_Face       face,$/;"	t	typeref:typename:FT_Long (*)(FT_Face face,PS_Dict_Keys key,FT_UInt idx,void * value,FT_Long value_len)
PS_GetGlyphNameFunc	.\\include\\freetype\\internal\\services\\svpscmap.h	/^  (*PS_GetGlyphNameFunc)( FT_Pointer  data,$/;"	t	typeref:typename:const char * (*)(FT_Pointer data,FT_UInt string_index)
PS_HasGlyphNamesFunc	.\\include\\freetype\\internal\\services\\svpsinfo.h	/^  (*PS_HasGlyphNamesFunc)( FT_Face  face );$/;"	t	typeref:typename:FT_Int (*)(FT_Face face)
PS_Macintosh_NameFunc	.\\include\\freetype\\internal\\services\\svpscmap.h	/^  (*PS_Macintosh_NameFunc)( FT_UInt  name_index );$/;"	t	typeref:typename:const char * (*)(FT_UInt name_index)
PS_Parser	.\\include\\freetype\\internal\\psaux.h	/^  typedef struct PS_ParserRec_*  PS_Parser;$/;"	t	typeref:struct:PS_ParserRec_ *
PS_ParserRec	.\\include\\freetype\\internal\\psaux.h	/^  } PS_ParserRec;$/;"	t	typeref:struct:PS_ParserRec_
PS_ParserRec_	.\\include\\freetype\\internal\\psaux.h	/^  typedef struct  PS_ParserRec_$/;"	s
PS_Parser_Funcs	.\\include\\freetype\\internal\\psaux.h	/^  typedef const struct PS_Parser_FuncsRec_*  PS_Parser_Funcs;$/;"	t	typeref:typename:const struct PS_Parser_FuncsRec_ *
PS_Parser_FuncsRec	.\\include\\freetype\\internal\\psaux.h	/^  } PS_Parser_FuncsRec;$/;"	t	typeref:struct:PS_Parser_FuncsRec_
PS_Parser_FuncsRec_	.\\include\\freetype\\internal\\psaux.h	/^  typedef struct  PS_Parser_FuncsRec_$/;"	s
PS_Private	.\\include\\freetype\\t1tables.h	/^  typedef struct PS_PrivateRec_*  PS_Private;$/;"	t	typeref:struct:PS_PrivateRec_ *
PS_PrivateRec	.\\include\\freetype\\t1tables.h	/^  } PS_PrivateRec;$/;"	t	typeref:struct:PS_PrivateRec_
PS_PrivateRec_	.\\include\\freetype\\t1tables.h	/^  typedef struct  PS_PrivateRec_$/;"	s
PS_Table	.\\include\\freetype\\internal\\psaux.h	/^  typedef struct PS_TableRec_*              PS_Table;$/;"	t	typeref:struct:PS_TableRec_ *
PS_TableRec	.\\include\\freetype\\internal\\psaux.h	/^  } PS_TableRec;$/;"	t	typeref:struct:PS_TableRec_
PS_TableRec_	.\\include\\freetype\\internal\\psaux.h	/^  typedef struct  PS_TableRec_$/;"	s
PS_Table_Funcs	.\\include\\freetype\\internal\\psaux.h	/^  typedef const struct PS_Table_FuncsRec_*  PS_Table_Funcs;$/;"	t	typeref:typename:const struct PS_Table_FuncsRec_ *
PS_Table_FuncsRec	.\\include\\freetype\\internal\\psaux.h	/^  } PS_Table_FuncsRec;$/;"	t	typeref:struct:PS_Table_FuncsRec_
PS_Table_FuncsRec_	.\\include\\freetype\\internal\\psaux.h	/^  typedef struct  PS_Table_FuncsRec_$/;"	s
PS_UniMap	.\\include\\freetype\\internal\\services\\svpscmap.h	/^  } PS_UniMap;$/;"	t	typeref:struct:PS_UniMap_
PS_UniMap_	.\\include\\freetype\\internal\\services\\svpscmap.h	/^  typedef struct  PS_UniMap_$/;"	s
PS_Unicode_ValueFunc	.\\include\\freetype\\internal\\services\\svpscmap.h	/^  (*PS_Unicode_ValueFunc)( const char*  glyph_name );$/;"	t	typeref:typename:FT_UInt32 (*)(const char * glyph_name)
PS_Unicodes	.\\include\\freetype\\internal\\services\\svpscmap.h	/^  typedef struct PS_UnicodesRec_*  PS_Unicodes;$/;"	t	typeref:struct:PS_UnicodesRec_ *
PS_UnicodesRec	.\\include\\freetype\\internal\\services\\svpscmap.h	/^  } PS_UnicodesRec;$/;"	t	typeref:struct:PS_UnicodesRec_
PS_UnicodesRec_	.\\include\\freetype\\internal\\services\\svpscmap.h	/^  typedef struct  PS_UnicodesRec_$/;"	s
PS_Unicodes_CharIndexFunc	.\\include\\freetype\\internal\\services\\svpscmap.h	/^  (*PS_Unicodes_CharIndexFunc)( PS_Unicodes  unicodes,$/;"	t	typeref:typename:FT_UInt (*)(PS_Unicodes unicodes,FT_UInt32 unicode)
PS_Unicodes_CharNextFunc	.\\include\\freetype\\internal\\services\\svpscmap.h	/^  (*PS_Unicodes_CharNextFunc)( PS_Unicodes  unicodes,$/;"	t	typeref:typename:FT_UInt32 (*)(PS_Unicodes unicodes,FT_UInt32 * unicode)
PS_Unicodes_InitFunc	.\\include\\freetype\\internal\\services\\svpscmap.h	/^  (*PS_Unicodes_InitFunc)( FT_Memory             memory,$/;"	t	typeref:typename:FT_Error (*)(FT_Memory memory,PS_Unicodes unicodes,FT_UInt num_glyphs,PS_GetGlyphNameFunc get_glyph_name,PS_FreeGlyphNameFunc free_glyph_name,FT_Pointer glyph_data)
Pitch	.\\include\\freetype\\tttables.h	/^    FT_UShort  Pitch;$/;"	m	struct:TT_PCLT_	typeref:typename:FT_UShort
ProcExtsFromExtList	.\\src\\gl_core_3_3.cpp	/^void ProcExtsFromExtList(void)$/;"	f	typeref:typename:void
ROUND_F26DOT6	.\\include\\freetype\\internal\\ftcalc.h	/^#define ROUND_F26DOT6(/;"	d
Reserved	.\\include\\freetype\\tttables.h	/^    FT_Byte    Reserved;$/;"	m	struct:TT_PCLT_	typeref:typename:FT_Byte
Reserved	.\\include\\freetype\\tttables.h	/^    FT_Short   Reserved[4];$/;"	m	struct:TT_HoriHeader_	typeref:typename:FT_Short[4]
Reserved	.\\include\\freetype\\tttables.h	/^    FT_Short   Reserved[4];$/;"	m	struct:TT_VertHeader_	typeref:typename:FT_Short[4]
SFNT_H_	.\\include\\freetype\\internal\\sfnt.h	/^#define SFNT_H_$/;"	d
SFNT_Header	.\\include\\freetype\\internal\\tttypes.h	/^  } SFNT_HeaderRec, *SFNT_Header;$/;"	t	typeref:struct:SFNT_HeaderRec_ *
SFNT_HeaderRec	.\\include\\freetype\\internal\\tttypes.h	/^  } SFNT_HeaderRec, *SFNT_Header;$/;"	t	typeref:struct:SFNT_HeaderRec_
SFNT_HeaderRec_	.\\include\\freetype\\internal\\tttypes.h	/^  typedef struct  SFNT_HeaderRec_$/;"	s
SFNT_Interface	.\\include\\freetype\\internal\\sfnt.h	/^  } SFNT_Interface;$/;"	t	typeref:struct:SFNT_Interface_
SFNT_Interface_	.\\include\\freetype\\internal\\sfnt.h	/^  typedef struct  SFNT_Interface_$/;"	s
SFNT_Service	.\\include\\freetype\\internal\\sfnt.h	/^  typedef SFNT_Interface*   SFNT_Service;$/;"	t	typeref:typename:SFNT_Interface *
SRCDIR	.\\makefile	/^SRCDIR=.\/src$/;"	m
STDC_HEADERS	.\\include\\oauthConfig.h	/^#define STDC_HEADERS /;"	d
STRINGPOINT	.\\include\\curl\\curl.h	/^#define STRINGPOINT /;"	d
SVBDF_H_	.\\include\\freetype\\internal\\services\\svbdf.h	/^#define SVBDF_H_$/;"	d
SVCID_H_	.\\include\\freetype\\internal\\services\\svcid.h	/^#define SVCID_H_$/;"	d
SVFNTFMT_H_	.\\include\\freetype\\internal\\services\\svfntfmt.h	/^#define SVFNTFMT_H_$/;"	d
SVGLDICT_H_	.\\include\\freetype\\internal\\services\\svgldict.h	/^#define SVGLDICT_H_$/;"	d
SVGXVAL_H_	.\\include\\freetype\\internal\\services\\svgxval.h	/^#define SVGXVAL_H_$/;"	d
SVKERN_H_	.\\include\\freetype\\internal\\services\\svkern.h	/^#define SVKERN_H_$/;"	d
SVMM_H_	.\\include\\freetype\\internal\\services\\svmm.h	/^#define SVMM_H_$/;"	d
SVOTVAL_H_	.\\include\\freetype\\internal\\services\\svotval.h	/^#define SVOTVAL_H_$/;"	d
SVPFR_H_	.\\include\\freetype\\internal\\services\\svpfr.h	/^#define SVPFR_H_$/;"	d
SVPOSTNM_H_	.\\include\\freetype\\internal\\services\\svpostnm.h	/^#define SVPOSTNM_H_$/;"	d
SVPROP_H_	.\\include\\freetype\\internal\\services\\svprop.h	/^#define SVPROP_H_$/;"	d
SVPSCMAP_H_	.\\include\\freetype\\internal\\services\\svpscmap.h	/^#define SVPSCMAP_H_$/;"	d
SVPSINFO_H_	.\\include\\freetype\\internal\\services\\svpsinfo.h	/^#define SVPSINFO_H_$/;"	d
SVSFNT_H_	.\\include\\freetype\\internal\\services\\svsfnt.h	/^#define SVSFNT_H_$/;"	d
SVTTCMAP_H_	.\\include\\freetype\\internal\\services\\svttcmap.h	/^#define SVTTCMAP_H_$/;"	d
SVTTENG_H_	.\\include\\freetype\\internal\\services\\svtteng.h	/^#define SVTTENG_H_$/;"	d
SVTTGLYF_H_	.\\include\\freetype\\internal\\services\\svttglyf.h	/^#define SVTTGLYF_H_$/;"	d
SVWINFNT_H_	.\\include\\freetype\\internal\\services\\svwinfnt.h	/^#define SVWINFNT_H_$/;"	d
SerifStyle	.\\include\\freetype\\tttables.h	/^    FT_Byte    SerifStyle;$/;"	m	struct:TT_PCLT_	typeref:typename:FT_Byte
Size	.\\include\\Window.h	/^    GLfloat  Size[2];    \/\/ Size of glyph$/;"	m	struct:Character	typeref:typename:GLfloat[2]
StrokeWeight	.\\include\\freetype\\tttables.h	/^    FT_Char    StrokeWeight;$/;"	m	struct:TT_PCLT_	typeref:typename:FT_Char
Style	.\\include\\freetype\\tttables.h	/^    FT_UShort  Style;$/;"	m	struct:TT_PCLT_	typeref:typename:FT_UShort
SunGetProcAddress	.\\src\\gl_core_3_3.cpp	/^static void* SunGetProcAddress (const GLubyte* name)$/;"	f	typeref:typename:void *	file:
Switch_ActiveTexture	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_ActiveTexture(GLenum texture)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_AttachShader	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_AttachShader(GLuint program, GLuint shader)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_BeginConditionalRender	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_BeginConditionalRender(GLuint id, GLenum mode)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_BeginQuery	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_BeginQuery(GLenum target, GLuint id)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_BeginTransformFeedback	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_BeginTransformFeedback(GLenum primitiveMode)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_BindAttribLocation	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_BindAttribLocation(GLuint program, GLuint index, const GLchar/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_BindBuffer	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_BindBuffer(GLenum target, GLuint buffer)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_BindBufferBase	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_BindBufferBase(GLenum target, GLuint index, GLuint buffer)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_BindBufferRange	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_BindBufferRange(GLenum target, GLuint index, GLuint buffer, G/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_BindFragDataLocation	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_BindFragDataLocation(GLuint program, GLuint color, const GLch/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_BindFragDataLocationIndexed	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_BindFragDataLocationIndexed(GLuint program, GLuint colorNumbe/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_BindFramebuffer	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_BindFramebuffer(GLenum target, GLuint framebuffer)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_BindRenderbuffer	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_BindRenderbuffer(GLenum target, GLuint renderbuffer)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_BindSampler	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_BindSampler(GLuint unit, GLuint sampler)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_BindTexture	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_BindTexture(GLenum target, GLuint texture)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_BindVertexArray	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_BindVertexArray(GLuint ren_array)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_BlendColor	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_BlendColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat /;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_BlendEquation	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_BlendEquation(GLenum mode)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_BlendEquationSeparate	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_BlendEquationSeparate(GLenum modeRGB, GLenum modeAlpha)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_BlendFunc	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_BlendFunc(GLenum sfactor, GLenum dfactor)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_BlendFuncSeparate	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_BlendFuncSeparate(GLenum sfactorRGB, GLenum dfactorRGB, GLenu/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_BlitFramebuffer	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_BlitFramebuffer(GLint srcX0, GLint srcY0, GLint srcX1, GLint /;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_BufferData	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_BufferData(GLenum target, GLsizeiptr size, const void * data,/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_BufferSubData	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_BufferSubData(GLenum target, GLintptr offset, GLsizeiptr size/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_CheckFramebufferStatus	.\\src\\gl_core_3_3.cpp	/^static GLenum CODEGEN_FUNCPTR Switch_CheckFramebufferStatus(GLenum target)$/;"	f	typeref:typename:GLenum CODEGEN_FUNCPTR	file:
Switch_ClampColor	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_ClampColor(GLenum target, GLenum clamp)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_Clear	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_Clear(GLbitfield mask)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_ClearBufferfi	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_ClearBufferfi(GLenum buffer, GLint drawbuffer, GLfloat depth,/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_ClearBufferfv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_ClearBufferfv(GLenum buffer, GLint drawbuffer, const GLfloat /;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_ClearBufferiv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_ClearBufferiv(GLenum buffer, GLint drawbuffer, const GLint * /;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_ClearBufferuiv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_ClearBufferuiv(GLenum buffer, GLint drawbuffer, const GLuint /;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_ClearColor	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_ClearColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat /;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_ClearDepth	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_ClearDepth(GLdouble depth)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_ClearStencil	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_ClearStencil(GLint s)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_ClientWaitSync	.\\src\\gl_core_3_3.cpp	/^static GLenum CODEGEN_FUNCPTR Switch_ClientWaitSync(GLsync sync, GLbitfield flags, GLuint64 time/;"	f	typeref:typename:GLenum CODEGEN_FUNCPTR	file:
Switch_ColorMask	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_ColorMask(GLboolean red, GLboolean green, GLboolean blue, GLb/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_ColorMaski	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_ColorMaski(GLuint index, GLboolean r, GLboolean g, GLboolean /;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_CompileShader	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_CompileShader(GLuint shader)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_CompressedTexImage1D	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_CompressedTexImage1D(GLenum target, GLint level, GLenum inter/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_CompressedTexImage2D	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_CompressedTexImage2D(GLenum target, GLint level, GLenum inter/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_CompressedTexImage3D	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_CompressedTexImage3D(GLenum target, GLint level, GLenum inter/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_CompressedTexSubImage1D	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_CompressedTexSubImage1D(GLenum target, GLint level, GLint xof/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_CompressedTexSubImage2D	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_CompressedTexSubImage2D(GLenum target, GLint level, GLint xof/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_CompressedTexSubImage3D	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_CompressedTexSubImage3D(GLenum target, GLint level, GLint xof/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_CopyBufferSubData	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_CopyBufferSubData(GLenum readTarget, GLenum writeTarget, GLin/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_CopyTexImage1D	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_CopyTexImage1D(GLenum target, GLint level, GLenum internalfor/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_CopyTexImage2D	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_CopyTexImage2D(GLenum target, GLint level, GLenum internalfor/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_CopyTexSubImage1D	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_CopyTexSubImage1D(GLenum target, GLint level, GLint xoffset, /;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_CopyTexSubImage2D	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_CopyTexSubImage2D(GLenum target, GLint level, GLint xoffset, /;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_CopyTexSubImage3D	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_CopyTexSubImage3D(GLenum target, GLint level, GLint xoffset, /;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_CreateProgram	.\\src\\gl_core_3_3.cpp	/^static GLuint CODEGEN_FUNCPTR Switch_CreateProgram(void)$/;"	f	typeref:typename:GLuint CODEGEN_FUNCPTR	file:
Switch_CreateShader	.\\src\\gl_core_3_3.cpp	/^static GLuint CODEGEN_FUNCPTR Switch_CreateShader(GLenum type)$/;"	f	typeref:typename:GLuint CODEGEN_FUNCPTR	file:
Switch_CullFace	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_CullFace(GLenum mode)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_DeleteBuffers	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_DeleteBuffers(GLsizei n, const GLuint * buffers)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_DeleteFramebuffers	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_DeleteFramebuffers(GLsizei n, const GLuint * framebuffers)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_DeleteProgram	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_DeleteProgram(GLuint program)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_DeleteQueries	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_DeleteQueries(GLsizei n, const GLuint * ids)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_DeleteRenderbuffers	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_DeleteRenderbuffers(GLsizei n, const GLuint * renderbuffers)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_DeleteSamplers	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_DeleteSamplers(GLsizei count, const GLuint * samplers)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_DeleteShader	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_DeleteShader(GLuint shader)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_DeleteSync	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_DeleteSync(GLsync sync)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_DeleteTextures	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_DeleteTextures(GLsizei n, const GLuint * textures)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_DeleteVertexArrays	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_DeleteVertexArrays(GLsizei n, const GLuint * arrays)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_DepthFunc	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_DepthFunc(GLenum func)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_DepthMask	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_DepthMask(GLboolean flag)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_DepthRange	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_DepthRange(GLdouble ren_near, GLdouble ren_far)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_DetachShader	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_DetachShader(GLuint program, GLuint shader)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_Disable	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_Disable(GLenum cap)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_DisableVertexAttribArray	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_DisableVertexAttribArray(GLuint index)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_Disablei	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_Disablei(GLenum target, GLuint index)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_DrawArrays	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_DrawArrays(GLenum mode, GLint first, GLsizei count)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_DrawArraysInstanced	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_DrawArraysInstanced(GLenum mode, GLint first, GLsizei count, /;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_DrawBuffer	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_DrawBuffer(GLenum buf)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_DrawBuffers	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_DrawBuffers(GLsizei n, const GLenum * bufs)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_DrawElements	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_DrawElements(GLenum mode, GLsizei count, GLenum type, const v/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_DrawElementsBaseVertex	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_DrawElementsBaseVertex(GLenum mode, GLsizei count, GLenum typ/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_DrawElementsInstanced	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_DrawElementsInstanced(GLenum mode, GLsizei count, GLenum type/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_DrawElementsInstancedBaseVertex	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_DrawElementsInstancedBaseVertex(GLenum mode, GLsizei count, G/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_DrawRangeElements	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_DrawRangeElements(GLenum mode, GLuint start, GLuint end, GLsi/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_DrawRangeElementsBaseVertex	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_DrawRangeElementsBaseVertex(GLenum mode, GLuint start, GLuint/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_Enable	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_Enable(GLenum cap)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_EnableVertexAttribArray	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_EnableVertexAttribArray(GLuint index)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_Enablei	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_Enablei(GLenum target, GLuint index)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_EndConditionalRender	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_EndConditionalRender(void)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_EndQuery	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_EndQuery(GLenum target)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_EndTransformFeedback	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_EndTransformFeedback(void)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_FenceSync	.\\src\\gl_core_3_3.cpp	/^static GLsync CODEGEN_FUNCPTR Switch_FenceSync(GLenum condition, GLbitfield flags)$/;"	f	typeref:typename:GLsync CODEGEN_FUNCPTR	file:
Switch_Finish	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_Finish(void)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_Flush	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_Flush(void)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_FlushMappedBufferRange	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_FlushMappedBufferRange(GLenum target, GLintptr offset, GLsize/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_FramebufferRenderbuffer	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_FramebufferRenderbuffer(GLenum target, GLenum attachment, GLe/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_FramebufferTexture	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_FramebufferTexture(GLenum target, GLenum attachment, GLuint t/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_FramebufferTexture1D	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_FramebufferTexture1D(GLenum target, GLenum attachment, GLenum/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_FramebufferTexture2D	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_FramebufferTexture2D(GLenum target, GLenum attachment, GLenum/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_FramebufferTexture3D	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_FramebufferTexture3D(GLenum target, GLenum attachment, GLenum/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_FramebufferTextureLayer	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_FramebufferTextureLayer(GLenum target, GLenum attachment, GLu/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_FrontFace	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_FrontFace(GLenum mode)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GenBuffers	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GenBuffers(GLsizei n, GLuint * buffers)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GenFramebuffers	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GenFramebuffers(GLsizei n, GLuint * framebuffers)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GenQueries	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GenQueries(GLsizei n, GLuint * ids)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GenRenderbuffers	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GenRenderbuffers(GLsizei n, GLuint * renderbuffers)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GenSamplers	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GenSamplers(GLsizei count, GLuint * samplers)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GenTextures	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GenTextures(GLsizei n, GLuint * textures)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GenVertexArrays	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GenVertexArrays(GLsizei n, GLuint * arrays)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GenerateMipmap	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GenerateMipmap(GLenum target)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetActiveAttrib	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetActiveAttrib(GLuint program, GLuint index, GLsizei bufSize/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetActiveUniform	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetActiveUniform(GLuint program, GLuint index, GLsizei bufSiz/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetActiveUniformBlockName	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetActiveUniformBlockName(GLuint program, GLuint uniformBlock/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetActiveUniformBlockiv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetActiveUniformBlockiv(GLuint program, GLuint uniformBlockIn/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetActiveUniformName	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetActiveUniformName(GLuint program, GLuint uniformIndex, GLs/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetActiveUniformsiv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetActiveUniformsiv(GLuint program, GLsizei uniformCount, con/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetAttachedShaders	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetAttachedShaders(GLuint program, GLsizei maxCount, GLsizei /;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetAttribLocation	.\\src\\gl_core_3_3.cpp	/^static GLint CODEGEN_FUNCPTR Switch_GetAttribLocation(GLuint program, const GLchar * name)$/;"	f	typeref:typename:GLint CODEGEN_FUNCPTR	file:
Switch_GetBooleani_v	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetBooleani_v(GLenum target, GLuint index, GLboolean * data)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetBooleanv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetBooleanv(GLenum pname, GLboolean * data)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetBufferParameteri64v	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetBufferParameteri64v(GLenum target, GLenum pname, GLint64 */;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetBufferParameteriv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetBufferParameteriv(GLenum target, GLenum pname, GLint * par/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetBufferPointerv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetBufferPointerv(GLenum target, GLenum pname, void ** params/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetBufferSubData	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetBufferSubData(GLenum target, GLintptr offset, GLsizeiptr s/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetCompressedTexImage	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetCompressedTexImage(GLenum target, GLint level, void * img)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetDoublev	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetDoublev(GLenum pname, GLdouble * data)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetError	.\\src\\gl_core_3_3.cpp	/^static GLenum CODEGEN_FUNCPTR Switch_GetError(void)$/;"	f	typeref:typename:GLenum CODEGEN_FUNCPTR	file:
Switch_GetFloatv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetFloatv(GLenum pname, GLfloat * data)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetFragDataIndex	.\\src\\gl_core_3_3.cpp	/^static GLint CODEGEN_FUNCPTR Switch_GetFragDataIndex(GLuint program, const GLchar * name)$/;"	f	typeref:typename:GLint CODEGEN_FUNCPTR	file:
Switch_GetFragDataLocation	.\\src\\gl_core_3_3.cpp	/^static GLint CODEGEN_FUNCPTR Switch_GetFragDataLocation(GLuint program, const GLchar * name)$/;"	f	typeref:typename:GLint CODEGEN_FUNCPTR	file:
Switch_GetFramebufferAttachmentParameteriv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetFramebufferAttachmentParameteriv(GLenum target, GLenum att/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetInteger64i_v	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetInteger64i_v(GLenum target, GLuint index, GLint64 * data)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetInteger64v	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetInteger64v(GLenum pname, GLint64 * data)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetIntegeri_v	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetIntegeri_v(GLenum target, GLuint index, GLint * data)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetIntegerv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetIntegerv(GLenum pname, GLint * data)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetMultisamplefv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetMultisamplefv(GLenum pname, GLuint index, GLfloat * val)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetProgramInfoLog	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetProgramInfoLog(GLuint program, GLsizei bufSize, GLsizei * /;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetProgramiv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetProgramiv(GLuint program, GLenum pname, GLint * params)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetQueryObjecti64v	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetQueryObjecti64v(GLuint id, GLenum pname, GLint64 * params)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetQueryObjectiv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetQueryObjectiv(GLuint id, GLenum pname, GLint * params)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetQueryObjectui64v	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetQueryObjectui64v(GLuint id, GLenum pname, GLuint64 * param/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetQueryObjectuiv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetQueryObjectuiv(GLuint id, GLenum pname, GLuint * params)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetQueryiv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetQueryiv(GLenum target, GLenum pname, GLint * params)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetRenderbufferParameteriv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetRenderbufferParameteriv(GLenum target, GLenum pname, GLint/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetSamplerParameterIiv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetSamplerParameterIiv(GLuint sampler, GLenum pname, GLint * /;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetSamplerParameterIuiv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetSamplerParameterIuiv(GLuint sampler, GLenum pname, GLuint /;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetSamplerParameterfv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetSamplerParameterfv(GLuint sampler, GLenum pname, GLfloat */;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetSamplerParameteriv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetSamplerParameteriv(GLuint sampler, GLenum pname, GLint * p/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetShaderInfoLog	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetShaderInfoLog(GLuint shader, GLsizei bufSize, GLsizei * le/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetShaderSource	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetShaderSource(GLuint shader, GLsizei bufSize, GLsizei * len/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetShaderiv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetShaderiv(GLuint shader, GLenum pname, GLint * params)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetString	.\\src\\gl_core_3_3.cpp	/^static const GLubyte * CODEGEN_FUNCPTR Switch_GetString(GLenum name)$/;"	f	typeref:typename:const GLubyte * CODEGEN_FUNCPTR	file:
Switch_GetStringi	.\\src\\gl_core_3_3.cpp	/^static const GLubyte * CODEGEN_FUNCPTR Switch_GetStringi(GLenum name, GLuint index)$/;"	f	typeref:typename:const GLubyte * CODEGEN_FUNCPTR	file:
Switch_GetSynciv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetSynciv(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetTexImage	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetTexImage(GLenum target, GLint level, GLenum format, GLenum/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetTexLevelParameterfv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetTexLevelParameterfv(GLenum target, GLint level, GLenum pna/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetTexLevelParameteriv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetTexLevelParameteriv(GLenum target, GLint level, GLenum pna/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetTexParameterIiv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetTexParameterIiv(GLenum target, GLenum pname, GLint * param/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetTexParameterIuiv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetTexParameterIuiv(GLenum target, GLenum pname, GLuint * par/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetTexParameterfv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetTexParameterfv(GLenum target, GLenum pname, GLfloat * para/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetTexParameteriv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetTexParameteriv(GLenum target, GLenum pname, GLint * params/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetTransformFeedbackVarying	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetTransformFeedbackVarying(GLuint program, GLuint index, GLs/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetUniformBlockIndex	.\\src\\gl_core_3_3.cpp	/^static GLuint CODEGEN_FUNCPTR Switch_GetUniformBlockIndex(GLuint program, const GLchar * uniform/;"	f	typeref:typename:GLuint CODEGEN_FUNCPTR	file:
Switch_GetUniformIndices	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetUniformIndices(GLuint program, GLsizei uniformCount, const/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetUniformLocation	.\\src\\gl_core_3_3.cpp	/^static GLint CODEGEN_FUNCPTR Switch_GetUniformLocation(GLuint program, const GLchar * name)$/;"	f	typeref:typename:GLint CODEGEN_FUNCPTR	file:
Switch_GetUniformfv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetUniformfv(GLuint program, GLint location, GLfloat * params/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetUniformiv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetUniformiv(GLuint program, GLint location, GLint * params)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetUniformuiv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetUniformuiv(GLuint program, GLint location, GLuint * params/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetVertexAttribIiv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetVertexAttribIiv(GLuint index, GLenum pname, GLint * params/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetVertexAttribIuiv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetVertexAttribIuiv(GLuint index, GLenum pname, GLuint * para/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetVertexAttribPointerv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetVertexAttribPointerv(GLuint index, GLenum pname, void ** p/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetVertexAttribdv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetVertexAttribdv(GLuint index, GLenum pname, GLdouble * para/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetVertexAttribfv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetVertexAttribfv(GLuint index, GLenum pname, GLfloat * param/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_GetVertexAttribiv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_GetVertexAttribiv(GLuint index, GLenum pname, GLint * params)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_Hint	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_Hint(GLenum target, GLenum mode)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_IsBuffer	.\\src\\gl_core_3_3.cpp	/^static GLboolean CODEGEN_FUNCPTR Switch_IsBuffer(GLuint buffer)$/;"	f	typeref:typename:GLboolean CODEGEN_FUNCPTR	file:
Switch_IsEnabled	.\\src\\gl_core_3_3.cpp	/^static GLboolean CODEGEN_FUNCPTR Switch_IsEnabled(GLenum cap)$/;"	f	typeref:typename:GLboolean CODEGEN_FUNCPTR	file:
Switch_IsEnabledi	.\\src\\gl_core_3_3.cpp	/^static GLboolean CODEGEN_FUNCPTR Switch_IsEnabledi(GLenum target, GLuint index)$/;"	f	typeref:typename:GLboolean CODEGEN_FUNCPTR	file:
Switch_IsFramebuffer	.\\src\\gl_core_3_3.cpp	/^static GLboolean CODEGEN_FUNCPTR Switch_IsFramebuffer(GLuint framebuffer)$/;"	f	typeref:typename:GLboolean CODEGEN_FUNCPTR	file:
Switch_IsProgram	.\\src\\gl_core_3_3.cpp	/^static GLboolean CODEGEN_FUNCPTR Switch_IsProgram(GLuint program)$/;"	f	typeref:typename:GLboolean CODEGEN_FUNCPTR	file:
Switch_IsQuery	.\\src\\gl_core_3_3.cpp	/^static GLboolean CODEGEN_FUNCPTR Switch_IsQuery(GLuint id)$/;"	f	typeref:typename:GLboolean CODEGEN_FUNCPTR	file:
Switch_IsRenderbuffer	.\\src\\gl_core_3_3.cpp	/^static GLboolean CODEGEN_FUNCPTR Switch_IsRenderbuffer(GLuint renderbuffer)$/;"	f	typeref:typename:GLboolean CODEGEN_FUNCPTR	file:
Switch_IsSampler	.\\src\\gl_core_3_3.cpp	/^static GLboolean CODEGEN_FUNCPTR Switch_IsSampler(GLuint sampler)$/;"	f	typeref:typename:GLboolean CODEGEN_FUNCPTR	file:
Switch_IsShader	.\\src\\gl_core_3_3.cpp	/^static GLboolean CODEGEN_FUNCPTR Switch_IsShader(GLuint shader)$/;"	f	typeref:typename:GLboolean CODEGEN_FUNCPTR	file:
Switch_IsSync	.\\src\\gl_core_3_3.cpp	/^static GLboolean CODEGEN_FUNCPTR Switch_IsSync(GLsync sync)$/;"	f	typeref:typename:GLboolean CODEGEN_FUNCPTR	file:
Switch_IsTexture	.\\src\\gl_core_3_3.cpp	/^static GLboolean CODEGEN_FUNCPTR Switch_IsTexture(GLuint texture)$/;"	f	typeref:typename:GLboolean CODEGEN_FUNCPTR	file:
Switch_IsVertexArray	.\\src\\gl_core_3_3.cpp	/^static GLboolean CODEGEN_FUNCPTR Switch_IsVertexArray(GLuint ren_array)$/;"	f	typeref:typename:GLboolean CODEGEN_FUNCPTR	file:
Switch_LineWidth	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_LineWidth(GLfloat width)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_LinkProgram	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_LinkProgram(GLuint program)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_LogicOp	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_LogicOp(GLenum opcode)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_MapBuffer	.\\src\\gl_core_3_3.cpp	/^static void * CODEGEN_FUNCPTR Switch_MapBuffer(GLenum target, GLenum access)$/;"	f	typeref:typename:void * CODEGEN_FUNCPTR	file:
Switch_MapBufferRange	.\\src\\gl_core_3_3.cpp	/^static void * CODEGEN_FUNCPTR Switch_MapBufferRange(GLenum target, GLintptr offset, GLsizeiptr l/;"	f	typeref:typename:void * CODEGEN_FUNCPTR	file:
Switch_MultiDrawArrays	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_MultiDrawArrays(GLenum mode, const GLint * first, const GLsiz/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_MultiDrawElements	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_MultiDrawElements(GLenum mode, const GLsizei * count, GLenum /;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_MultiDrawElementsBaseVertex	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_MultiDrawElementsBaseVertex(GLenum mode, const GLsizei * coun/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_PixelStoref	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_PixelStoref(GLenum pname, GLfloat param)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_PixelStorei	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_PixelStorei(GLenum pname, GLint param)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_PointParameterf	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_PointParameterf(GLenum pname, GLfloat param)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_PointParameterfv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_PointParameterfv(GLenum pname, const GLfloat * params)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_PointParameteri	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_PointParameteri(GLenum pname, GLint param)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_PointParameteriv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_PointParameteriv(GLenum pname, const GLint * params)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_PointSize	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_PointSize(GLfloat size)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_PolygonMode	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_PolygonMode(GLenum face, GLenum mode)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_PolygonOffset	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_PolygonOffset(GLfloat factor, GLfloat units)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_PrimitiveRestartIndex	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_PrimitiveRestartIndex(GLuint index)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_ProvokingVertex	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_ProvokingVertex(GLenum mode)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_QueryCounter	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_QueryCounter(GLuint id, GLenum target)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_ReadBuffer	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_ReadBuffer(GLenum src)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_ReadPixels	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_ReadPixels(GLint x, GLint y, GLsizei width, GLsizei height, G/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_RenderbufferStorage	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_RenderbufferStorage(GLenum target, GLenum internalformat, GLs/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_RenderbufferStorageMultisample	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_RenderbufferStorageMultisample(GLenum target, GLsizei samples/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_SampleCoverage	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_SampleCoverage(GLfloat value, GLboolean invert)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_SampleMaski	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_SampleMaski(GLuint maskNumber, GLbitfield mask)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_SamplerParameterIiv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_SamplerParameterIiv(GLuint sampler, GLenum pname, const GLint/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_SamplerParameterIuiv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_SamplerParameterIuiv(GLuint sampler, GLenum pname, const GLui/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_SamplerParameterf	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_SamplerParameterf(GLuint sampler, GLenum pname, GLfloat param/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_SamplerParameterfv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_SamplerParameterfv(GLuint sampler, GLenum pname, const GLfloa/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_SamplerParameteri	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_SamplerParameteri(GLuint sampler, GLenum pname, GLint param)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_SamplerParameteriv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_SamplerParameteriv(GLuint sampler, GLenum pname, const GLint /;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_Scissor	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_Scissor(GLint x, GLint y, GLsizei width, GLsizei height)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_ShaderSource	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_ShaderSource(GLuint shader, GLsizei count, const GLchar *cons/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_StencilFunc	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_StencilFunc(GLenum func, GLint ref, GLuint mask)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_StencilFuncSeparate	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_StencilFuncSeparate(GLenum face, GLenum func, GLint ref, GLui/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_StencilMask	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_StencilMask(GLuint mask)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_StencilMaskSeparate	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_StencilMaskSeparate(GLenum face, GLuint mask)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_StencilOp	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_StencilOp(GLenum fail, GLenum zfail, GLenum zpass)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_StencilOpSeparate	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_StencilOpSeparate(GLenum face, GLenum sfail, GLenum dpfail, G/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_TexBuffer	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_TexBuffer(GLenum target, GLenum internalformat, GLuint buffer/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_TexImage1D	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_TexImage1D(GLenum target, GLint level, GLint internalformat, /;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_TexImage2D	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_TexImage2D(GLenum target, GLint level, GLint internalformat, /;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_TexImage2DMultisample	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_TexImage2DMultisample(GLenum target, GLsizei samples, GLenum /;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_TexImage3D	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_TexImage3D(GLenum target, GLint level, GLint internalformat, /;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_TexImage3DMultisample	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_TexImage3DMultisample(GLenum target, GLsizei samples, GLenum /;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_TexParameterIiv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_TexParameterIiv(GLenum target, GLenum pname, const GLint * pa/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_TexParameterIuiv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_TexParameterIuiv(GLenum target, GLenum pname, const GLuint * /;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_TexParameterf	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_TexParameterf(GLenum target, GLenum pname, GLfloat param)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_TexParameterfv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_TexParameterfv(GLenum target, GLenum pname, const GLfloat * p/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_TexParameteri	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_TexParameteri(GLenum target, GLenum pname, GLint param)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_TexParameteriv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_TexParameteriv(GLenum target, GLenum pname, const GLint * par/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_TexSubImage1D	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_TexSubImage1D(GLenum target, GLint level, GLint xoffset, GLsi/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_TexSubImage2D	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_TexSubImage2D(GLenum target, GLint level, GLint xoffset, GLin/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_TexSubImage3D	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_TexSubImage3D(GLenum target, GLint level, GLint xoffset, GLin/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_TransformFeedbackVaryings	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_TransformFeedbackVaryings(GLuint program, GLsizei count, cons/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_Uniform1f	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_Uniform1f(GLint location, GLfloat v0)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_Uniform1fv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_Uniform1fv(GLint location, GLsizei count, const GLfloat * val/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_Uniform1i	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_Uniform1i(GLint location, GLint v0)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_Uniform1iv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_Uniform1iv(GLint location, GLsizei count, const GLint * value/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_Uniform1ui	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_Uniform1ui(GLint location, GLuint v0)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_Uniform1uiv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_Uniform1uiv(GLint location, GLsizei count, const GLuint * val/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_Uniform2f	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_Uniform2f(GLint location, GLfloat v0, GLfloat v1)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_Uniform2fv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_Uniform2fv(GLint location, GLsizei count, const GLfloat * val/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_Uniform2i	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_Uniform2i(GLint location, GLint v0, GLint v1)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_Uniform2iv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_Uniform2iv(GLint location, GLsizei count, const GLint * value/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_Uniform2ui	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_Uniform2ui(GLint location, GLuint v0, GLuint v1)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_Uniform2uiv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_Uniform2uiv(GLint location, GLsizei count, const GLuint * val/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_Uniform3f	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_Uniform3f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_Uniform3fv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_Uniform3fv(GLint location, GLsizei count, const GLfloat * val/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_Uniform3i	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_Uniform3i(GLint location, GLint v0, GLint v1, GLint v2)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_Uniform3iv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_Uniform3iv(GLint location, GLsizei count, const GLint * value/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_Uniform3ui	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_Uniform3ui(GLint location, GLuint v0, GLuint v1, GLuint v2)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_Uniform3uiv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_Uniform3uiv(GLint location, GLsizei count, const GLuint * val/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_Uniform4f	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_Uniform4f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2,/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_Uniform4fv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_Uniform4fv(GLint location, GLsizei count, const GLfloat * val/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_Uniform4i	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_Uniform4i(GLint location, GLint v0, GLint v1, GLint v2, GLint/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_Uniform4iv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_Uniform4iv(GLint location, GLsizei count, const GLint * value/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_Uniform4ui	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_Uniform4ui(GLint location, GLuint v0, GLuint v1, GLuint v2, G/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_Uniform4uiv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_Uniform4uiv(GLint location, GLsizei count, const GLuint * val/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_UniformBlockBinding	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_UniformBlockBinding(GLuint program, GLuint uniformBlockIndex,/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_UniformMatrix2fv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_UniformMatrix2fv(GLint location, GLsizei count, GLboolean tra/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_UniformMatrix2x3fv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_UniformMatrix2x3fv(GLint location, GLsizei count, GLboolean t/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_UniformMatrix2x4fv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_UniformMatrix2x4fv(GLint location, GLsizei count, GLboolean t/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_UniformMatrix3fv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_UniformMatrix3fv(GLint location, GLsizei count, GLboolean tra/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_UniformMatrix3x2fv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_UniformMatrix3x2fv(GLint location, GLsizei count, GLboolean t/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_UniformMatrix3x4fv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_UniformMatrix3x4fv(GLint location, GLsizei count, GLboolean t/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_UniformMatrix4fv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_UniformMatrix4fv(GLint location, GLsizei count, GLboolean tra/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_UniformMatrix4x2fv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_UniformMatrix4x2fv(GLint location, GLsizei count, GLboolean t/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_UniformMatrix4x3fv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_UniformMatrix4x3fv(GLint location, GLsizei count, GLboolean t/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_UnmapBuffer	.\\src\\gl_core_3_3.cpp	/^static GLboolean CODEGEN_FUNCPTR Switch_UnmapBuffer(GLenum target)$/;"	f	typeref:typename:GLboolean CODEGEN_FUNCPTR	file:
Switch_UseProgram	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_UseProgram(GLuint program)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_ValidateProgram	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_ValidateProgram(GLuint program)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttrib1d	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttrib1d(GLuint index, GLdouble x)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttrib1dv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttrib1dv(GLuint index, const GLdouble * v)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttrib1f	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttrib1f(GLuint index, GLfloat x)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttrib1fv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttrib1fv(GLuint index, const GLfloat * v)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttrib1s	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttrib1s(GLuint index, GLshort x)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttrib1sv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttrib1sv(GLuint index, const GLshort * v)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttrib2d	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttrib2d(GLuint index, GLdouble x, GLdouble y)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttrib2dv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttrib2dv(GLuint index, const GLdouble * v)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttrib2f	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttrib2f(GLuint index, GLfloat x, GLfloat y)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttrib2fv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttrib2fv(GLuint index, const GLfloat * v)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttrib2s	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttrib2s(GLuint index, GLshort x, GLshort y)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttrib2sv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttrib2sv(GLuint index, const GLshort * v)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttrib3d	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttrib3d(GLuint index, GLdouble x, GLdouble y, GLdouble/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttrib3dv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttrib3dv(GLuint index, const GLdouble * v)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttrib3f	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttrib3f(GLuint index, GLfloat x, GLfloat y, GLfloat z)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttrib3fv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttrib3fv(GLuint index, const GLfloat * v)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttrib3s	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttrib3s(GLuint index, GLshort x, GLshort y, GLshort z)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttrib3sv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttrib3sv(GLuint index, const GLshort * v)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttrib4Nbv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttrib4Nbv(GLuint index, const GLbyte * v)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttrib4Niv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttrib4Niv(GLuint index, const GLint * v)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttrib4Nsv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttrib4Nsv(GLuint index, const GLshort * v)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttrib4Nub	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttrib4Nub(GLuint index, GLubyte x, GLubyte y, GLubyte /;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttrib4Nubv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttrib4Nubv(GLuint index, const GLubyte * v)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttrib4Nuiv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttrib4Nuiv(GLuint index, const GLuint * v)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttrib4Nusv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttrib4Nusv(GLuint index, const GLushort * v)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttrib4bv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttrib4bv(GLuint index, const GLbyte * v)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttrib4d	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttrib4d(GLuint index, GLdouble x, GLdouble y, GLdouble/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttrib4dv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttrib4dv(GLuint index, const GLdouble * v)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttrib4f	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttrib4f(GLuint index, GLfloat x, GLfloat y, GLfloat z,/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttrib4fv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttrib4fv(GLuint index, const GLfloat * v)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttrib4iv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttrib4iv(GLuint index, const GLint * v)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttrib4s	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttrib4s(GLuint index, GLshort x, GLshort y, GLshort z,/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttrib4sv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttrib4sv(GLuint index, const GLshort * v)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttrib4ubv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttrib4ubv(GLuint index, const GLubyte * v)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttrib4uiv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttrib4uiv(GLuint index, const GLuint * v)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttrib4usv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttrib4usv(GLuint index, const GLushort * v)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttribDivisor	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttribDivisor(GLuint index, GLuint divisor)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttribI1i	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttribI1i(GLuint index, GLint x)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttribI1iv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttribI1iv(GLuint index, const GLint * v)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttribI1ui	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttribI1ui(GLuint index, GLuint x)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttribI1uiv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttribI1uiv(GLuint index, const GLuint * v)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttribI2i	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttribI2i(GLuint index, GLint x, GLint y)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttribI2iv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttribI2iv(GLuint index, const GLint * v)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttribI2ui	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttribI2ui(GLuint index, GLuint x, GLuint y)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttribI2uiv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttribI2uiv(GLuint index, const GLuint * v)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttribI3i	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttribI3i(GLuint index, GLint x, GLint y, GLint z)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttribI3iv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttribI3iv(GLuint index, const GLint * v)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttribI3ui	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttribI3ui(GLuint index, GLuint x, GLuint y, GLuint z)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttribI3uiv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttribI3uiv(GLuint index, const GLuint * v)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttribI4bv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttribI4bv(GLuint index, const GLbyte * v)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttribI4i	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttribI4i(GLuint index, GLint x, GLint y, GLint z, GLin/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttribI4iv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttribI4iv(GLuint index, const GLint * v)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttribI4sv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttribI4sv(GLuint index, const GLshort * v)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttribI4ubv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttribI4ubv(GLuint index, const GLubyte * v)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttribI4ui	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttribI4ui(GLuint index, GLuint x, GLuint y, GLuint z, /;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttribI4uiv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttribI4uiv(GLuint index, const GLuint * v)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttribI4usv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttribI4usv(GLuint index, const GLushort * v)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttribIPointer	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttribIPointer(GLuint index, GLint size, GLenum type, G/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttribP1ui	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttribP1ui(GLuint index, GLenum type, GLboolean normali/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttribP1uiv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttribP1uiv(GLuint index, GLenum type, GLboolean normal/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttribP2ui	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttribP2ui(GLuint index, GLenum type, GLboolean normali/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttribP2uiv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttribP2uiv(GLuint index, GLenum type, GLboolean normal/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttribP3ui	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttribP3ui(GLuint index, GLenum type, GLboolean normali/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttribP3uiv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttribP3uiv(GLuint index, GLenum type, GLboolean normal/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttribP4ui	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttribP4ui(GLuint index, GLenum type, GLboolean normali/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttribP4uiv	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttribP4uiv(GLuint index, GLenum type, GLboolean normal/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_VertexAttribPointer	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_VertexAttribPointer(GLuint index, GLint size, GLenum type, GL/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_Viewport	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_Viewport(GLint x, GLint y, GLsizei width, GLsizei height)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
Switch_WaitSync	.\\src\\gl_core_3_3.cpp	/^static void CODEGEN_FUNCPTR Switch_WaitSync(GLsync sync, GLbitfield flags, GLuint64 timeout)$/;"	f	typeref:typename:void CODEGEN_FUNCPTR	file:
SymbolSet	.\\include\\freetype\\tttables.h	/^    FT_UShort  SymbolSet;$/;"	m	struct:TT_PCLT_	typeref:typename:FT_UShort
T1TABLES_H_	.\\include\\freetype\\t1tables.h	/^#define T1TABLES_H_$/;"	d
T1TYPES_H_	.\\include\\freetype\\internal\\t1types.h	/^#define T1TYPES_H_$/;"	d
T1_BLEND_BLUE_SCALE	.\\include\\freetype\\t1tables.h	/^    T1_BLEND_BLUE_SCALE,$/;"	e	enum:T1_Blend_Flags_
T1_BLEND_BLUE_SHIFT	.\\include\\freetype\\t1tables.h	/^    T1_BLEND_BLUE_SHIFT,$/;"	e	enum:T1_Blend_Flags_
T1_BLEND_BLUE_VALUES	.\\include\\freetype\\t1tables.h	/^    T1_BLEND_BLUE_VALUES,$/;"	e	enum:T1_Blend_Flags_
T1_BLEND_FAMILY_BLUES	.\\include\\freetype\\t1tables.h	/^    T1_BLEND_FAMILY_BLUES,$/;"	e	enum:T1_Blend_Flags_
T1_BLEND_FAMILY_OTHER_BLUES	.\\include\\freetype\\t1tables.h	/^    T1_BLEND_FAMILY_OTHER_BLUES,$/;"	e	enum:T1_Blend_Flags_
T1_BLEND_FORCE_BOLD	.\\include\\freetype\\t1tables.h	/^    T1_BLEND_FORCE_BOLD,$/;"	e	enum:T1_Blend_Flags_
T1_BLEND_ITALIC_ANGLE	.\\include\\freetype\\t1tables.h	/^    T1_BLEND_ITALIC_ANGLE,$/;"	e	enum:T1_Blend_Flags_
T1_BLEND_MAX	.\\include\\freetype\\t1tables.h	/^    T1_BLEND_MAX    \/* do not remove *\/$/;"	e	enum:T1_Blend_Flags_
T1_BLEND_OTHER_BLUES	.\\include\\freetype\\t1tables.h	/^    T1_BLEND_OTHER_BLUES,$/;"	e	enum:T1_Blend_Flags_
T1_BLEND_STANDARD_HEIGHT	.\\include\\freetype\\t1tables.h	/^    T1_BLEND_STANDARD_HEIGHT,$/;"	e	enum:T1_Blend_Flags_
T1_BLEND_STANDARD_WIDTH	.\\include\\freetype\\t1tables.h	/^    T1_BLEND_STANDARD_WIDTH,$/;"	e	enum:T1_Blend_Flags_
T1_BLEND_STEM_SNAP_HEIGHTS	.\\include\\freetype\\t1tables.h	/^    T1_BLEND_STEM_SNAP_HEIGHTS,$/;"	e	enum:T1_Blend_Flags_
T1_BLEND_STEM_SNAP_WIDTHS	.\\include\\freetype\\t1tables.h	/^    T1_BLEND_STEM_SNAP_WIDTHS,$/;"	e	enum:T1_Blend_Flags_
T1_BLEND_UNDERLINE_POSITION	.\\include\\freetype\\t1tables.h	/^    T1_BLEND_UNDERLINE_POSITION = 0,$/;"	e	enum:T1_Blend_Flags_
T1_BLEND_UNDERLINE_THICKNESS	.\\include\\freetype\\t1tables.h	/^    T1_BLEND_UNDERLINE_THICKNESS,$/;"	e	enum:T1_Blend_Flags_
T1_Blend	.\\include\\freetype\\t1tables.h	/^  typedef PS_BlendRec  T1_Blend;$/;"	t	typeref:typename:PS_BlendRec
T1_Blend_Flags	.\\include\\freetype\\t1tables.h	/^  } T1_Blend_Flags;$/;"	t	typeref:enum:T1_Blend_Flags_
T1_Blend_Flags_	.\\include\\freetype\\t1tables.h	/^  typedef enum  T1_Blend_Flags_$/;"	g
T1_Builder	.\\include\\freetype\\internal\\psaux.h	/^  typedef struct T1_BuilderRec_*  T1_Builder;$/;"	t	typeref:struct:T1_BuilderRec_ *
T1_BuilderRec	.\\include\\freetype\\internal\\psaux.h	/^  } T1_BuilderRec;$/;"	t	typeref:struct:T1_BuilderRec_
T1_BuilderRec_	.\\include\\freetype\\internal\\psaux.h	/^  typedef struct  T1_BuilderRec_$/;"	s
T1_Builder_Add_Contour_Func	.\\include\\freetype\\internal\\psaux.h	/^  (*T1_Builder_Add_Contour_Func)( T1_Builder  builder );$/;"	t	typeref:typename:FT_Error (*)(T1_Builder builder)
T1_Builder_Add_Point1_Func	.\\include\\freetype\\internal\\psaux.h	/^  (*T1_Builder_Add_Point1_Func)( T1_Builder  builder,$/;"	t	typeref:typename:FT_Error (*)(T1_Builder builder,FT_Pos x,FT_Pos y)
T1_Builder_Add_Point_Func	.\\include\\freetype\\internal\\psaux.h	/^  (*T1_Builder_Add_Point_Func)( T1_Builder  builder,$/;"	t	typeref:typename:void (*)(T1_Builder builder,FT_Pos x,FT_Pos y,FT_Byte flag)
T1_Builder_Check_Points_Func	.\\include\\freetype\\internal\\psaux.h	/^  (*T1_Builder_Check_Points_Func)( T1_Builder  builder,$/;"	t	typeref:typename:FT_Error (*)(T1_Builder builder,FT_Int count)
T1_Builder_Close_Contour_Func	.\\include\\freetype\\internal\\psaux.h	/^  (*T1_Builder_Close_Contour_Func)( T1_Builder  builder );$/;"	t	typeref:typename:void (*)(T1_Builder builder)
T1_Builder_Funcs	.\\include\\freetype\\internal\\psaux.h	/^  typedef const struct T1_Builder_FuncsRec_*  T1_Builder_Funcs;$/;"	t	typeref:typename:const struct T1_Builder_FuncsRec_ *
T1_Builder_FuncsRec	.\\include\\freetype\\internal\\psaux.h	/^  } T1_Builder_FuncsRec;$/;"	t	typeref:struct:T1_Builder_FuncsRec_
T1_Builder_FuncsRec_	.\\include\\freetype\\internal\\psaux.h	/^  typedef struct  T1_Builder_FuncsRec_$/;"	s
T1_Builder_Start_Point_Func	.\\include\\freetype\\internal\\psaux.h	/^  (*T1_Builder_Start_Point_Func)( T1_Builder  builder,$/;"	t	typeref:typename:FT_Error (*)(T1_Builder builder,FT_Pos x,FT_Pos y)
T1_CMap_Classes	.\\include\\freetype\\internal\\psaux.h	/^  typedef const struct T1_CMap_ClassesRec_*  T1_CMap_Classes;$/;"	t	typeref:typename:const struct T1_CMap_ClassesRec_ *
T1_CMap_ClassesRec	.\\include\\freetype\\internal\\psaux.h	/^  } T1_CMap_ClassesRec;$/;"	t	typeref:struct:T1_CMap_ClassesRec_
T1_CMap_ClassesRec_	.\\include\\freetype\\internal\\psaux.h	/^  typedef struct T1_CMap_ClassesRec_$/;"	s
T1_Decoder	.\\include\\freetype\\internal\\psaux.h	/^  typedef struct T1_DecoderRec_*              T1_Decoder;$/;"	t	typeref:struct:T1_DecoderRec_ *
T1_DecoderRec	.\\include\\freetype\\internal\\psaux.h	/^  } T1_DecoderRec;$/;"	t	typeref:struct:T1_DecoderRec_
T1_DecoderRec_	.\\include\\freetype\\internal\\psaux.h	/^  typedef struct  T1_DecoderRec_$/;"	s
T1_Decoder_Callback	.\\include\\freetype\\internal\\psaux.h	/^  (*T1_Decoder_Callback)( T1_Decoder  decoder,$/;"	t	typeref:typename:FT_Error (*)(T1_Decoder decoder,FT_UInt glyph_index)
T1_Decoder_Funcs	.\\include\\freetype\\internal\\psaux.h	/^  typedef const struct T1_Decoder_FuncsRec_*  T1_Decoder_Funcs;$/;"	t	typeref:typename:const struct T1_Decoder_FuncsRec_ *
T1_Decoder_FuncsRec	.\\include\\freetype\\internal\\psaux.h	/^  } T1_Decoder_FuncsRec;$/;"	t	typeref:struct:T1_Decoder_FuncsRec_
T1_Decoder_FuncsRec_	.\\include\\freetype\\internal\\psaux.h	/^  typedef struct  T1_Decoder_FuncsRec_$/;"	s
T1_Decoder_Zone	.\\include\\freetype\\internal\\psaux.h	/^  } T1_Decoder_ZoneRec, *T1_Decoder_Zone;$/;"	t	typeref:struct:T1_Decoder_ZoneRec_ *
T1_Decoder_ZoneRec	.\\include\\freetype\\internal\\psaux.h	/^  } T1_Decoder_ZoneRec, *T1_Decoder_Zone;$/;"	t	typeref:struct:T1_Decoder_ZoneRec_
T1_Decoder_ZoneRec_	.\\include\\freetype\\internal\\psaux.h	/^  typedef struct  T1_Decoder_ZoneRec_$/;"	s
T1_DesignMap	.\\include\\freetype\\t1tables.h	/^  typedef PS_DesignMapRec  T1_DesignMap;$/;"	t	typeref:typename:PS_DesignMapRec
T1_ENCODING_TYPE_ARRAY	.\\include\\freetype\\t1tables.h	/^    T1_ENCODING_TYPE_ARRAY,$/;"	e	enum:T1_EncodingType_
T1_ENCODING_TYPE_EXPERT	.\\include\\freetype\\t1tables.h	/^    T1_ENCODING_TYPE_EXPERT$/;"	e	enum:T1_EncodingType_
T1_ENCODING_TYPE_ISOLATIN1	.\\include\\freetype\\t1tables.h	/^    T1_ENCODING_TYPE_ISOLATIN1,$/;"	e	enum:T1_EncodingType_
T1_ENCODING_TYPE_NONE	.\\include\\freetype\\t1tables.h	/^    T1_ENCODING_TYPE_NONE = 0,$/;"	e	enum:T1_EncodingType_
T1_ENCODING_TYPE_STANDARD	.\\include\\freetype\\t1tables.h	/^    T1_ENCODING_TYPE_STANDARD,$/;"	e	enum:T1_EncodingType_
T1_Encoding	.\\include\\freetype\\internal\\t1types.h	/^  } T1_EncodingRec, *T1_Encoding;$/;"	t	typeref:struct:T1_EncodingRecRec_ *
T1_EncodingRec	.\\include\\freetype\\internal\\t1types.h	/^  } T1_EncodingRec, *T1_Encoding;$/;"	t	typeref:struct:T1_EncodingRecRec_
T1_EncodingRecRec_	.\\include\\freetype\\internal\\t1types.h	/^  typedef struct  T1_EncodingRecRec_$/;"	s
T1_EncodingType	.\\include\\freetype\\t1tables.h	/^  } T1_EncodingType;$/;"	t	typeref:enum:T1_EncodingType_
T1_EncodingType_	.\\include\\freetype\\t1tables.h	/^  typedef enum  T1_EncodingType_$/;"	g
T1_FIELD_BBOX	.\\include\\freetype\\internal\\psaux.h	/^#define T1_FIELD_BBOX(/;"	d
T1_FIELD_BOOL	.\\include\\freetype\\internal\\psaux.h	/^#define T1_FIELD_BOOL(/;"	d
T1_FIELD_CALLBACK	.\\include\\freetype\\internal\\psaux.h	/^#define T1_FIELD_CALLBACK(/;"	d
T1_FIELD_DICT_FONTDICT	.\\include\\freetype\\internal\\psaux.h	/^#define T1_FIELD_DICT_FONTDICT /;"	d
T1_FIELD_DICT_PRIVATE	.\\include\\freetype\\internal\\psaux.h	/^#define T1_FIELD_DICT_PRIVATE /;"	d
T1_FIELD_FIXED	.\\include\\freetype\\internal\\psaux.h	/^#define T1_FIELD_FIXED(/;"	d
T1_FIELD_FIXED_1000	.\\include\\freetype\\internal\\psaux.h	/^#define T1_FIELD_FIXED_1000(/;"	d
T1_FIELD_FIXED_TABLE	.\\include\\freetype\\internal\\psaux.h	/^#define T1_FIELD_FIXED_TABLE(/;"	d
T1_FIELD_FIXED_TABLE2	.\\include\\freetype\\internal\\psaux.h	/^#define T1_FIELD_FIXED_TABLE2(/;"	d
T1_FIELD_KEY	.\\include\\freetype\\internal\\psaux.h	/^#define T1_FIELD_KEY(/;"	d
T1_FIELD_LOCATION_BBOX	.\\include\\freetype\\internal\\psaux.h	/^    T1_FIELD_LOCATION_BBOX,$/;"	e	enum:T1_FieldLocation_
T1_FIELD_LOCATION_BLEND	.\\include\\freetype\\internal\\psaux.h	/^    T1_FIELD_LOCATION_BLEND,$/;"	e	enum:T1_FieldLocation_
T1_FIELD_LOCATION_CID_INFO	.\\include\\freetype\\internal\\psaux.h	/^    T1_FIELD_LOCATION_CID_INFO,$/;"	e	enum:T1_FieldLocation_
T1_FIELD_LOCATION_FACE	.\\include\\freetype\\internal\\psaux.h	/^    T1_FIELD_LOCATION_FACE,$/;"	e	enum:T1_FieldLocation_
T1_FIELD_LOCATION_FONT_DICT	.\\include\\freetype\\internal\\psaux.h	/^    T1_FIELD_LOCATION_FONT_DICT,$/;"	e	enum:T1_FieldLocation_
T1_FIELD_LOCATION_FONT_EXTRA	.\\include\\freetype\\internal\\psaux.h	/^    T1_FIELD_LOCATION_FONT_EXTRA,$/;"	e	enum:T1_FieldLocation_
T1_FIELD_LOCATION_FONT_INFO	.\\include\\freetype\\internal\\psaux.h	/^    T1_FIELD_LOCATION_FONT_INFO,$/;"	e	enum:T1_FieldLocation_
T1_FIELD_LOCATION_LOADER	.\\include\\freetype\\internal\\psaux.h	/^    T1_FIELD_LOCATION_LOADER,$/;"	e	enum:T1_FieldLocation_
T1_FIELD_LOCATION_MAX	.\\include\\freetype\\internal\\psaux.h	/^    T1_FIELD_LOCATION_MAX$/;"	e	enum:T1_FieldLocation_
T1_FIELD_LOCATION_PRIVATE	.\\include\\freetype\\internal\\psaux.h	/^    T1_FIELD_LOCATION_PRIVATE,$/;"	e	enum:T1_FieldLocation_
T1_FIELD_NUM	.\\include\\freetype\\internal\\psaux.h	/^#define T1_FIELD_NUM(/;"	d
T1_FIELD_NUM_TABLE	.\\include\\freetype\\internal\\psaux.h	/^#define T1_FIELD_NUM_TABLE(/;"	d
T1_FIELD_NUM_TABLE2	.\\include\\freetype\\internal\\psaux.h	/^#define T1_FIELD_NUM_TABLE2(/;"	d
T1_FIELD_STRING	.\\include\\freetype\\internal\\psaux.h	/^#define T1_FIELD_STRING(/;"	d
T1_FIELD_TYPE_BBOX	.\\include\\freetype\\internal\\psaux.h	/^    T1_FIELD_TYPE_BBOX,$/;"	e	enum:T1_FieldType_
T1_FIELD_TYPE_BOOL	.\\include\\freetype\\internal\\psaux.h	/^    T1_FIELD_TYPE_BOOL,$/;"	e	enum:T1_FieldType_
T1_FIELD_TYPE_CALLBACK	.\\include\\freetype\\internal\\psaux.h	/^    T1_FIELD_TYPE_CALLBACK,$/;"	e	enum:T1_FieldType_
T1_FIELD_TYPE_FIXED	.\\include\\freetype\\internal\\psaux.h	/^    T1_FIELD_TYPE_FIXED,$/;"	e	enum:T1_FieldType_
T1_FIELD_TYPE_FIXED_1000	.\\include\\freetype\\internal\\psaux.h	/^    T1_FIELD_TYPE_FIXED_1000,$/;"	e	enum:T1_FieldType_
T1_FIELD_TYPE_FIXED_ARRAY	.\\include\\freetype\\internal\\psaux.h	/^    T1_FIELD_TYPE_FIXED_ARRAY,$/;"	e	enum:T1_FieldType_
T1_FIELD_TYPE_INTEGER	.\\include\\freetype\\internal\\psaux.h	/^    T1_FIELD_TYPE_INTEGER,$/;"	e	enum:T1_FieldType_
T1_FIELD_TYPE_INTEGER_ARRAY	.\\include\\freetype\\internal\\psaux.h	/^    T1_FIELD_TYPE_INTEGER_ARRAY,$/;"	e	enum:T1_FieldType_
T1_FIELD_TYPE_KEY	.\\include\\freetype\\internal\\psaux.h	/^    T1_FIELD_TYPE_KEY,$/;"	e	enum:T1_FieldType_
T1_FIELD_TYPE_MAX	.\\include\\freetype\\internal\\psaux.h	/^    T1_FIELD_TYPE_MAX$/;"	e	enum:T1_FieldType_
T1_FIELD_TYPE_MM_BBOX	.\\include\\freetype\\internal\\psaux.h	/^    T1_FIELD_TYPE_MM_BBOX,$/;"	e	enum:T1_FieldType_
T1_FIELD_TYPE_NONE	.\\include\\freetype\\internal\\psaux.h	/^    T1_FIELD_TYPE_NONE = 0,$/;"	e	enum:T1_FieldType_
T1_FIELD_TYPE_STRING	.\\include\\freetype\\internal\\psaux.h	/^    T1_FIELD_TYPE_STRING,$/;"	e	enum:T1_FieldType_
T1_Face	.\\include\\freetype\\internal\\t1types.h	/^  typedef struct T1_FaceRec_*   T1_Face;$/;"	t	typeref:struct:T1_FaceRec_ *
T1_FaceRec	.\\include\\freetype\\internal\\t1types.h	/^  } T1_FaceRec;$/;"	t	typeref:struct:T1_FaceRec_
T1_FaceRec_	.\\include\\freetype\\internal\\t1types.h	/^  typedef struct  T1_FaceRec_$/;"	s
T1_Field	.\\include\\freetype\\internal\\psaux.h	/^  typedef struct T1_FieldRec_*   T1_Field;$/;"	t	typeref:struct:T1_FieldRec_ *
T1_FieldLocation	.\\include\\freetype\\internal\\psaux.h	/^  } T1_FieldLocation;$/;"	t	typeref:enum:T1_FieldLocation_
T1_FieldLocation_	.\\include\\freetype\\internal\\psaux.h	/^  typedef enum  T1_FieldLocation_$/;"	g
T1_FieldRec	.\\include\\freetype\\internal\\psaux.h	/^  } T1_FieldRec;$/;"	t	typeref:struct:T1_FieldRec_
T1_FieldRec_	.\\include\\freetype\\internal\\psaux.h	/^  typedef struct  T1_FieldRec_$/;"	s
T1_FieldType	.\\include\\freetype\\internal\\psaux.h	/^  } T1_FieldType;$/;"	t	typeref:enum:T1_FieldType_
T1_FieldType_	.\\include\\freetype\\internal\\psaux.h	/^  typedef enum  T1_FieldType_$/;"	g
T1_Field_ParseFunc	.\\include\\freetype\\internal\\psaux.h	/^  (*T1_Field_ParseFunc)( FT_Face     face,$/;"	t	typeref:typename:void (*)(FT_Face face,FT_Pointer parser)
T1_Font	.\\include\\freetype\\internal\\t1types.h	/^  } T1_FontRec, *T1_Font;$/;"	t	typeref:struct:T1_FontRec_ *
T1_FontInfo	.\\include\\freetype\\t1tables.h	/^  typedef PS_FontInfoRec  T1_FontInfo;$/;"	t	typeref:typename:PS_FontInfoRec
T1_FontRec	.\\include\\freetype\\internal\\t1types.h	/^  } T1_FontRec, *T1_Font;$/;"	t	typeref:struct:T1_FontRec_
T1_FontRec_	.\\include\\freetype\\internal\\t1types.h	/^  typedef struct  T1_FontRec_$/;"	s
T1_Hints	.\\include\\freetype\\internal\\pshints.h	/^  typedef struct T1_HintsRec_*  T1_Hints;$/;"	t	typeref:struct:T1_HintsRec_ *
T1_Hints_ApplyFunc	.\\include\\freetype\\internal\\pshints.h	/^  (*T1_Hints_ApplyFunc)( T1_Hints        hints,$/;"	t	typeref:typename:FT_Error (*)(T1_Hints hints,FT_Outline * outline,PSH_Globals globals,FT_Render_Mode hint_mode)
T1_Hints_CloseFunc	.\\include\\freetype\\internal\\pshints.h	/^  (*T1_Hints_CloseFunc)( T1_Hints  hints,$/;"	t	typeref:typename:FT_Error (*)(T1_Hints hints,FT_UInt end_point)
T1_Hints_Funcs	.\\include\\freetype\\internal\\pshints.h	/^  typedef const struct T1_Hints_FuncsRec_*  T1_Hints_Funcs;$/;"	t	typeref:typename:const struct T1_Hints_FuncsRec_ *
T1_Hints_FuncsRec	.\\include\\freetype\\internal\\pshints.h	/^  } T1_Hints_FuncsRec;$/;"	t	typeref:struct:T1_Hints_FuncsRec_
T1_Hints_FuncsRec_	.\\include\\freetype\\internal\\pshints.h	/^  typedef struct  T1_Hints_FuncsRec_$/;"	s
T1_Hints_OpenFunc	.\\include\\freetype\\internal\\pshints.h	/^  (*T1_Hints_OpenFunc)( T1_Hints  hints );$/;"	t	typeref:typename:void (*)(T1_Hints hints)
T1_Hints_ResetFunc	.\\include\\freetype\\internal\\pshints.h	/^  (*T1_Hints_ResetFunc)( T1_Hints  hints,$/;"	t	typeref:typename:void (*)(T1_Hints hints,FT_UInt end_point)
T1_Hints_SetStem3Func	.\\include\\freetype\\internal\\pshints.h	/^  (*T1_Hints_SetStem3Func)( T1_Hints   hints,$/;"	t	typeref:typename:void (*)(T1_Hints hints,FT_UInt dimension,FT_Fixed * coords)
T1_Hints_SetStemFunc	.\\include\\freetype\\internal\\pshints.h	/^  (*T1_Hints_SetStemFunc)( T1_Hints   hints,$/;"	t	typeref:typename:void (*)(T1_Hints hints,FT_UInt dimension,FT_Fixed * coords)
T1_MAX_CHARSTRINGS_OPERANDS	.\\include\\freetype\\config\\ftoption.h	/^#define T1_MAX_CHARSTRINGS_OPERANDS /;"	d
T1_MAX_DICT_DEPTH	.\\include\\freetype\\config\\ftoption.h	/^#define T1_MAX_DICT_DEPTH /;"	d
T1_MAX_MM_AXIS	.\\include\\freetype\\t1tables.h	/^#define T1_MAX_MM_AXIS /;"	d
T1_MAX_MM_DESIGNS	.\\include\\freetype\\t1tables.h	/^#define T1_MAX_MM_DESIGNS /;"	d
T1_MAX_MM_MAP_POINTS	.\\include\\freetype\\t1tables.h	/^#define T1_MAX_MM_MAP_POINTS /;"	d
T1_MAX_SUBRS_CALLS	.\\include\\freetype\\config\\ftoption.h	/^#define T1_MAX_SUBRS_CALLS /;"	d
T1_NEW_CALLBACK_FIELD	.\\include\\freetype\\internal\\psaux.h	/^#define T1_NEW_CALLBACK_FIELD(/;"	d
T1_NEW_SIMPLE_FIELD	.\\include\\freetype\\internal\\psaux.h	/^#define T1_NEW_SIMPLE_FIELD(/;"	d
T1_NEW_TABLE_FIELD	.\\include\\freetype\\internal\\psaux.h	/^#define T1_NEW_TABLE_FIELD(/;"	d
T1_NEW_TABLE_FIELD2	.\\include\\freetype\\internal\\psaux.h	/^#define T1_NEW_TABLE_FIELD2(/;"	d
T1_ParseState	.\\include\\freetype\\internal\\psaux.h	/^  } T1_ParseState;$/;"	t	typeref:enum:T1_ParseState_
T1_ParseState_	.\\include\\freetype\\internal\\psaux.h	/^  typedef enum  T1_ParseState_$/;"	g
T1_Parse_Have_Moveto	.\\include\\freetype\\internal\\psaux.h	/^    T1_Parse_Have_Moveto,$/;"	e	enum:T1_ParseState_
T1_Parse_Have_Path	.\\include\\freetype\\internal\\psaux.h	/^    T1_Parse_Have_Path$/;"	e	enum:T1_ParseState_
T1_Parse_Have_Width	.\\include\\freetype\\internal\\psaux.h	/^    T1_Parse_Have_Width,$/;"	e	enum:T1_ParseState_
T1_Parse_Start	.\\include\\freetype\\internal\\psaux.h	/^    T1_Parse_Start,$/;"	e	enum:T1_ParseState_
T1_Private	.\\include\\freetype\\t1tables.h	/^  typedef PS_PrivateRec  T1_Private;$/;"	t	typeref:typename:PS_PrivateRec
T1_TOKEN_TYPE_ANY	.\\include\\freetype\\internal\\psaux.h	/^    T1_TOKEN_TYPE_ANY,$/;"	e	enum:T1_TokenType_
T1_TOKEN_TYPE_ARRAY	.\\include\\freetype\\internal\\psaux.h	/^    T1_TOKEN_TYPE_ARRAY,$/;"	e	enum:T1_TokenType_
T1_TOKEN_TYPE_KEY	.\\include\\freetype\\internal\\psaux.h	/^    T1_TOKEN_TYPE_KEY, \/* aka `name' *\/$/;"	e	enum:T1_TokenType_
T1_TOKEN_TYPE_MAX	.\\include\\freetype\\internal\\psaux.h	/^    T1_TOKEN_TYPE_MAX$/;"	e	enum:T1_TokenType_
T1_TOKEN_TYPE_NONE	.\\include\\freetype\\internal\\psaux.h	/^    T1_TOKEN_TYPE_NONE = 0,$/;"	e	enum:T1_TokenType_
T1_TOKEN_TYPE_STRING	.\\include\\freetype\\internal\\psaux.h	/^    T1_TOKEN_TYPE_STRING,$/;"	e	enum:T1_TokenType_
T1_Token	.\\include\\freetype\\internal\\psaux.h	/^  typedef struct T1_TokenRec_*   T1_Token;$/;"	t	typeref:struct:T1_TokenRec_ *
T1_TokenRec	.\\include\\freetype\\internal\\psaux.h	/^  } T1_TokenRec;$/;"	t	typeref:struct:T1_TokenRec_
T1_TokenRec_	.\\include\\freetype\\internal\\psaux.h	/^  typedef struct  T1_TokenRec_$/;"	s
T1_TokenType	.\\include\\freetype\\internal\\psaux.h	/^  } T1_TokenType;$/;"	t	typeref:enum:T1_TokenType_
T1_TokenType_	.\\include\\freetype\\internal\\psaux.h	/^  typedef enum  T1_TokenType_$/;"	g
T2_Hints	.\\include\\freetype\\internal\\pshints.h	/^  typedef struct T2_HintsRec_*  T2_Hints;$/;"	t	typeref:struct:T2_HintsRec_ *
T2_Hints_ApplyFunc	.\\include\\freetype\\internal\\pshints.h	/^  (*T2_Hints_ApplyFunc)( T2_Hints        hints,$/;"	t	typeref:typename:FT_Error (*)(T2_Hints hints,FT_Outline * outline,PSH_Globals globals,FT_Render_Mode hint_mode)
T2_Hints_CloseFunc	.\\include\\freetype\\internal\\pshints.h	/^  (*T2_Hints_CloseFunc)( T2_Hints  hints,$/;"	t	typeref:typename:FT_Error (*)(T2_Hints hints,FT_UInt end_point)
T2_Hints_CounterFunc	.\\include\\freetype\\internal\\pshints.h	/^  (*T2_Hints_CounterFunc)( T2_Hints        hints,$/;"	t	typeref:typename:void (*)(T2_Hints hints,FT_UInt bit_count,const FT_Byte * bytes)
T2_Hints_Funcs	.\\include\\freetype\\internal\\pshints.h	/^  typedef const struct T2_Hints_FuncsRec_*  T2_Hints_Funcs;$/;"	t	typeref:typename:const struct T2_Hints_FuncsRec_ *
T2_Hints_FuncsRec	.\\include\\freetype\\internal\\pshints.h	/^  } T2_Hints_FuncsRec;$/;"	t	typeref:struct:T2_Hints_FuncsRec_
T2_Hints_FuncsRec_	.\\include\\freetype\\internal\\pshints.h	/^  typedef struct  T2_Hints_FuncsRec_$/;"	s
T2_Hints_MaskFunc	.\\include\\freetype\\internal\\pshints.h	/^  (*T2_Hints_MaskFunc)( T2_Hints        hints,$/;"	t	typeref:typename:void (*)(T2_Hints hints,FT_UInt end_point,FT_UInt bit_count,const FT_Byte * bytes)
T2_Hints_OpenFunc	.\\include\\freetype\\internal\\pshints.h	/^  (*T2_Hints_OpenFunc)( T2_Hints  hints );$/;"	t	typeref:typename:void (*)(T2_Hints hints)
T2_Hints_StemsFunc	.\\include\\freetype\\internal\\pshints.h	/^  (*T2_Hints_StemsFunc)( T2_Hints   hints,$/;"	t	typeref:typename:void (*)(T2_Hints hints,FT_UInt dimension,FT_Int count,FT_Fixed * coordinates)
TRUE	.\\include\\freetype\\internal\\ftobjs.h	/^#define TRUE /;"	d
TTAGS_H_	.\\include\\freetype\\tttags.h	/^#define TTAGS_H_$/;"	d
TTAG_BASE	.\\include\\freetype\\tttags.h	/^#define TTAG_BASE /;"	d
TTAG_BDF	.\\include\\freetype\\tttags.h	/^#define TTAG_BDF /;"	d
TTAG_CBDT	.\\include\\freetype\\tttags.h	/^#define TTAG_CBDT /;"	d
TTAG_CBLC	.\\include\\freetype\\tttags.h	/^#define TTAG_CBLC /;"	d
TTAG_CFF	.\\include\\freetype\\tttags.h	/^#define TTAG_CFF /;"	d
TTAG_CID	.\\include\\freetype\\tttags.h	/^#define TTAG_CID /;"	d
TTAG_DSIG	.\\include\\freetype\\tttags.h	/^#define TTAG_DSIG /;"	d
TTAG_EBDT	.\\include\\freetype\\tttags.h	/^#define TTAG_EBDT /;"	d
TTAG_EBLC	.\\include\\freetype\\tttags.h	/^#define TTAG_EBLC /;"	d
TTAG_EBSC	.\\include\\freetype\\tttags.h	/^#define TTAG_EBSC /;"	d
TTAG_FOND	.\\include\\freetype\\tttags.h	/^#define TTAG_FOND /;"	d
TTAG_GDEF	.\\include\\freetype\\tttags.h	/^#define TTAG_GDEF /;"	d
TTAG_GPOS	.\\include\\freetype\\tttags.h	/^#define TTAG_GPOS /;"	d
TTAG_GSUB	.\\include\\freetype\\tttags.h	/^#define TTAG_GSUB /;"	d
TTAG_JSTF	.\\include\\freetype\\tttags.h	/^#define TTAG_JSTF /;"	d
TTAG_LTSH	.\\include\\freetype\\tttags.h	/^#define TTAG_LTSH /;"	d
TTAG_LWFN	.\\include\\freetype\\tttags.h	/^#define TTAG_LWFN /;"	d
TTAG_MATH	.\\include\\freetype\\tttags.h	/^#define TTAG_MATH /;"	d
TTAG_META	.\\include\\freetype\\tttags.h	/^#define TTAG_META /;"	d
TTAG_MMFX	.\\include\\freetype\\tttags.h	/^#define TTAG_MMFX /;"	d
TTAG_MMSD	.\\include\\freetype\\tttags.h	/^#define TTAG_MMSD /;"	d
TTAG_OS2	.\\include\\freetype\\tttags.h	/^#define TTAG_OS2 /;"	d
TTAG_OTTO	.\\include\\freetype\\tttags.h	/^#define TTAG_OTTO /;"	d
TTAG_PCLT	.\\include\\freetype\\tttags.h	/^#define TTAG_PCLT /;"	d
TTAG_POST	.\\include\\freetype\\tttags.h	/^#define TTAG_POST /;"	d
TTAG_SING	.\\include\\freetype\\tttags.h	/^#define TTAG_SING /;"	d
TTAG_TYP1	.\\include\\freetype\\tttags.h	/^#define TTAG_TYP1 /;"	d
TTAG_VDMX	.\\include\\freetype\\tttags.h	/^#define TTAG_VDMX /;"	d
TTAG_avar	.\\include\\freetype\\tttags.h	/^#define TTAG_avar /;"	d
TTAG_bdat	.\\include\\freetype\\tttags.h	/^#define TTAG_bdat /;"	d
TTAG_bhed	.\\include\\freetype\\tttags.h	/^#define TTAG_bhed /;"	d
TTAG_bloc	.\\include\\freetype\\tttags.h	/^#define TTAG_bloc /;"	d
TTAG_bsln	.\\include\\freetype\\tttags.h	/^#define TTAG_bsln /;"	d
TTAG_cmap	.\\include\\freetype\\tttags.h	/^#define TTAG_cmap /;"	d
TTAG_cvar	.\\include\\freetype\\tttags.h	/^#define TTAG_cvar /;"	d
TTAG_cvt	.\\include\\freetype\\tttags.h	/^#define TTAG_cvt /;"	d
TTAG_feat	.\\include\\freetype\\tttags.h	/^#define TTAG_feat /;"	d
TTAG_fpgm	.\\include\\freetype\\tttags.h	/^#define TTAG_fpgm /;"	d
TTAG_fvar	.\\include\\freetype\\tttags.h	/^#define TTAG_fvar /;"	d
TTAG_gasp	.\\include\\freetype\\tttags.h	/^#define TTAG_gasp /;"	d
TTAG_glyf	.\\include\\freetype\\tttags.h	/^#define TTAG_glyf /;"	d
TTAG_gvar	.\\include\\freetype\\tttags.h	/^#define TTAG_gvar /;"	d
TTAG_hdmx	.\\include\\freetype\\tttags.h	/^#define TTAG_hdmx /;"	d
TTAG_head	.\\include\\freetype\\tttags.h	/^#define TTAG_head /;"	d
TTAG_hhea	.\\include\\freetype\\tttags.h	/^#define TTAG_hhea /;"	d
TTAG_hmtx	.\\include\\freetype\\tttags.h	/^#define TTAG_hmtx /;"	d
TTAG_just	.\\include\\freetype\\tttags.h	/^#define TTAG_just /;"	d
TTAG_kern	.\\include\\freetype\\tttags.h	/^#define TTAG_kern /;"	d
TTAG_lcar	.\\include\\freetype\\tttags.h	/^#define TTAG_lcar /;"	d
TTAG_loca	.\\include\\freetype\\tttags.h	/^#define TTAG_loca /;"	d
TTAG_maxp	.\\include\\freetype\\tttags.h	/^#define TTAG_maxp /;"	d
TTAG_mort	.\\include\\freetype\\tttags.h	/^#define TTAG_mort /;"	d
TTAG_morx	.\\include\\freetype\\tttags.h	/^#define TTAG_morx /;"	d
TTAG_name	.\\include\\freetype\\tttags.h	/^#define TTAG_name /;"	d
TTAG_opbd	.\\include\\freetype\\tttags.h	/^#define TTAG_opbd /;"	d
TTAG_post	.\\include\\freetype\\tttags.h	/^#define TTAG_post /;"	d
TTAG_prep	.\\include\\freetype\\tttags.h	/^#define TTAG_prep /;"	d
TTAG_prop	.\\include\\freetype\\tttags.h	/^#define TTAG_prop /;"	d
TTAG_sbix	.\\include\\freetype\\tttags.h	/^#define TTAG_sbix /;"	d
TTAG_sfnt	.\\include\\freetype\\tttags.h	/^#define TTAG_sfnt /;"	d
TTAG_trak	.\\include\\freetype\\tttags.h	/^#define TTAG_trak /;"	d
TTAG_true	.\\include\\freetype\\tttags.h	/^#define TTAG_true /;"	d
TTAG_ttc	.\\include\\freetype\\tttags.h	/^#define TTAG_ttc /;"	d
TTAG_ttcf	.\\include\\freetype\\tttags.h	/^#define TTAG_ttcf /;"	d
TTAG_typ1	.\\include\\freetype\\tttags.h	/^#define TTAG_typ1 /;"	d
TTAG_vhea	.\\include\\freetype\\tttags.h	/^#define TTAG_vhea /;"	d
TTAG_vmtx	.\\include\\freetype\\tttags.h	/^#define TTAG_vmtx /;"	d
TTAG_wOFF	.\\include\\freetype\\tttags.h	/^#define TTAG_wOFF /;"	d
TTC_HeaderRec	.\\include\\freetype\\internal\\tttypes.h	/^  } TTC_HeaderRec;$/;"	t	typeref:struct:TTC_HeaderRec_
TTC_HeaderRec_	.\\include\\freetype\\internal\\tttypes.h	/^  typedef struct  TTC_HeaderRec_$/;"	s
TTNAMEID_H_	.\\include\\freetype\\ttnameid.h	/^#define TTNAMEID_H_$/;"	d
TTTABLES_H_	.\\include\\freetype\\tttables.h	/^#define TTTABLES_H_$/;"	d
TTTYPES_H_	.\\include\\freetype\\internal\\tttypes.h	/^#define TTTYPES_H_$/;"	d
TTUNPAT_H_	.\\include\\freetype\\ttunpat.h	/^#define TTUNPAT_H_$/;"	d
TT_ADOBE_ID_CUSTOM	.\\include\\freetype\\ttnameid.h	/^#define TT_ADOBE_ID_CUSTOM /;"	d
TT_ADOBE_ID_EXPERT	.\\include\\freetype\\ttnameid.h	/^#define TT_ADOBE_ID_EXPERT /;"	d
TT_ADOBE_ID_LATIN_1	.\\include\\freetype\\ttnameid.h	/^#define TT_ADOBE_ID_LATIN_1 /;"	d
TT_ADOBE_ID_STANDARD	.\\include\\freetype\\ttnameid.h	/^#define TT_ADOBE_ID_STANDARD /;"	d
TT_APPLE_ID_DEFAULT	.\\include\\freetype\\ttnameid.h	/^#define TT_APPLE_ID_DEFAULT /;"	d
TT_APPLE_ID_ISO_10646	.\\include\\freetype\\ttnameid.h	/^#define TT_APPLE_ID_ISO_10646 /;"	d
TT_APPLE_ID_UNICODE_1_1	.\\include\\freetype\\ttnameid.h	/^#define TT_APPLE_ID_UNICODE_1_1 /;"	d
TT_APPLE_ID_UNICODE_2_0	.\\include\\freetype\\ttnameid.h	/^#define TT_APPLE_ID_UNICODE_2_0 /;"	d
TT_APPLE_ID_UNICODE_32	.\\include\\freetype\\ttnameid.h	/^#define TT_APPLE_ID_UNICODE_32 /;"	d
TT_APPLE_ID_VARIANT_SELECTOR	.\\include\\freetype\\ttnameid.h	/^#define TT_APPLE_ID_VARIANT_SELECTOR /;"	d
TT_BDF	.\\include\\freetype\\internal\\tttypes.h	/^  } TT_BDFRec, *TT_BDF;$/;"	t	typeref:struct:TT_BDFRec_ *
TT_BDFRec	.\\include\\freetype\\internal\\tttypes.h	/^  } TT_BDFRec, *TT_BDF;$/;"	t	typeref:struct:TT_BDFRec_
TT_BDFRec_	.\\include\\freetype\\internal\\tttypes.h	/^  typedef struct  TT_BDFRec_$/;"	s
TT_CMapInfo	.\\include\\freetype\\internal\\services\\svttcmap.h	/^  } TT_CMapInfo;$/;"	t	typeref:struct:TT_CMapInfo_
TT_CMapInfo_	.\\include\\freetype\\internal\\services\\svttcmap.h	/^  typedef struct  TT_CMapInfo_$/;"	s
TT_CMap_Info_GetFunc	.\\include\\freetype\\internal\\services\\svttcmap.h	/^  (*TT_CMap_Info_GetFunc)( FT_CharMap    charmap,$/;"	t	typeref:typename:FT_Error (*)(FT_CharMap charmap,TT_CMapInfo * cmap_info)
TT_CONFIG_CMAP_FORMAT_0	.\\include\\freetype\\config\\ftoption.h	/^#define TT_CONFIG_CMAP_FORMAT_0$/;"	d
TT_CONFIG_CMAP_FORMAT_10	.\\include\\freetype\\config\\ftoption.h	/^#define TT_CONFIG_CMAP_FORMAT_10$/;"	d
TT_CONFIG_CMAP_FORMAT_12	.\\include\\freetype\\config\\ftoption.h	/^#define TT_CONFIG_CMAP_FORMAT_12$/;"	d
TT_CONFIG_CMAP_FORMAT_13	.\\include\\freetype\\config\\ftoption.h	/^#define TT_CONFIG_CMAP_FORMAT_13$/;"	d
TT_CONFIG_CMAP_FORMAT_14	.\\include\\freetype\\config\\ftoption.h	/^#define TT_CONFIG_CMAP_FORMAT_14$/;"	d
TT_CONFIG_CMAP_FORMAT_2	.\\include\\freetype\\config\\ftoption.h	/^#define TT_CONFIG_CMAP_FORMAT_2$/;"	d
TT_CONFIG_CMAP_FORMAT_4	.\\include\\freetype\\config\\ftoption.h	/^#define TT_CONFIG_CMAP_FORMAT_4$/;"	d
TT_CONFIG_CMAP_FORMAT_6	.\\include\\freetype\\config\\ftoption.h	/^#define TT_CONFIG_CMAP_FORMAT_6$/;"	d
TT_CONFIG_CMAP_FORMAT_8	.\\include\\freetype\\config\\ftoption.h	/^#define TT_CONFIG_CMAP_FORMAT_8$/;"	d
TT_CONFIG_OPTION_BDF	.\\include\\freetype\\config\\ftoption.h	/^#define TT_CONFIG_OPTION_BDF$/;"	d
TT_CONFIG_OPTION_BYTECODE_INTERPRETER	.\\include\\freetype\\config\\ftoption.h	/^#define TT_CONFIG_OPTION_BYTECODE_INTERPRETER$/;"	d
TT_CONFIG_OPTION_EMBEDDED_BITMAPS	.\\include\\freetype\\config\\ftoption.h	/^#define TT_CONFIG_OPTION_EMBEDDED_BITMAPS$/;"	d
TT_CONFIG_OPTION_GX_VAR_SUPPORT	.\\include\\freetype\\config\\ftoption.h	/^#define TT_CONFIG_OPTION_GX_VAR_SUPPORT$/;"	d
TT_CONFIG_OPTION_MAX_RUNNABLE_OPCODES	.\\include\\freetype\\config\\ftoption.h	/^#define TT_CONFIG_OPTION_MAX_RUNNABLE_OPCODES /;"	d
TT_CONFIG_OPTION_POSTSCRIPT_NAMES	.\\include\\freetype\\config\\ftoption.h	/^#define TT_CONFIG_OPTION_POSTSCRIPT_NAMES$/;"	d
TT_CONFIG_OPTION_SFNT_NAMES	.\\include\\freetype\\config\\ftoption.h	/^#define TT_CONFIG_OPTION_SFNT_NAMES$/;"	d
TT_Done_Face_Func	.\\include\\freetype\\internal\\sfnt.h	/^  (*TT_Done_Face_Func)( TT_Face  face );$/;"	t	typeref:typename:void (*)(TT_Face face)
TT_ExecContext	.\\include\\freetype\\internal\\tttypes.h	/^  typedef struct TT_ExecContextRec_*  TT_ExecContext;$/;"	t	typeref:struct:TT_ExecContextRec_ *
TT_Face	.\\include\\freetype\\internal\\tttypes.h	/^  typedef struct TT_FaceRec_*  TT_Face;$/;"	t	typeref:struct:TT_FaceRec_ *
TT_FaceRec	.\\include\\freetype\\internal\\tttypes.h	/^  } TT_FaceRec;$/;"	t	typeref:struct:TT_FaceRec_
TT_FaceRec_	.\\include\\freetype\\internal\\tttypes.h	/^  typedef struct  TT_FaceRec_$/;"	s
TT_Face_GetKerningFunc	.\\include\\freetype\\internal\\sfnt.h	/^  (*TT_Face_GetKerningFunc)( TT_Face  face,$/;"	t	typeref:typename:FT_Int (*)(TT_Face face,FT_UInt left_glyph,FT_UInt right_glyph)
TT_Find_SBit_Image_Func	.\\include\\freetype\\internal\\sfnt.h	/^  (*TT_Find_SBit_Image_Func)( TT_Face          face,$/;"	t	typeref:typename:FT_Error (*)(TT_Face face,FT_UInt glyph_index,FT_ULong strike_index,TT_SBit_Range * arange,TT_SBit_Strike * astrike,FT_ULong * aglyph_offset)
TT_Free_Table_Func	.\\include\\freetype\\internal\\sfnt.h	/^  (*TT_Free_Table_Func)( TT_Face  face );$/;"	t	typeref:typename:void (*)(TT_Face face)
TT_GASP_DOGRAY	.\\include\\freetype\\internal\\tttypes.h	/^#define TT_GASP_DOGRAY /;"	d
TT_GASP_GRIDFIT	.\\include\\freetype\\internal\\tttypes.h	/^#define TT_GASP_GRIDFIT /;"	d
TT_GaspRange	.\\include\\freetype\\internal\\tttypes.h	/^  } TT_GaspRangeRec, *TT_GaspRange;$/;"	t	typeref:struct:TT_GaspRangeRec_ *
TT_GaspRangeRec	.\\include\\freetype\\internal\\tttypes.h	/^  } TT_GaspRangeRec, *TT_GaspRange;$/;"	t	typeref:struct:TT_GaspRangeRec_
TT_GaspRangeRec_	.\\include\\freetype\\internal\\tttypes.h	/^  typedef struct  TT_GaspRangeRec_$/;"	s
TT_GaspRec	.\\include\\freetype\\internal\\tttypes.h	/^  } TT_GaspRec;$/;"	t	typeref:struct:TT_Gasp_
TT_Gasp_	.\\include\\freetype\\internal\\tttypes.h	/^  typedef struct  TT_Gasp_$/;"	s
TT_Get_Metrics_Func	.\\include\\freetype\\internal\\sfnt.h	/^  (*TT_Get_Metrics_Func)( TT_Face     face,$/;"	t	typeref:typename:void (*)(TT_Face face,FT_Bool vertical,FT_UInt gindex,FT_Short * abearing,FT_UShort * aadvance)
TT_Get_Name_Func	.\\include\\freetype\\internal\\sfnt.h	/^  (*TT_Get_Name_Func)( TT_Face      face,$/;"	t	typeref:typename:FT_Error (*)(TT_Face face,FT_UShort nameid,FT_String ** name)
TT_Get_PS_Name_Func	.\\include\\freetype\\internal\\sfnt.h	/^  (*TT_Get_PS_Name_Func)( TT_Face      face,$/;"	t	typeref:typename:FT_Error (*)(TT_Face face,FT_UInt idx,FT_String ** PSname)
TT_Glyf_GetLocationFunc	.\\include\\freetype\\internal\\services\\svttglyf.h	/^  (*TT_Glyf_GetLocationFunc)( FT_Face    face,$/;"	t	typeref:typename:FT_ULong (*)(FT_Face face,FT_UInt gindex,FT_ULong * psize)
TT_GlyphZone	.\\include\\freetype\\internal\\tttypes.h	/^  } TT_GlyphZoneRec, *TT_GlyphZone;$/;"	t	typeref:struct:TT_GlyphZoneRec_ *
TT_GlyphZoneRec	.\\include\\freetype\\internal\\tttypes.h	/^  } TT_GlyphZoneRec, *TT_GlyphZone;$/;"	t	typeref:struct:TT_GlyphZoneRec_
TT_GlyphZoneRec_	.\\include\\freetype\\internal\\tttypes.h	/^  typedef struct  TT_GlyphZoneRec_$/;"	s
TT_Header	.\\include\\freetype\\tttables.h	/^  } TT_Header;$/;"	t	typeref:struct:TT_Header_
TT_Header_	.\\include\\freetype\\tttables.h	/^  typedef struct  TT_Header_$/;"	s
TT_HoriHeader	.\\include\\freetype\\tttables.h	/^  } TT_HoriHeader;$/;"	t	typeref:struct:TT_HoriHeader_
TT_HoriHeader_	.\\include\\freetype\\tttables.h	/^  typedef struct  TT_HoriHeader_$/;"	s
TT_INTERPRETER_VERSION_35	.\\include\\freetype\\ftttdrv.h	/^#define TT_INTERPRETER_VERSION_35 /;"	d
TT_INTERPRETER_VERSION_38	.\\include\\freetype\\ftttdrv.h	/^#define TT_INTERPRETER_VERSION_38 /;"	d
TT_INTERPRETER_VERSION_40	.\\include\\freetype\\ftttdrv.h	/^#define TT_INTERPRETER_VERSION_40 /;"	d
TT_ISO_ID_10646	.\\include\\freetype\\ttnameid.h	/^#define TT_ISO_ID_10646 /;"	d
TT_ISO_ID_7BIT_ASCII	.\\include\\freetype\\ttnameid.h	/^#define TT_ISO_ID_7BIT_ASCII /;"	d
TT_ISO_ID_8859_1	.\\include\\freetype\\ttnameid.h	/^#define TT_ISO_ID_8859_1 /;"	d
TT_Init_Face_Func	.\\include\\freetype\\internal\\sfnt.h	/^  (*TT_Init_Face_Func)( FT_Stream      stream,$/;"	t	typeref:typename:FT_Error (*)(FT_Stream stream,TT_Face face,FT_Int face_index,FT_Int num_params,FT_Parameter * params)
TT_Interpreter	.\\include\\freetype\\internal\\tttypes.h	/^  (*TT_Interpreter)( void*  exec_context );$/;"	t	typeref:typename:FT_Error (*)(void * exec_context)
TT_Load_Any_Func	.\\include\\freetype\\internal\\sfnt.h	/^  (*TT_Load_Any_Func)( TT_Face    face,$/;"	t	typeref:typename:FT_Error (*)(TT_Face face,FT_ULong tag,FT_Long offset,FT_Byte * buffer,FT_ULong * length)
TT_Load_Face_Func	.\\include\\freetype\\internal\\sfnt.h	/^  (*TT_Load_Face_Func)( FT_Stream      stream,$/;"	t	typeref:typename:FT_Error (*)(FT_Stream stream,TT_Face face,FT_Int face_index,FT_Int num_params,FT_Parameter * params)
TT_Load_Metrics_Func	.\\include\\freetype\\internal\\sfnt.h	/^  (*TT_Load_Metrics_Func)( TT_Face    face,$/;"	t	typeref:typename:FT_Error (*)(TT_Face face,FT_Stream stream,FT_Bool vertical)
TT_Load_SBit_Image_Func	.\\include\\freetype\\internal\\sfnt.h	/^  (*TT_Load_SBit_Image_Func)( TT_Face              face,$/;"	t	typeref:typename:FT_Error (*)(TT_Face face,FT_ULong strike_index,FT_UInt glyph_index,FT_UInt load_flags,FT_Stream stream,FT_Bitmap * amap,TT_SBit_MetricsRec * ametrics)
TT_Load_SBit_Metrics_Func	.\\include\\freetype\\internal\\sfnt.h	/^  (*TT_Load_SBit_Metrics_Func)( FT_Stream        stream,$/;"	t	typeref:typename:FT_Error (*)(FT_Stream stream,TT_SBit_Range range,TT_SBit_Metrics metrics)
TT_Load_Strike_Metrics_Func	.\\include\\freetype\\internal\\sfnt.h	/^  (*TT_Load_Strike_Metrics_Func)( TT_Face           face,$/;"	t	typeref:typename:FT_Error (*)(TT_Face face,FT_ULong strike_index,FT_Size_Metrics * metrics)
TT_Load_Table_Func	.\\include\\freetype\\internal\\sfnt.h	/^  (*TT_Load_Table_Func)( TT_Face    face,$/;"	t	typeref:typename:FT_Error (*)(TT_Face face,FT_Stream stream)
TT_Loader	.\\include\\freetype\\internal\\tttypes.h	/^  typedef struct TT_LoaderRec_*  TT_Loader;$/;"	t	typeref:struct:TT_LoaderRec_ *
TT_LoaderRec	.\\include\\freetype\\internal\\tttypes.h	/^  } TT_LoaderRec;$/;"	t	typeref:struct:TT_LoaderRec_
TT_LoaderRec_	.\\include\\freetype\\internal\\tttypes.h	/^  typedef struct  TT_LoaderRec_$/;"	s
TT_Loader_EndGlyphFunc	.\\include\\freetype\\internal\\tttypes.h	/^  (*TT_Loader_EndGlyphFunc)( TT_Loader  loader );$/;"	t	typeref:typename:void (*)(TT_Loader loader)
TT_Loader_GotoTableFunc	.\\include\\freetype\\internal\\tttypes.h	/^  (*TT_Loader_GotoTableFunc)( TT_Face    face,$/;"	t	typeref:typename:FT_Error (*)(TT_Face face,FT_ULong tag,FT_Stream stream,FT_ULong * length)
TT_Loader_ReadGlyphFunc	.\\include\\freetype\\internal\\tttypes.h	/^  (*TT_Loader_ReadGlyphFunc)( TT_Loader  loader );$/;"	t	typeref:typename:FT_Error (*)(TT_Loader loader)
TT_Loader_StartGlyphFunc	.\\include\\freetype\\internal\\tttypes.h	/^  (*TT_Loader_StartGlyphFunc)( TT_Loader  loader,$/;"	t	typeref:typename:FT_Error (*)(TT_Loader loader,FT_UInt glyph_index,FT_ULong offset,FT_UInt byte_count)
TT_LongMetrics	.\\include\\freetype\\internal\\tttypes.h	/^  } TT_LongMetricsRec, *TT_LongMetrics;$/;"	t	typeref:struct:TT_LongMetricsRec_ *
TT_LongMetricsRec	.\\include\\freetype\\internal\\tttypes.h	/^  } TT_LongMetricsRec, *TT_LongMetrics;$/;"	t	typeref:struct:TT_LongMetricsRec_
TT_LongMetricsRec_	.\\include\\freetype\\internal\\tttypes.h	/^  typedef struct  TT_LongMetricsRec_$/;"	s
TT_MAC_ID_ARABIC	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_ID_ARABIC /;"	d
TT_MAC_ID_ARMENIAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_ID_ARMENIAN /;"	d
TT_MAC_ID_BENGALI	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_ID_BENGALI /;"	d
TT_MAC_ID_BURMESE	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_ID_BURMESE /;"	d
TT_MAC_ID_DEVANAGARI	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_ID_DEVANAGARI /;"	d
TT_MAC_ID_GEEZ	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_ID_GEEZ /;"	d
TT_MAC_ID_GEORGIAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_ID_GEORGIAN /;"	d
TT_MAC_ID_GREEK	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_ID_GREEK /;"	d
TT_MAC_ID_GUJARATI	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_ID_GUJARATI /;"	d
TT_MAC_ID_GURMUKHI	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_ID_GURMUKHI /;"	d
TT_MAC_ID_HEBREW	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_ID_HEBREW /;"	d
TT_MAC_ID_JAPANESE	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_ID_JAPANESE /;"	d
TT_MAC_ID_KANNADA	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_ID_KANNADA /;"	d
TT_MAC_ID_KHMER	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_ID_KHMER /;"	d
TT_MAC_ID_KOREAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_ID_KOREAN /;"	d
TT_MAC_ID_LAOTIAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_ID_LAOTIAN /;"	d
TT_MAC_ID_MALAYALAM	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_ID_MALAYALAM /;"	d
TT_MAC_ID_MALDIVIAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_ID_MALDIVIAN /;"	d
TT_MAC_ID_MONGOLIAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_ID_MONGOLIAN /;"	d
TT_MAC_ID_ORIYA	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_ID_ORIYA /;"	d
TT_MAC_ID_ROMAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_ID_ROMAN /;"	d
TT_MAC_ID_RSYMBOL	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_ID_RSYMBOL /;"	d
TT_MAC_ID_RUSSIAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_ID_RUSSIAN /;"	d
TT_MAC_ID_SIMPLIFIED_CHINESE	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_ID_SIMPLIFIED_CHINESE /;"	d
TT_MAC_ID_SINDHI	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_ID_SINDHI /;"	d
TT_MAC_ID_SINHALESE	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_ID_SINHALESE /;"	d
TT_MAC_ID_SLAVIC	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_ID_SLAVIC /;"	d
TT_MAC_ID_TAMIL	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_ID_TAMIL /;"	d
TT_MAC_ID_TELUGU	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_ID_TELUGU /;"	d
TT_MAC_ID_THAI	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_ID_THAI /;"	d
TT_MAC_ID_TIBETAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_ID_TIBETAN /;"	d
TT_MAC_ID_TRADITIONAL_CHINESE	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_ID_TRADITIONAL_CHINESE /;"	d
TT_MAC_ID_UNINTERP	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_ID_UNINTERP /;"	d
TT_MAC_ID_VIETNAMESE	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_ID_VIETNAMESE /;"	d
TT_MAC_LANGID_AFRIKAANS	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_AFRIKAANS /;"	d
TT_MAC_LANGID_ALBANIAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_ALBANIAN /;"	d
TT_MAC_LANGID_AMHARIC	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_AMHARIC /;"	d
TT_MAC_LANGID_ARABIC	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_ARABIC /;"	d
TT_MAC_LANGID_ARMENIAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_ARMENIAN /;"	d
TT_MAC_LANGID_ASSAMESE	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_ASSAMESE /;"	d
TT_MAC_LANGID_AYMARA	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_AYMARA /;"	d
TT_MAC_LANGID_AZERBAIJANI	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_AZERBAIJANI /;"	d
TT_MAC_LANGID_AZERBAIJANI_ARABIC_SCRIPT	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_AZERBAIJANI_ARABIC_SCRIPT /;"	d
TT_MAC_LANGID_AZERBAIJANI_CYRILLIC_SCRIPT	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_AZERBAIJANI_CYRILLIC_SCRIPT /;"	d
TT_MAC_LANGID_AZERBAIJANI_ROMAN_SCRIPT	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_AZERBAIJANI_ROMAN_SCRIPT /;"	d
TT_MAC_LANGID_BASQUE	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_BASQUE /;"	d
TT_MAC_LANGID_BENGALI	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_BENGALI /;"	d
TT_MAC_LANGID_BRETON	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_BRETON /;"	d
TT_MAC_LANGID_BULGARIAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_BULGARIAN /;"	d
TT_MAC_LANGID_BURMESE	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_BURMESE /;"	d
TT_MAC_LANGID_BYELORUSSIAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_BYELORUSSIAN /;"	d
TT_MAC_LANGID_CATALAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_CATALAN /;"	d
TT_MAC_LANGID_CHEWA	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_CHEWA /;"	d
TT_MAC_LANGID_CHINESE_SIMPLIFIED	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_CHINESE_SIMPLIFIED /;"	d
TT_MAC_LANGID_CHINESE_TRADITIONAL	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_CHINESE_TRADITIONAL /;"	d
TT_MAC_LANGID_CROATIAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_CROATIAN /;"	d
TT_MAC_LANGID_CZECH	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_CZECH /;"	d
TT_MAC_LANGID_DANISH	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_DANISH /;"	d
TT_MAC_LANGID_DUTCH	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_DUTCH /;"	d
TT_MAC_LANGID_DZONGKHA	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_DZONGKHA /;"	d
TT_MAC_LANGID_ENGLISH	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_ENGLISH /;"	d
TT_MAC_LANGID_ESPERANTO	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_ESPERANTO /;"	d
TT_MAC_LANGID_ESTONIAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_ESTONIAN /;"	d
TT_MAC_LANGID_FAEROESE	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_FAEROESE /;"	d
TT_MAC_LANGID_FARSI	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_FARSI /;"	d
TT_MAC_LANGID_FINNISH	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_FINNISH /;"	d
TT_MAC_LANGID_FLEMISH	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_FLEMISH /;"	d
TT_MAC_LANGID_FRENCH	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_FRENCH /;"	d
TT_MAC_LANGID_GALICIAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_GALICIAN /;"	d
TT_MAC_LANGID_GALLA	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_GALLA /;"	d
TT_MAC_LANGID_GEORGIAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_GEORGIAN /;"	d
TT_MAC_LANGID_GERMAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_GERMAN /;"	d
TT_MAC_LANGID_GREEK	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_GREEK /;"	d
TT_MAC_LANGID_GREEK_POLYTONIC	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_GREEK_POLYTONIC /;"	d
TT_MAC_LANGID_GREELANDIC	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_GREELANDIC /;"	d
TT_MAC_LANGID_GUARANI	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_GUARANI /;"	d
TT_MAC_LANGID_GUJARATI	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_GUJARATI /;"	d
TT_MAC_LANGID_HEBREW	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_HEBREW /;"	d
TT_MAC_LANGID_HINDI	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_HINDI /;"	d
TT_MAC_LANGID_HUNGARIAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_HUNGARIAN /;"	d
TT_MAC_LANGID_ICELANDIC	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_ICELANDIC /;"	d
TT_MAC_LANGID_INDONESIAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_INDONESIAN /;"	d
TT_MAC_LANGID_INUKTITUT	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_INUKTITUT /;"	d
TT_MAC_LANGID_IRISH	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_IRISH /;"	d
TT_MAC_LANGID_IRISH_GAELIC	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_IRISH_GAELIC /;"	d
TT_MAC_LANGID_ITALIAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_ITALIAN /;"	d
TT_MAC_LANGID_JAPANESE	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_JAPANESE /;"	d
TT_MAC_LANGID_JAVANESE	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_JAVANESE /;"	d
TT_MAC_LANGID_KANNADA	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_KANNADA /;"	d
TT_MAC_LANGID_KASHMIRI	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_KASHMIRI /;"	d
TT_MAC_LANGID_KAZAKH	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_KAZAKH /;"	d
TT_MAC_LANGID_KHMER	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_KHMER /;"	d
TT_MAC_LANGID_KIRGHIZ	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_KIRGHIZ /;"	d
TT_MAC_LANGID_KOREAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_KOREAN /;"	d
TT_MAC_LANGID_KURDISH	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_KURDISH /;"	d
TT_MAC_LANGID_LAO	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_LAO /;"	d
TT_MAC_LANGID_LATIN	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_LATIN /;"	d
TT_MAC_LANGID_LETTISH	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_LETTISH /;"	d
TT_MAC_LANGID_LITHUANIAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_LITHUANIAN /;"	d
TT_MAC_LANGID_MACEDONIAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_MACEDONIAN /;"	d
TT_MAC_LANGID_MALAGASY	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_MALAGASY /;"	d
TT_MAC_LANGID_MALAYALAM	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_MALAYALAM /;"	d
TT_MAC_LANGID_MALAY_ARABIC_SCRIPT	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_MALAY_ARABIC_SCRIPT /;"	d
TT_MAC_LANGID_MALAY_ROMAN_SCRIPT	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_MALAY_ROMAN_SCRIPT /;"	d
TT_MAC_LANGID_MALTESE	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_MALTESE /;"	d
TT_MAC_LANGID_MANX_GAELIC	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_MANX_GAELIC /;"	d
TT_MAC_LANGID_MARATHI	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_MARATHI /;"	d
TT_MAC_LANGID_MOLDAVIAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_MOLDAVIAN /;"	d
TT_MAC_LANGID_MONGOLIAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_MONGOLIAN /;"	d
TT_MAC_LANGID_MONGOLIAN_CYRILLIC_SCRIPT	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_MONGOLIAN_CYRILLIC_SCRIPT /;"	d
TT_MAC_LANGID_MONGOLIAN_MONGOLIAN_SCRIPT	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_MONGOLIAN_MONGOLIAN_SCRIPT /;"	d
TT_MAC_LANGID_NEPALI	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_NEPALI /;"	d
TT_MAC_LANGID_NORWEGIAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_NORWEGIAN /;"	d
TT_MAC_LANGID_ORIYA	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_ORIYA /;"	d
TT_MAC_LANGID_PASHTO	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_PASHTO /;"	d
TT_MAC_LANGID_POLISH	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_POLISH /;"	d
TT_MAC_LANGID_PORTUGUESE	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_PORTUGUESE /;"	d
TT_MAC_LANGID_PUNJABI	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_PUNJABI /;"	d
TT_MAC_LANGID_QUECHUA	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_QUECHUA /;"	d
TT_MAC_LANGID_ROMANIAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_ROMANIAN /;"	d
TT_MAC_LANGID_RUANDA	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_RUANDA /;"	d
TT_MAC_LANGID_RUNDI	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_RUNDI /;"	d
TT_MAC_LANGID_RUSSIAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_RUSSIAN /;"	d
TT_MAC_LANGID_SAAMISK	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_SAAMISK /;"	d
TT_MAC_LANGID_SANSKRIT	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_SANSKRIT /;"	d
TT_MAC_LANGID_SCOTTISH_GAELIC	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_SCOTTISH_GAELIC /;"	d
TT_MAC_LANGID_SERBIAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_SERBIAN /;"	d
TT_MAC_LANGID_SINDHI	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_SINDHI /;"	d
TT_MAC_LANGID_SINHALESE	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_SINHALESE /;"	d
TT_MAC_LANGID_SLOVAK	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_SLOVAK /;"	d
TT_MAC_LANGID_SLOVENIAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_SLOVENIAN /;"	d
TT_MAC_LANGID_SOMALI	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_SOMALI /;"	d
TT_MAC_LANGID_SPANISH	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_SPANISH /;"	d
TT_MAC_LANGID_SUNDANESE	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_SUNDANESE /;"	d
TT_MAC_LANGID_SWAHILI	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_SWAHILI /;"	d
TT_MAC_LANGID_SWEDISH	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_SWEDISH /;"	d
TT_MAC_LANGID_TAGALOG	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_TAGALOG /;"	d
TT_MAC_LANGID_TAJIKI	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_TAJIKI /;"	d
TT_MAC_LANGID_TAMIL	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_TAMIL /;"	d
TT_MAC_LANGID_TATAR	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_TATAR /;"	d
TT_MAC_LANGID_TELUGU	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_TELUGU /;"	d
TT_MAC_LANGID_THAI	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_THAI /;"	d
TT_MAC_LANGID_TIBETAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_TIBETAN /;"	d
TT_MAC_LANGID_TIGRINYA	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_TIGRINYA /;"	d
TT_MAC_LANGID_TONGAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_TONGAN /;"	d
TT_MAC_LANGID_TURKISH	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_TURKISH /;"	d
TT_MAC_LANGID_TURKMEN	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_TURKMEN /;"	d
TT_MAC_LANGID_UIGHUR	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_UIGHUR /;"	d
TT_MAC_LANGID_UKRAINIAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_UKRAINIAN /;"	d
TT_MAC_LANGID_URDU	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_URDU /;"	d
TT_MAC_LANGID_UZBEK	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_UZBEK /;"	d
TT_MAC_LANGID_VIETNAMESE	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_VIETNAMESE /;"	d
TT_MAC_LANGID_WELSH	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_WELSH /;"	d
TT_MAC_LANGID_YIDDISH	.\\include\\freetype\\ttnameid.h	/^#define TT_MAC_LANGID_YIDDISH /;"	d
TT_MS_ID_BIG_5	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_ID_BIG_5 /;"	d
TT_MS_ID_GB2312	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_ID_GB2312 /;"	d
TT_MS_ID_JOHAB	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_ID_JOHAB /;"	d
TT_MS_ID_SJIS	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_ID_SJIS /;"	d
TT_MS_ID_SYMBOL_CS	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_ID_SYMBOL_CS /;"	d
TT_MS_ID_UCS_4	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_ID_UCS_4 /;"	d
TT_MS_ID_UNICODE_CS	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_ID_UNICODE_CS /;"	d
TT_MS_ID_WANSUNG	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_ID_WANSUNG /;"	d
TT_MS_LANGID_AFRIKAANS_SOUTH_AFRICA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_AFRIKAANS_SOUTH_AFRICA /;"	d
TT_MS_LANGID_ALBANIAN_ALBANIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_ALBANIAN_ALBANIA /;"	d
TT_MS_LANGID_AMHARIC_ETHIOPIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_AMHARIC_ETHIOPIA /;"	d
TT_MS_LANGID_ARABIC_ALGERIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_ARABIC_ALGERIA /;"	d
TT_MS_LANGID_ARABIC_BAHRAIN	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_ARABIC_BAHRAIN /;"	d
TT_MS_LANGID_ARABIC_EGYPT	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_ARABIC_EGYPT /;"	d
TT_MS_LANGID_ARABIC_GENERAL	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_ARABIC_GENERAL /;"	d
TT_MS_LANGID_ARABIC_IRAQ	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_ARABIC_IRAQ /;"	d
TT_MS_LANGID_ARABIC_JORDAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_ARABIC_JORDAN /;"	d
TT_MS_LANGID_ARABIC_KUWAIT	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_ARABIC_KUWAIT /;"	d
TT_MS_LANGID_ARABIC_LEBANON	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_ARABIC_LEBANON /;"	d
TT_MS_LANGID_ARABIC_LIBYA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_ARABIC_LIBYA /;"	d
TT_MS_LANGID_ARABIC_MOROCCO	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_ARABIC_MOROCCO /;"	d
TT_MS_LANGID_ARABIC_OMAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_ARABIC_OMAN /;"	d
TT_MS_LANGID_ARABIC_QATAR	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_ARABIC_QATAR /;"	d
TT_MS_LANGID_ARABIC_SAUDI_ARABIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_ARABIC_SAUDI_ARABIA /;"	d
TT_MS_LANGID_ARABIC_SYRIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_ARABIC_SYRIA /;"	d
TT_MS_LANGID_ARABIC_TUNISIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_ARABIC_TUNISIA /;"	d
TT_MS_LANGID_ARABIC_UAE	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_ARABIC_UAE /;"	d
TT_MS_LANGID_ARABIC_YEMEN	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_ARABIC_YEMEN /;"	d
TT_MS_LANGID_ARMENIAN_ARMENIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_ARMENIAN_ARMENIA /;"	d
TT_MS_LANGID_ASSAMESE_INDIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_ASSAMESE_INDIA /;"	d
TT_MS_LANGID_AZERI_AZERBAIJAN_CYRILLIC	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_AZERI_AZERBAIJAN_CYRILLIC /;"	d
TT_MS_LANGID_AZERI_AZERBAIJAN_LATIN	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_AZERI_AZERBAIJAN_LATIN /;"	d
TT_MS_LANGID_BASQUE_SPAIN	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_BASQUE_SPAIN /;"	d
TT_MS_LANGID_BELARUSIAN_BELARUS	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_BELARUSIAN_BELARUS /;"	d
TT_MS_LANGID_BENGALI_BANGLADESH	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_BENGALI_BANGLADESH /;"	d
TT_MS_LANGID_BENGALI_INDIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_BENGALI_INDIA /;"	d
TT_MS_LANGID_BOSNIAN_BOSNIA_HERZEGOVINA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_BOSNIAN_BOSNIA_HERZEGOVINA /;"	d
TT_MS_LANGID_BULGARIAN_BULGARIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_BULGARIAN_BULGARIA /;"	d
TT_MS_LANGID_BURMESE_MYANMAR	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_BURMESE_MYANMAR /;"	d
TT_MS_LANGID_CATALAN_SPAIN	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_CATALAN_SPAIN /;"	d
TT_MS_LANGID_CHEROKEE_UNITED_STATES	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_CHEROKEE_UNITED_STATES /;"	d
TT_MS_LANGID_CHINESE_GENERAL	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_CHINESE_GENERAL /;"	d
TT_MS_LANGID_CHINESE_HONG_KONG	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_CHINESE_HONG_KONG /;"	d
TT_MS_LANGID_CHINESE_MACAU	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_CHINESE_MACAU /;"	d
TT_MS_LANGID_CHINESE_PRC	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_CHINESE_PRC /;"	d
TT_MS_LANGID_CHINESE_SINGAPORE	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_CHINESE_SINGAPORE /;"	d
TT_MS_LANGID_CHINESE_TAIWAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_CHINESE_TAIWAN /;"	d
TT_MS_LANGID_CLASSIC_LITHUANIAN_LITHUANIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_CLASSIC_LITHUANIAN_LITHUANIA /;"	d
TT_MS_LANGID_CROATIAN_BOSNIA_HERZEGOVINA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_CROATIAN_BOSNIA_HERZEGOVINA /;"	d
TT_MS_LANGID_CROATIAN_CROATIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_CROATIAN_CROATIA /;"	d
TT_MS_LANGID_CZECH_CZECH_REPUBLIC	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_CZECH_CZECH_REPUBLIC /;"	d
TT_MS_LANGID_DANISH_DENMARK	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_DANISH_DENMARK /;"	d
TT_MS_LANGID_DHIVEHI_MALDIVES	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_DHIVEHI_MALDIVES /;"	d
TT_MS_LANGID_DIVEHI_MALDIVES	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_DIVEHI_MALDIVES /;"	d
TT_MS_LANGID_DUTCH_BELGIUM	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_DUTCH_BELGIUM /;"	d
TT_MS_LANGID_DUTCH_NETHERLANDS	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_DUTCH_NETHERLANDS /;"	d
TT_MS_LANGID_DZONGHKA_BHUTAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_DZONGHKA_BHUTAN /;"	d
TT_MS_LANGID_EDO_NIGERIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_EDO_NIGERIA /;"	d
TT_MS_LANGID_ENGLISH_AUSTRALIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_ENGLISH_AUSTRALIA /;"	d
TT_MS_LANGID_ENGLISH_BELIZE	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_ENGLISH_BELIZE /;"	d
TT_MS_LANGID_ENGLISH_CANADA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_ENGLISH_CANADA /;"	d
TT_MS_LANGID_ENGLISH_CARIBBEAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_ENGLISH_CARIBBEAN /;"	d
TT_MS_LANGID_ENGLISH_GENERAL	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_ENGLISH_GENERAL /;"	d
TT_MS_LANGID_ENGLISH_HONG_KONG	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_ENGLISH_HONG_KONG /;"	d
TT_MS_LANGID_ENGLISH_INDIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_ENGLISH_INDIA /;"	d
TT_MS_LANGID_ENGLISH_INDONESIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_ENGLISH_INDONESIA /;"	d
TT_MS_LANGID_ENGLISH_IRELAND	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_ENGLISH_IRELAND /;"	d
TT_MS_LANGID_ENGLISH_JAMAICA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_ENGLISH_JAMAICA /;"	d
TT_MS_LANGID_ENGLISH_MALAYSIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_ENGLISH_MALAYSIA /;"	d
TT_MS_LANGID_ENGLISH_NEW_ZEALAND	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_ENGLISH_NEW_ZEALAND /;"	d
TT_MS_LANGID_ENGLISH_PHILIPPINES	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_ENGLISH_PHILIPPINES /;"	d
TT_MS_LANGID_ENGLISH_SINGAPORE	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_ENGLISH_SINGAPORE /;"	d
TT_MS_LANGID_ENGLISH_SOUTH_AFRICA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_ENGLISH_SOUTH_AFRICA /;"	d
TT_MS_LANGID_ENGLISH_TRINIDAD	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_ENGLISH_TRINIDAD /;"	d
TT_MS_LANGID_ENGLISH_UNITED_KINGDOM	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_ENGLISH_UNITED_KINGDOM /;"	d
TT_MS_LANGID_ENGLISH_UNITED_STATES	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_ENGLISH_UNITED_STATES /;"	d
TT_MS_LANGID_ENGLISH_ZIMBABWE	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_ENGLISH_ZIMBABWE /;"	d
TT_MS_LANGID_ESTONIAN_ESTONIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_ESTONIAN_ESTONIA /;"	d
TT_MS_LANGID_FAEROESE_FAEROE_ISLANDS	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_FAEROESE_FAEROE_ISLANDS /;"	d
TT_MS_LANGID_FARSI_IRAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_FARSI_IRAN /;"	d
TT_MS_LANGID_FILIPINO_PHILIPPINES	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_FILIPINO_PHILIPPINES /;"	d
TT_MS_LANGID_FINNISH_FINLAND	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_FINNISH_FINLAND /;"	d
TT_MS_LANGID_FRENCH_BELGIUM	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_FRENCH_BELGIUM /;"	d
TT_MS_LANGID_FRENCH_CAMEROON	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_FRENCH_CAMEROON /;"	d
TT_MS_LANGID_FRENCH_CANADA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_FRENCH_CANADA /;"	d
TT_MS_LANGID_FRENCH_CONGO	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_FRENCH_CONGO /;"	d
TT_MS_LANGID_FRENCH_COTE_D_IVOIRE	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_FRENCH_COTE_D_IVOIRE /;"	d
TT_MS_LANGID_FRENCH_FRANCE	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_FRENCH_FRANCE /;"	d
TT_MS_LANGID_FRENCH_HAITI	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_FRENCH_HAITI /;"	d
TT_MS_LANGID_FRENCH_LUXEMBOURG	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_FRENCH_LUXEMBOURG /;"	d
TT_MS_LANGID_FRENCH_MALI	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_FRENCH_MALI /;"	d
TT_MS_LANGID_FRENCH_MONACO	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_FRENCH_MONACO /;"	d
TT_MS_LANGID_FRENCH_MOROCCO	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_FRENCH_MOROCCO /;"	d
TT_MS_LANGID_FRENCH_NORTH_AFRICA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_FRENCH_NORTH_AFRICA /;"	d
TT_MS_LANGID_FRENCH_REUNION	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_FRENCH_REUNION /;"	d
TT_MS_LANGID_FRENCH_SENEGAL	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_FRENCH_SENEGAL /;"	d
TT_MS_LANGID_FRENCH_SWITZERLAND	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_FRENCH_SWITZERLAND /;"	d
TT_MS_LANGID_FRENCH_WEST_INDIES	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_FRENCH_WEST_INDIES /;"	d
TT_MS_LANGID_FRENCH_ZAIRE	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_FRENCH_ZAIRE /;"	d
TT_MS_LANGID_FRISIAN_NETHERLANDS	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_FRISIAN_NETHERLANDS /;"	d
TT_MS_LANGID_FULFULDE_NIGERIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_FULFULDE_NIGERIA /;"	d
TT_MS_LANGID_GALICIAN_SPAIN	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_GALICIAN_SPAIN /;"	d
TT_MS_LANGID_GEORGIAN_GEORGIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_GEORGIAN_GEORGIA /;"	d
TT_MS_LANGID_GERMAN_AUSTRIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_GERMAN_AUSTRIA /;"	d
TT_MS_LANGID_GERMAN_GERMANY	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_GERMAN_GERMANY /;"	d
TT_MS_LANGID_GERMAN_LIECHTENSTEI	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_GERMAN_LIECHTENSTEI /;"	d
TT_MS_LANGID_GERMAN_LUXEMBOURG	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_GERMAN_LUXEMBOURG /;"	d
TT_MS_LANGID_GERMAN_SWITZERLAND	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_GERMAN_SWITZERLAND /;"	d
TT_MS_LANGID_GREEK_GREECE	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_GREEK_GREECE /;"	d
TT_MS_LANGID_GUARANI_PARAGUAY	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_GUARANI_PARAGUAY /;"	d
TT_MS_LANGID_GUJARATI_INDIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_GUJARATI_INDIA /;"	d
TT_MS_LANGID_HAUSA_NIGERIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_HAUSA_NIGERIA /;"	d
TT_MS_LANGID_HAWAIIAN_UNITED_STATES	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_HAWAIIAN_UNITED_STATES /;"	d
TT_MS_LANGID_HEBREW_ISRAEL	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_HEBREW_ISRAEL /;"	d
TT_MS_LANGID_HINDI_INDIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_HINDI_INDIA /;"	d
TT_MS_LANGID_HUNGARIAN_HUNGARY	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_HUNGARIAN_HUNGARY /;"	d
TT_MS_LANGID_IBIBIO_NIGERIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_IBIBIO_NIGERIA /;"	d
TT_MS_LANGID_ICELANDIC_ICELAND	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_ICELANDIC_ICELAND /;"	d
TT_MS_LANGID_IGBO_NIGERIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_IGBO_NIGERIA /;"	d
TT_MS_LANGID_INDONESIAN_INDONESIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_INDONESIAN_INDONESIA /;"	d
TT_MS_LANGID_INUKTITUT_CANADA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_INUKTITUT_CANADA /;"	d
TT_MS_LANGID_IRISH_GAELIC_IRELAND	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_IRISH_GAELIC_IRELAND /;"	d
TT_MS_LANGID_ITALIAN_ITALY	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_ITALIAN_ITALY /;"	d
TT_MS_LANGID_ITALIAN_SWITZERLAND	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_ITALIAN_SWITZERLAND /;"	d
TT_MS_LANGID_JAPANESE_JAPAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_JAPANESE_JAPAN /;"	d
TT_MS_LANGID_KANNADA_INDIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_KANNADA_INDIA /;"	d
TT_MS_LANGID_KANURI_NIGERIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_KANURI_NIGERIA /;"	d
TT_MS_LANGID_KASHMIRI_INDIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_KASHMIRI_INDIA /;"	d
TT_MS_LANGID_KASHMIRI_PAKISTAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_KASHMIRI_PAKISTAN /;"	d
TT_MS_LANGID_KASHMIRI_SASIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_KASHMIRI_SASIA /;"	d
TT_MS_LANGID_KAZAK_KAZAKSTAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_KAZAK_KAZAKSTAN /;"	d
TT_MS_LANGID_KHMER_CAMBODIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_KHMER_CAMBODIA /;"	d
TT_MS_LANGID_KIRGHIZ_KIRGHIZSTAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_KIRGHIZ_KIRGHIZSTAN /;"	d
TT_MS_LANGID_KIRGHIZ_KIRGHIZ_REPUBLIC	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_KIRGHIZ_KIRGHIZ_REPUBLIC /;"	d
TT_MS_LANGID_KONKANI_INDIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_KONKANI_INDIA /;"	d
TT_MS_LANGID_KOREAN_EXTENDED_WANSUNG_KOREA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_KOREAN_EXTENDED_WANSUNG_KOREA /;"	d
TT_MS_LANGID_KOREAN_JOHAB_KOREA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_KOREAN_JOHAB_KOREA /;"	d
TT_MS_LANGID_LAO_LAOS	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_LAO_LAOS /;"	d
TT_MS_LANGID_LATIN	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_LATIN /;"	d
TT_MS_LANGID_LATVIAN_LATVIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_LATVIAN_LATVIA /;"	d
TT_MS_LANGID_LITHUANIAN_LITHUANIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_LITHUANIAN_LITHUANIA /;"	d
TT_MS_LANGID_MACEDONIAN_MACEDONIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_MACEDONIAN_MACEDONIA /;"	d
TT_MS_LANGID_MALAYALAM_INDIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_MALAYALAM_INDIA /;"	d
TT_MS_LANGID_MALAY_BRUNEI_DARUSSALAM	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_MALAY_BRUNEI_DARUSSALAM /;"	d
TT_MS_LANGID_MALAY_MALAYSIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_MALAY_MALAYSIA /;"	d
TT_MS_LANGID_MALTESE_MALTA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_MALTESE_MALTA /;"	d
TT_MS_LANGID_MANIPURI_INDIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_MANIPURI_INDIA /;"	d
TT_MS_LANGID_MAORI_NEW_ZEALAND	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_MAORI_NEW_ZEALAND /;"	d
TT_MS_LANGID_MARATHI_INDIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_MARATHI_INDIA /;"	d
TT_MS_LANGID_MOLDAVIAN_MOLDAVIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_MOLDAVIAN_MOLDAVIA /;"	d
TT_MS_LANGID_MONGOLIAN_MONGOLIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_MONGOLIAN_MONGOLIA /;"	d
TT_MS_LANGID_MONGOLIAN_MONGOLIA_MONGOLIAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_MONGOLIAN_MONGOLIA_MONGOLIAN /;"	d
TT_MS_LANGID_NEPALI_INDIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_NEPALI_INDIA /;"	d
TT_MS_LANGID_NEPALI_NEPAL	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_NEPALI_NEPAL /;"	d
TT_MS_LANGID_NORWEGIAN_NORWAY_BOKMAL	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_NORWEGIAN_NORWAY_BOKMAL /;"	d
TT_MS_LANGID_NORWEGIAN_NORWAY_NYNORSK	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_NORWEGIAN_NORWAY_NYNORSK /;"	d
TT_MS_LANGID_ORIYA_INDIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_ORIYA_INDIA /;"	d
TT_MS_LANGID_OROMO_ETHIOPIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_OROMO_ETHIOPIA /;"	d
TT_MS_LANGID_PAPIAMENTU_NETHERLANDS_ANTILLES	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_PAPIAMENTU_NETHERLANDS_ANTILLES /;"	d
TT_MS_LANGID_PASHTO_AFGHANISTAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_PASHTO_AFGHANISTAN /;"	d
TT_MS_LANGID_POLISH_POLAND	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_POLISH_POLAND /;"	d
TT_MS_LANGID_PORTUGUESE_BRAZIL	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_PORTUGUESE_BRAZIL /;"	d
TT_MS_LANGID_PORTUGUESE_PORTUGAL	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_PORTUGUESE_PORTUGAL /;"	d
TT_MS_LANGID_PUNJABI_ARABIC_PAKISTAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_PUNJABI_ARABIC_PAKISTAN /;"	d
TT_MS_LANGID_PUNJABI_INDIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_PUNJABI_INDIA /;"	d
TT_MS_LANGID_QUECHUA_BOLIVIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_QUECHUA_BOLIVIA /;"	d
TT_MS_LANGID_QUECHUA_ECUADOR	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_QUECHUA_ECUADOR /;"	d
TT_MS_LANGID_QUECHUA_PERU	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_QUECHUA_PERU /;"	d
TT_MS_LANGID_RHAETO_ROMANIC_SWITZERLAND	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_RHAETO_ROMANIC_SWITZERLAND /;"	d
TT_MS_LANGID_ROMANIAN_ROMANIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_ROMANIAN_ROMANIA /;"	d
TT_MS_LANGID_RUSSIAN_MOLDAVIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_RUSSIAN_MOLDAVIA /;"	d
TT_MS_LANGID_RUSSIAN_RUSSIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_RUSSIAN_RUSSIA /;"	d
TT_MS_LANGID_SAAMI_LAPONIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_SAAMI_LAPONIA /;"	d
TT_MS_LANGID_SAMI_INARI_FINLAND	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_SAMI_INARI_FINLAND /;"	d
TT_MS_LANGID_SAMI_LULE_NORWAY	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_SAMI_LULE_NORWAY /;"	d
TT_MS_LANGID_SAMI_LULE_SWEDEN	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_SAMI_LULE_SWEDEN /;"	d
TT_MS_LANGID_SAMI_NORTHERN_FINLAND	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_SAMI_NORTHERN_FINLAND /;"	d
TT_MS_LANGID_SAMI_NORTHERN_NORWAY	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_SAMI_NORTHERN_NORWAY /;"	d
TT_MS_LANGID_SAMI_NORTHERN_SWEDEN	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_SAMI_NORTHERN_SWEDEN /;"	d
TT_MS_LANGID_SAMI_SKOLT_FINLAND	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_SAMI_SKOLT_FINLAND /;"	d
TT_MS_LANGID_SAMI_SOUTHERN_NORWAY	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_SAMI_SOUTHERN_NORWAY /;"	d
TT_MS_LANGID_SAMI_SOUTHERN_SWEDEN	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_SAMI_SOUTHERN_SWEDEN /;"	d
TT_MS_LANGID_SANSKRIT_INDIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_SANSKRIT_INDIA /;"	d
TT_MS_LANGID_SCOTTISH_GAELIC_UNITED_KINGDOM	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_SCOTTISH_GAELIC_UNITED_KINGDOM /;"	d
TT_MS_LANGID_SEPEDI_SOUTH_AFRICA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_SEPEDI_SOUTH_AFRICA /;"	d
TT_MS_LANGID_SERBIAN_BOSNIA_HERZ_CYRILLIC	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_SERBIAN_BOSNIA_HERZ_CYRILLIC /;"	d
TT_MS_LANGID_SERBIAN_BOSNIA_HERZ_LATIN	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_SERBIAN_BOSNIA_HERZ_LATIN /;"	d
TT_MS_LANGID_SERBIAN_SERBIA_CYRILLIC	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_SERBIAN_SERBIA_CYRILLIC /;"	d
TT_MS_LANGID_SERBIAN_SERBIA_LATIN	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_SERBIAN_SERBIA_LATIN /;"	d
TT_MS_LANGID_SINDHI_INDIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_SINDHI_INDIA /;"	d
TT_MS_LANGID_SINDHI_PAKISTAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_SINDHI_PAKISTAN /;"	d
TT_MS_LANGID_SINHALESE_SRI_LANKA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_SINHALESE_SRI_LANKA /;"	d
TT_MS_LANGID_SLOVAK_SLOVAKIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_SLOVAK_SLOVAKIA /;"	d
TT_MS_LANGID_SLOVENE_SLOVENIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_SLOVENE_SLOVENIA /;"	d
TT_MS_LANGID_SOMALI_SOMALIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_SOMALI_SOMALIA /;"	d
TT_MS_LANGID_SORBIAN_GERMANY	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_SORBIAN_GERMANY /;"	d
TT_MS_LANGID_SOTHO_SOUTHERN_SOUTH_AFRICA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_SOTHO_SOUTHERN_SOUTH_AFRICA /;"	d
TT_MS_LANGID_SPANISH_ARGENTINA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_SPANISH_ARGENTINA /;"	d
TT_MS_LANGID_SPANISH_BOLIVIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_SPANISH_BOLIVIA /;"	d
TT_MS_LANGID_SPANISH_CHILE	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_SPANISH_CHILE /;"	d
TT_MS_LANGID_SPANISH_COLOMBIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_SPANISH_COLOMBIA /;"	d
TT_MS_LANGID_SPANISH_COSTA_RICA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_SPANISH_COSTA_RICA /;"	d
TT_MS_LANGID_SPANISH_DOMINICAN_REPUBLIC	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_SPANISH_DOMINICAN_REPUBLIC /;"	d
TT_MS_LANGID_SPANISH_ECUADOR	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_SPANISH_ECUADOR /;"	d
TT_MS_LANGID_SPANISH_EL_SALVADOR	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_SPANISH_EL_SALVADOR /;"	d
TT_MS_LANGID_SPANISH_GUATEMALA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_SPANISH_GUATEMALA /;"	d
TT_MS_LANGID_SPANISH_HONDURAS	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_SPANISH_HONDURAS /;"	d
TT_MS_LANGID_SPANISH_LATIN_AMERICA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_SPANISH_LATIN_AMERICA /;"	d
TT_MS_LANGID_SPANISH_MEXICO	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_SPANISH_MEXICO /;"	d
TT_MS_LANGID_SPANISH_NICARAGUA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_SPANISH_NICARAGUA /;"	d
TT_MS_LANGID_SPANISH_PANAMA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_SPANISH_PANAMA /;"	d
TT_MS_LANGID_SPANISH_PARAGUAY	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_SPANISH_PARAGUAY /;"	d
TT_MS_LANGID_SPANISH_PERU	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_SPANISH_PERU /;"	d
TT_MS_LANGID_SPANISH_PUERTO_RICO	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_SPANISH_PUERTO_RICO /;"	d
TT_MS_LANGID_SPANISH_SPAIN_INTERNATIONAL_SORT	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_SPANISH_SPAIN_INTERNATIONAL_SORT /;"	d
TT_MS_LANGID_SPANISH_SPAIN_TRADITIONAL_SORT	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_SPANISH_SPAIN_TRADITIONAL_SORT /;"	d
TT_MS_LANGID_SPANISH_UNITED_STATES	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_SPANISH_UNITED_STATES /;"	d
TT_MS_LANGID_SPANISH_URUGUAY	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_SPANISH_URUGUAY /;"	d
TT_MS_LANGID_SPANISH_VENEZUELA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_SPANISH_VENEZUELA /;"	d
TT_MS_LANGID_SUTU_SOUTH_AFRICA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_SUTU_SOUTH_AFRICA /;"	d
TT_MS_LANGID_SWAHILI_KENYA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_SWAHILI_KENYA /;"	d
TT_MS_LANGID_SWEDISH_FINLAND	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_SWEDISH_FINLAND /;"	d
TT_MS_LANGID_SWEDISH_SWEDEN	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_SWEDISH_SWEDEN /;"	d
TT_MS_LANGID_SYRIAC_SYRIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_SYRIAC_SYRIA /;"	d
TT_MS_LANGID_TAJIK_TAJIKISTAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_TAJIK_TAJIKISTAN /;"	d
TT_MS_LANGID_TAMAZIGHT_MOROCCO	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_TAMAZIGHT_MOROCCO /;"	d
TT_MS_LANGID_TAMAZIGHT_MOROCCO_LATIN	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_TAMAZIGHT_MOROCCO_LATIN /;"	d
TT_MS_LANGID_TAMIL_INDIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_TAMIL_INDIA /;"	d
TT_MS_LANGID_TATAR_TATARSTAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_TATAR_TATARSTAN /;"	d
TT_MS_LANGID_TELUGU_INDIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_TELUGU_INDIA /;"	d
TT_MS_LANGID_THAI_THAILAND	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_THAI_THAILAND /;"	d
TT_MS_LANGID_TIBETAN_BHUTAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_TIBETAN_BHUTAN /;"	d
TT_MS_LANGID_TIBETAN_CHINA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_TIBETAN_CHINA /;"	d
TT_MS_LANGID_TIGRIGNA_ERYTHREA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_TIGRIGNA_ERYTHREA /;"	d
TT_MS_LANGID_TIGRIGNA_ERYTREA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_TIGRIGNA_ERYTREA /;"	d
TT_MS_LANGID_TIGRIGNA_ETHIOPIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_TIGRIGNA_ETHIOPIA /;"	d
TT_MS_LANGID_TSONGA_SOUTH_AFRICA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_TSONGA_SOUTH_AFRICA /;"	d
TT_MS_LANGID_TSWANA_SOUTH_AFRICA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_TSWANA_SOUTH_AFRICA /;"	d
TT_MS_LANGID_TURKISH_TURKEY	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_TURKISH_TURKEY /;"	d
TT_MS_LANGID_TURKMEN_TURKMENISTAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_TURKMEN_TURKMENISTAN /;"	d
TT_MS_LANGID_UIGHUR_CHINA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_UIGHUR_CHINA /;"	d
TT_MS_LANGID_UKRAINIAN_UKRAINE	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_UKRAINIAN_UKRAINE /;"	d
TT_MS_LANGID_URDU_INDIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_URDU_INDIA /;"	d
TT_MS_LANGID_URDU_PAKISTAN	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_URDU_PAKISTAN /;"	d
TT_MS_LANGID_UZBEK_UZBEKISTAN_CYRILLIC	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_UZBEK_UZBEKISTAN_CYRILLIC /;"	d
TT_MS_LANGID_UZBEK_UZBEKISTAN_LATIN	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_UZBEK_UZBEKISTAN_LATIN /;"	d
TT_MS_LANGID_VENDA_SOUTH_AFRICA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_VENDA_SOUTH_AFRICA /;"	d
TT_MS_LANGID_VIETNAMESE_VIET_NAM	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_VIETNAMESE_VIET_NAM /;"	d
TT_MS_LANGID_WELSH_WALES	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_WELSH_WALES /;"	d
TT_MS_LANGID_XHOSA_SOUTH_AFRICA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_XHOSA_SOUTH_AFRICA /;"	d
TT_MS_LANGID_YIDDISH_GERMANY	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_YIDDISH_GERMANY /;"	d
TT_MS_LANGID_YI_CHINA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_YI_CHINA /;"	d
TT_MS_LANGID_YORUBA_NIGERIA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_YORUBA_NIGERIA /;"	d
TT_MS_LANGID_ZULU_SOUTH_AFRICA	.\\include\\freetype\\ttnameid.h	/^#define TT_MS_LANGID_ZULU_SOUTH_AFRICA /;"	d
TT_MaxProfile	.\\include\\freetype\\tttables.h	/^  } TT_MaxProfile;$/;"	t	typeref:struct:TT_MaxProfile_
TT_MaxProfile_	.\\include\\freetype\\tttables.h	/^  typedef struct  TT_MaxProfile_$/;"	s
TT_NAME_ID_CID_FINDFONT_NAME	.\\include\\freetype\\ttnameid.h	/^#define TT_NAME_ID_CID_FINDFONT_NAME /;"	d
TT_NAME_ID_COPYRIGHT	.\\include\\freetype\\ttnameid.h	/^#define TT_NAME_ID_COPYRIGHT /;"	d
TT_NAME_ID_DESCRIPTION	.\\include\\freetype\\ttnameid.h	/^#define TT_NAME_ID_DESCRIPTION /;"	d
TT_NAME_ID_DESIGNER	.\\include\\freetype\\ttnameid.h	/^#define TT_NAME_ID_DESIGNER /;"	d
TT_NAME_ID_DESIGNER_URL	.\\include\\freetype\\ttnameid.h	/^#define TT_NAME_ID_DESIGNER_URL /;"	d
TT_NAME_ID_FONT_FAMILY	.\\include\\freetype\\ttnameid.h	/^#define TT_NAME_ID_FONT_FAMILY /;"	d
TT_NAME_ID_FONT_SUBFAMILY	.\\include\\freetype\\ttnameid.h	/^#define TT_NAME_ID_FONT_SUBFAMILY /;"	d
TT_NAME_ID_FULL_NAME	.\\include\\freetype\\ttnameid.h	/^#define TT_NAME_ID_FULL_NAME /;"	d
TT_NAME_ID_LICENSE	.\\include\\freetype\\ttnameid.h	/^#define TT_NAME_ID_LICENSE /;"	d
TT_NAME_ID_LICENSE_URL	.\\include\\freetype\\ttnameid.h	/^#define TT_NAME_ID_LICENSE_URL /;"	d
TT_NAME_ID_MAC_FULL_NAME	.\\include\\freetype\\ttnameid.h	/^#define TT_NAME_ID_MAC_FULL_NAME /;"	d
TT_NAME_ID_MANUFACTURER	.\\include\\freetype\\ttnameid.h	/^#define TT_NAME_ID_MANUFACTURER /;"	d
TT_NAME_ID_PREFERRED_FAMILY	.\\include\\freetype\\ttnameid.h	/^#define TT_NAME_ID_PREFERRED_FAMILY /;"	d
TT_NAME_ID_PREFERRED_SUBFAMILY	.\\include\\freetype\\ttnameid.h	/^#define TT_NAME_ID_PREFERRED_SUBFAMILY /;"	d
TT_NAME_ID_PS_NAME	.\\include\\freetype\\ttnameid.h	/^#define TT_NAME_ID_PS_NAME /;"	d
TT_NAME_ID_SAMPLE_TEXT	.\\include\\freetype\\ttnameid.h	/^#define TT_NAME_ID_SAMPLE_TEXT /;"	d
TT_NAME_ID_TRADEMARK	.\\include\\freetype\\ttnameid.h	/^#define TT_NAME_ID_TRADEMARK /;"	d
TT_NAME_ID_UNIQUE_ID	.\\include\\freetype\\ttnameid.h	/^#define TT_NAME_ID_UNIQUE_ID /;"	d
TT_NAME_ID_VENDOR_URL	.\\include\\freetype\\ttnameid.h	/^#define TT_NAME_ID_VENDOR_URL /;"	d
TT_NAME_ID_VERSION_STRING	.\\include\\freetype\\ttnameid.h	/^#define TT_NAME_ID_VERSION_STRING /;"	d
TT_NAME_ID_WWS_FAMILY	.\\include\\freetype\\ttnameid.h	/^#define TT_NAME_ID_WWS_FAMILY /;"	d
TT_NAME_ID_WWS_SUBFAMILY	.\\include\\freetype\\ttnameid.h	/^#define TT_NAME_ID_WWS_SUBFAMILY /;"	d
TT_NameEntry	.\\include\\freetype\\internal\\tttypes.h	/^  } TT_NameEntryRec, *TT_NameEntry;$/;"	t	typeref:struct:TT_NameEntryRec_ *
TT_NameEntryRec	.\\include\\freetype\\internal\\tttypes.h	/^  } TT_NameEntryRec, *TT_NameEntry;$/;"	t	typeref:struct:TT_NameEntryRec_
TT_NameEntryRec_	.\\include\\freetype\\internal\\tttypes.h	/^  typedef struct  TT_NameEntryRec_$/;"	s
TT_NameTable	.\\include\\freetype\\internal\\tttypes.h	/^  } TT_NameTableRec, *TT_NameTable;$/;"	t	typeref:struct:TT_NameTableRec_ *
TT_NameTableRec	.\\include\\freetype\\internal\\tttypes.h	/^  } TT_NameTableRec, *TT_NameTable;$/;"	t	typeref:struct:TT_NameTableRec_
TT_NameTableRec_	.\\include\\freetype\\internal\\tttypes.h	/^  typedef struct  TT_NameTableRec_$/;"	s
TT_OS2	.\\include\\freetype\\tttables.h	/^  } TT_OS2;$/;"	t	typeref:struct:TT_OS2_
TT_OS2_	.\\include\\freetype\\tttables.h	/^  typedef struct  TT_OS2_$/;"	s
TT_PCLT	.\\include\\freetype\\tttables.h	/^  } TT_PCLT;$/;"	t	typeref:struct:TT_PCLT_
TT_PCLT_	.\\include\\freetype\\tttables.h	/^  typedef struct  TT_PCLT_$/;"	s
TT_PLATFORM_ADOBE	.\\include\\freetype\\ttnameid.h	/^#define TT_PLATFORM_ADOBE /;"	d
TT_PLATFORM_APPLE_UNICODE	.\\include\\freetype\\ttnameid.h	/^#define TT_PLATFORM_APPLE_UNICODE /;"	d
TT_PLATFORM_CUSTOM	.\\include\\freetype\\ttnameid.h	/^#define TT_PLATFORM_CUSTOM /;"	d
TT_PLATFORM_ISO	.\\include\\freetype\\ttnameid.h	/^#define TT_PLATFORM_ISO /;"	d
TT_PLATFORM_MACINTOSH	.\\include\\freetype\\ttnameid.h	/^#define TT_PLATFORM_MACINTOSH /;"	d
TT_PLATFORM_MICROSOFT	.\\include\\freetype\\ttnameid.h	/^#define TT_PLATFORM_MICROSOFT /;"	d
TT_Post_20	.\\include\\freetype\\internal\\tttypes.h	/^  } TT_Post_20Rec, *TT_Post_20;$/;"	t	typeref:struct:TT_Post_20Rec_ *
TT_Post_20Rec	.\\include\\freetype\\internal\\tttypes.h	/^  } TT_Post_20Rec, *TT_Post_20;$/;"	t	typeref:struct:TT_Post_20Rec_
TT_Post_20Rec_	.\\include\\freetype\\internal\\tttypes.h	/^  typedef struct  TT_Post_20Rec_$/;"	s
TT_Post_25	.\\include\\freetype\\internal\\tttypes.h	/^  } TT_Post_25Rec, *TT_Post_25;$/;"	t	typeref:struct:TT_Post_25_ *
TT_Post_25Rec	.\\include\\freetype\\internal\\tttypes.h	/^  } TT_Post_25Rec, *TT_Post_25;$/;"	t	typeref:struct:TT_Post_25_
TT_Post_25_	.\\include\\freetype\\internal\\tttypes.h	/^  typedef struct  TT_Post_25_$/;"	s
TT_Post_Names	.\\include\\freetype\\internal\\tttypes.h	/^  } TT_Post_NamesRec, *TT_Post_Names;$/;"	t	typeref:struct:TT_Post_NamesRec_ *
TT_Post_NamesRec	.\\include\\freetype\\internal\\tttypes.h	/^  } TT_Post_NamesRec, *TT_Post_Names;$/;"	t	typeref:struct:TT_Post_NamesRec_
TT_Post_NamesRec_	.\\include\\freetype\\internal\\tttypes.h	/^  typedef struct  TT_Post_NamesRec_$/;"	s
TT_Postscript	.\\include\\freetype\\tttables.h	/^  } TT_Postscript;$/;"	t	typeref:struct:TT_Postscript_
TT_Postscript_	.\\include\\freetype\\tttables.h	/^  typedef struct  TT_Postscript_$/;"	s
TT_SBIT_TABLE_TYPE_CBLC	.\\include\\freetype\\internal\\tttypes.h	/^    TT_SBIT_TABLE_TYPE_CBLC, \/* `CBLC' (Google)     *\/$/;"	e	enum:TT_SbitTableType_
TT_SBIT_TABLE_TYPE_EBLC	.\\include\\freetype\\internal\\tttypes.h	/^    TT_SBIT_TABLE_TYPE_EBLC, \/* `EBLC' (Microsoft), *\/$/;"	e	enum:TT_SbitTableType_
TT_SBIT_TABLE_TYPE_MAX	.\\include\\freetype\\internal\\tttypes.h	/^    TT_SBIT_TABLE_TYPE_MAX$/;"	e	enum:TT_SbitTableType_
TT_SBIT_TABLE_TYPE_NONE	.\\include\\freetype\\internal\\tttypes.h	/^    TT_SBIT_TABLE_TYPE_NONE = 0,$/;"	e	enum:TT_SbitTableType_
TT_SBIT_TABLE_TYPE_SBIX	.\\include\\freetype\\internal\\tttypes.h	/^    TT_SBIT_TABLE_TYPE_SBIX, \/* `sbix' (Apple)      *\/$/;"	e	enum:TT_SbitTableType_
TT_SBit_Component	.\\include\\freetype\\internal\\tttypes.h	/^  } TT_SBit_ComponentRec, *TT_SBit_Component;$/;"	t	typeref:struct:TT_SBit_ComponentRec_ *
TT_SBit_ComponentRec	.\\include\\freetype\\internal\\tttypes.h	/^  } TT_SBit_ComponentRec, *TT_SBit_Component;$/;"	t	typeref:struct:TT_SBit_ComponentRec_
TT_SBit_ComponentRec_	.\\include\\freetype\\internal\\tttypes.h	/^  typedef struct  TT_SBit_ComponentRec_$/;"	s
TT_SBit_LineMetrics	.\\include\\freetype\\internal\\tttypes.h	/^  } TT_SBit_LineMetricsRec, *TT_SBit_LineMetrics;$/;"	t	typeref:struct:TT_SBit_LineMetricsRec_ *
TT_SBit_LineMetricsRec	.\\include\\freetype\\internal\\tttypes.h	/^  } TT_SBit_LineMetricsRec, *TT_SBit_LineMetrics;$/;"	t	typeref:struct:TT_SBit_LineMetricsRec_
TT_SBit_LineMetricsRec_	.\\include\\freetype\\internal\\tttypes.h	/^  typedef struct  TT_SBit_LineMetricsRec_$/;"	s
TT_SBit_Metrics	.\\include\\freetype\\internal\\tttypes.h	/^  } TT_SBit_MetricsRec, *TT_SBit_Metrics;$/;"	t	typeref:struct:TT_SBit_MetricsRec_ *
TT_SBit_MetricsRec	.\\include\\freetype\\internal\\tttypes.h	/^  } TT_SBit_MetricsRec, *TT_SBit_Metrics;$/;"	t	typeref:struct:TT_SBit_MetricsRec_
TT_SBit_MetricsRec_	.\\include\\freetype\\internal\\tttypes.h	/^  typedef struct  TT_SBit_MetricsRec_$/;"	s
TT_SBit_Range	.\\include\\freetype\\internal\\tttypes.h	/^  } TT_SBit_RangeRec, *TT_SBit_Range;$/;"	t	typeref:struct:TT_SBit_RangeRec_ *
TT_SBit_RangeRec	.\\include\\freetype\\internal\\tttypes.h	/^  } TT_SBit_RangeRec, *TT_SBit_Range;$/;"	t	typeref:struct:TT_SBit_RangeRec_
TT_SBit_RangeRec_	.\\include\\freetype\\internal\\tttypes.h	/^  typedef struct  TT_SBit_RangeRec_$/;"	s
TT_SBit_Scale	.\\include\\freetype\\internal\\tttypes.h	/^  } TT_SBit_ScaleRec, *TT_SBit_Scale;$/;"	t	typeref:struct:TT_SBit_ScaleRec_ *
TT_SBit_ScaleRec	.\\include\\freetype\\internal\\tttypes.h	/^  } TT_SBit_ScaleRec, *TT_SBit_Scale;$/;"	t	typeref:struct:TT_SBit_ScaleRec_
TT_SBit_ScaleRec_	.\\include\\freetype\\internal\\tttypes.h	/^  typedef struct  TT_SBit_ScaleRec_$/;"	s
TT_SBit_SmallMetrics	.\\include\\freetype\\internal\\tttypes.h	/^  } TT_SBit_SmallMetricsRec, *TT_SBit_SmallMetrics;$/;"	t	typeref:struct:TT_SBit_Small_Metrics_ *
TT_SBit_SmallMetricsRec	.\\include\\freetype\\internal\\tttypes.h	/^  } TT_SBit_SmallMetricsRec, *TT_SBit_SmallMetrics;$/;"	t	typeref:struct:TT_SBit_Small_Metrics_
TT_SBit_Small_Metrics_	.\\include\\freetype\\internal\\tttypes.h	/^  typedef struct  TT_SBit_Small_Metrics_$/;"	s
TT_SBit_Strike	.\\include\\freetype\\internal\\tttypes.h	/^  } TT_SBit_StrikeRec, *TT_SBit_Strike;$/;"	t	typeref:struct:TT_SBit_StrikeRec_ *
TT_SBit_StrikeRec	.\\include\\freetype\\internal\\tttypes.h	/^  } TT_SBit_StrikeRec, *TT_SBit_Strike;$/;"	t	typeref:struct:TT_SBit_StrikeRec_
TT_SBit_StrikeRec_	.\\include\\freetype\\internal\\tttypes.h	/^  typedef struct  TT_SBit_StrikeRec_$/;"	s
TT_SUPPORT_SUBPIXEL_HINTING_INFINALITY	.\\include\\freetype\\config\\ftoption.h	/^#define  TT_SUPPORT_SUBPIXEL_HINTING_INFINALITY$/;"	d
TT_SUPPORT_SUBPIXEL_HINTING_MINIMAL	.\\include\\freetype\\config\\ftoption.h	/^#define  TT_SUPPORT_SUBPIXEL_HINTING_MINIMAL$/;"	d
TT_SbitTableType	.\\include\\freetype\\internal\\tttypes.h	/^  } TT_SbitTableType;$/;"	t	typeref:enum:TT_SbitTableType_
TT_SbitTableType_	.\\include\\freetype\\internal\\tttypes.h	/^  typedef enum TT_SbitTableType_$/;"	g
TT_Set_SBit_Strike_Func	.\\include\\freetype\\internal\\sfnt.h	/^  (*TT_Set_SBit_Strike_Func)( TT_Face          face,$/;"	t	typeref:typename:FT_Error (*)(TT_Face face,FT_Size_Request req,FT_ULong * astrike_index)
TT_ShortMetrics	.\\include\\freetype\\internal\\tttypes.h	/^  typedef FT_Short  TT_ShortMetrics;$/;"	t	typeref:typename:FT_Short
TT_Size	.\\include\\freetype\\internal\\tttypes.h	/^  typedef struct TT_SizeRec_*  TT_Size;$/;"	t	typeref:struct:TT_SizeRec_ *
TT_Table	.\\include\\freetype\\internal\\tttypes.h	/^  } TT_TableRec, *TT_Table;$/;"	t	typeref:struct:TT_TableRec_ *
TT_TableRec	.\\include\\freetype\\internal\\tttypes.h	/^  } TT_TableRec, *TT_Table;$/;"	t	typeref:struct:TT_TableRec_
TT_TableRec_	.\\include\\freetype\\internal\\tttypes.h	/^  typedef struct  TT_TableRec_$/;"	s
TT_UCR_ALPHABETIC_PRESENTATION_FORMS	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_ALPHABETIC_PRESENTATION_FORMS /;"	d
TT_UCR_ANCIENT_GREEK_NUMBERS	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_ANCIENT_GREEK_NUMBERS /;"	d
TT_UCR_ANCIENT_SYMBOLS	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_ANCIENT_SYMBOLS /;"	d
TT_UCR_ARABIC	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_ARABIC /;"	d
TT_UCR_ARABIC_PRESENTATIONS_A	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_ARABIC_PRESENTATIONS_A /;"	d
TT_UCR_ARABIC_PRESENTATIONS_B	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_ARABIC_PRESENTATIONS_B /;"	d
TT_UCR_ARABIC_PRESENTATION_FORMS_A	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_ARABIC_PRESENTATION_FORMS_A /;"	d
TT_UCR_ARABIC_PRESENTATION_FORMS_B	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_ARABIC_PRESENTATION_FORMS_B /;"	d
TT_UCR_ARMENIAN	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_ARMENIAN /;"	d
TT_UCR_ARROWS	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_ARROWS /;"	d
TT_UCR_BALINESE	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_BALINESE /;"	d
TT_UCR_BASIC_LATIN	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_BASIC_LATIN /;"	d
TT_UCR_BENGALI	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_BENGALI /;"	d
TT_UCR_BLOCK_ELEMENTS	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_BLOCK_ELEMENTS /;"	d
TT_UCR_BOPOMOFO	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_BOPOMOFO /;"	d
TT_UCR_BOX_DRAWING	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_BOX_DRAWING /;"	d
TT_UCR_BRAILLE	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_BRAILLE /;"	d
TT_UCR_BUGINESE	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_BUGINESE /;"	d
TT_UCR_CANADIAN_ABORIGINAL_SYLLABICS	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_CANADIAN_ABORIGINAL_SYLLABICS /;"	d
TT_UCR_CHAM	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_CHAM /;"	d
TT_UCR_CHEROKEE	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_CHEROKEE /;"	d
TT_UCR_CJK_COMPATIBILITY	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_CJK_COMPATIBILITY /;"	d
TT_UCR_CJK_COMPATIBILITY_FORMS	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_CJK_COMPATIBILITY_FORMS /;"	d
TT_UCR_CJK_COMPATIBILITY_IDEOGRAPHS	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_CJK_COMPATIBILITY_IDEOGRAPHS /;"	d
TT_UCR_CJK_MISC	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_CJK_MISC /;"	d
TT_UCR_CJK_SYMBOLS	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_CJK_SYMBOLS /;"	d
TT_UCR_CJK_UNIFIED_IDEOGRAPHS	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_CJK_UNIFIED_IDEOGRAPHS /;"	d
TT_UCR_COMBINING_DIACRITICAL_MARKS	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_COMBINING_DIACRITICAL_MARKS /;"	d
TT_UCR_COMBINING_DIACRITICAL_MARKS_SYMB	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_COMBINING_DIACRITICAL_MARKS_SYMB /;"	d
TT_UCR_COMBINING_DIACRITICS	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_COMBINING_DIACRITICS /;"	d
TT_UCR_COMBINING_DIACRITICS_SYMB	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_COMBINING_DIACRITICS_SYMB /;"	d
TT_UCR_COMBINING_HALF_MARKS	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_COMBINING_HALF_MARKS /;"	d
TT_UCR_CONTROL_PICTURES	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_CONTROL_PICTURES /;"	d
TT_UCR_COPTIC	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_COPTIC /;"	d
TT_UCR_COUNTING_ROD_NUMERALS	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_COUNTING_ROD_NUMERALS /;"	d
TT_UCR_CUNEIFORM	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_CUNEIFORM /;"	d
TT_UCR_CURRENCY_SYMBOLS	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_CURRENCY_SYMBOLS /;"	d
TT_UCR_CYPRIOT_SYLLABARY	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_CYPRIOT_SYLLABARY /;"	d
TT_UCR_CYRILLIC	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_CYRILLIC /;"	d
TT_UCR_DESERET	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_DESERET /;"	d
TT_UCR_DEVANAGARI	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_DEVANAGARI /;"	d
TT_UCR_DINGBATS	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_DINGBATS /;"	d
TT_UCR_ENCLOSED_ALPHANUMERICS	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_ENCLOSED_ALPHANUMERICS /;"	d
TT_UCR_ENCLOSED_CJK_LETTERS_MONTHS	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_ENCLOSED_CJK_LETTERS_MONTHS /;"	d
TT_UCR_ETHIOPIC	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_ETHIOPIC /;"	d
TT_UCR_GAME_TILES	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_GAME_TILES /;"	d
TT_UCR_GENERAL_PUNCTUATION	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_GENERAL_PUNCTUATION /;"	d
TT_UCR_GEOMETRIC_SHAPES	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_GEOMETRIC_SHAPES /;"	d
TT_UCR_GEORGIAN	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_GEORGIAN /;"	d
TT_UCR_GLAGOLITIC	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_GLAGOLITIC /;"	d
TT_UCR_GOTHIC	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_GOTHIC /;"	d
TT_UCR_GREEK	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_GREEK /;"	d
TT_UCR_GREEK_EXTENDED	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_GREEK_EXTENDED /;"	d
TT_UCR_GUJARATI	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_GUJARATI /;"	d
TT_UCR_GURMUKHI	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_GURMUKHI /;"	d
TT_UCR_HALFWIDTH_FULLWIDTH_FORMS	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_HALFWIDTH_FULLWIDTH_FORMS /;"	d
TT_UCR_HANGUL	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_HANGUL /;"	d
TT_UCR_HANGUL_COMPATIBILITY_JAMO	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_HANGUL_COMPATIBILITY_JAMO /;"	d
TT_UCR_HANGUL_JAMO	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_HANGUL_JAMO /;"	d
TT_UCR_HEBREW	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_HEBREW /;"	d
TT_UCR_HIRAGANA	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_HIRAGANA /;"	d
TT_UCR_IPA_EXTENSIONS	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_IPA_EXTENSIONS /;"	d
TT_UCR_KANBUN	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_KANBUN /;"	d
TT_UCR_KANNADA	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_KANNADA /;"	d
TT_UCR_KATAKANA	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_KATAKANA /;"	d
TT_UCR_KAYAH_LI	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_KAYAH_LI /;"	d
TT_UCR_KHAROSHTHI	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_KHAROSHTHI /;"	d
TT_UCR_KHMER	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_KHMER /;"	d
TT_UCR_LAO	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_LAO /;"	d
TT_UCR_LATIN1_SUPPLEMENT	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_LATIN1_SUPPLEMENT /;"	d
TT_UCR_LATIN_EXTENDED_A	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_LATIN_EXTENDED_A /;"	d
TT_UCR_LATIN_EXTENDED_ADDITIONAL	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_LATIN_EXTENDED_ADDITIONAL /;"	d
TT_UCR_LATIN_EXTENDED_B	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_LATIN_EXTENDED_B /;"	d
TT_UCR_LEPCHA	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_LEPCHA /;"	d
TT_UCR_LETTERLIKE_SYMBOLS	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_LETTERLIKE_SYMBOLS /;"	d
TT_UCR_LIMBU	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_LIMBU /;"	d
TT_UCR_LINEAR_B	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_LINEAR_B /;"	d
TT_UCR_MALAYALAM	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_MALAYALAM /;"	d
TT_UCR_MATHEMATICAL_OPERATORS	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_MATHEMATICAL_OPERATORS /;"	d
TT_UCR_MATH_ALPHANUMERIC_SYMBOLS	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_MATH_ALPHANUMERIC_SYMBOLS /;"	d
TT_UCR_MISCELLANEOUS_SYMBOLS	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_MISCELLANEOUS_SYMBOLS /;"	d
TT_UCR_MISCELLANEOUS_TECHNICAL	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_MISCELLANEOUS_TECHNICAL /;"	d
TT_UCR_MONGOLIAN	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_MONGOLIAN /;"	d
TT_UCR_MUSICAL_SYMBOLS	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_MUSICAL_SYMBOLS /;"	d
TT_UCR_MYANMAR	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_MYANMAR /;"	d
TT_UCR_NEW_TAI_LUE	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_NEW_TAI_LUE /;"	d
TT_UCR_NKO	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_NKO /;"	d
TT_UCR_NON_PLANE_0	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_NON_PLANE_0 /;"	d
TT_UCR_NUMBER_FORMS	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_NUMBER_FORMS /;"	d
TT_UCR_OCR	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_OCR /;"	d
TT_UCR_OGHAM	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_OGHAM /;"	d
TT_UCR_OLD_ANATOLIAN	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_OLD_ANATOLIAN /;"	d
TT_UCR_OLD_ITALIC	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_OLD_ITALIC /;"	d
TT_UCR_OLD_PERSIAN	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_OLD_PERSIAN /;"	d
TT_UCR_OL_CHIKI	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_OL_CHIKI /;"	d
TT_UCR_ORIYA	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_ORIYA /;"	d
TT_UCR_OSMANYA	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_OSMANYA /;"	d
TT_UCR_PHAGSPA	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_PHAGSPA$/;"	d
TT_UCR_PHAISTOS_DISC	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_PHAISTOS_DISC /;"	d
TT_UCR_PHILIPPINE	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_PHILIPPINE /;"	d
TT_UCR_PHOENICIAN	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_PHOENICIAN /;"	d
TT_UCR_PRIVATE_USE	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_PRIVATE_USE /;"	d
TT_UCR_PRIVATE_USE_SUPPLEMENTARY	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_PRIVATE_USE_SUPPLEMENTARY /;"	d
TT_UCR_REJANG	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_REJANG /;"	d
TT_UCR_RUNIC	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_RUNIC /;"	d
TT_UCR_SAURASHTRA	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_SAURASHTRA /;"	d
TT_UCR_SHAVIAN	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_SHAVIAN /;"	d
TT_UCR_SINHALA	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_SINHALA /;"	d
TT_UCR_SMALL_FORM_VARIANTS	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_SMALL_FORM_VARIANTS /;"	d
TT_UCR_SPACING_MODIFIER	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_SPACING_MODIFIER /;"	d
TT_UCR_SPECIALS	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_SPECIALS /;"	d
TT_UCR_SUNDANESE	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_SUNDANESE /;"	d
TT_UCR_SUPERSCRIPTS_SUBSCRIPTS	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_SUPERSCRIPTS_SUBSCRIPTS /;"	d
TT_UCR_SURROGATES	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_SURROGATES /;"	d
TT_UCR_SYLOTI_NAGRI	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_SYLOTI_NAGRI /;"	d
TT_UCR_SYRIAC	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_SYRIAC /;"	d
TT_UCR_TAGS	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_TAGS /;"	d
TT_UCR_TAI_LE	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_TAI_LE /;"	d
TT_UCR_TAI_XUAN_JING	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_TAI_XUAN_JING /;"	d
TT_UCR_TAMIL	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_TAMIL /;"	d
TT_UCR_TELUGU	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_TELUGU /;"	d
TT_UCR_THAANA	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_THAANA /;"	d
TT_UCR_THAI	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_THAI /;"	d
TT_UCR_TIBETAN	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_TIBETAN /;"	d
TT_UCR_TIFINAGH	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_TIFINAGH /;"	d
TT_UCR_UGARITIC	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_UGARITIC /;"	d
TT_UCR_VAI	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_VAI /;"	d
TT_UCR_VARIATION_SELECTORS	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_VARIATION_SELECTORS /;"	d
TT_UCR_YI	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_YI /;"	d
TT_UCR_YIJING	.\\include\\freetype\\ttnameid.h	/^#define TT_UCR_YIJING /;"	d
TT_USE_BYTECODE_INTERPRETER	.\\include\\freetype\\config\\ftoption.h	/^#define  TT_USE_BYTECODE_INTERPRETER$/;"	d
TT_VertHeader	.\\include\\freetype\\tttables.h	/^  } TT_VertHeader;$/;"	t	typeref:struct:TT_VertHeader_
TT_VertHeader_	.\\include\\freetype\\tttables.h	/^  typedef struct  TT_VertHeader_$/;"	s
Table_Version	.\\include\\freetype\\tttables.h	/^    FT_Fixed   Table_Version;$/;"	m	struct:TT_Header_	typeref:typename:FT_Fixed
Tag	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ULong  Tag;           \/* table ID                  *\/$/;"	m	struct:WOFF_TableRec_	typeref:typename:FT_ULong
Tag	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ULong  Tag;        \/*        table type *\/$/;"	m	struct:TT_TableRec_	typeref:typename:FT_ULong
TestPointer	.\\src\\gl_core_3_3.cpp	/^static int TestPointer(const PROC pTest)$/;"	f	typeref:typename:int	file:
TextureID	.\\include\\Window.h	/^    GLuint   TextureID;  \/\/ ID handle of the glyph texture$/;"	m	struct:Character	typeref:typename:GLuint
TrackKerns	.\\include\\freetype\\internal\\t1types.h	/^    AFM_TrackKern  TrackKerns;   \/* free if non-NULL *\/$/;"	m	struct:AFM_FontInfoRec_	typeref:typename:AFM_TrackKern
TypeFace	.\\include\\freetype\\tttables.h	/^    FT_Char    TypeFace[16];$/;"	m	struct:TT_PCLT_	typeref:typename:FT_Char[16]
TypeFamily	.\\include\\freetype\\tttables.h	/^    FT_UShort  TypeFamily;$/;"	m	struct:TT_PCLT_	typeref:typename:FT_UShort
Units_Per_EM	.\\include\\freetype\\tttables.h	/^    FT_UShort  Units_Per_EM;$/;"	m	struct:TT_Header_	typeref:typename:FT_UShort
VAO	.\\src\\Window.cpp	/^GLuint VAO, VBO;$/;"	v	typeref:typename:GLuint
VBO	.\\src\\Window.cpp	/^GLuint VAO, VBO;$/;"	v	typeref:typename:GLuint
VERSION	.\\include\\oauthConfig.h	/^#define VERSION /;"	d
Version	.\\include\\freetype\\tttables.h	/^    FT_Fixed   Version;$/;"	m	struct:TT_HoriHeader_	typeref:typename:FT_Fixed
Version	.\\include\\freetype\\tttables.h	/^    FT_Fixed   Version;$/;"	m	struct:TT_PCLT_	typeref:typename:FT_Fixed
Version	.\\include\\freetype\\tttables.h	/^    FT_Fixed   Version;$/;"	m	struct:TT_VertHeader_	typeref:typename:FT_Fixed
WIN32	.\\include\\curl\\curl.h	/^#define WIN32$/;"	d
WIN32_LEAN_AND_MEAN	.\\include\\gl_core_3_3.h	/^			#define WIN32_LEAN_AND_MEAN /;"	d
WINGDIAPI	.\\include\\GLFW\\glfw3.h	/^ #define WINGDIAPI /;"	d
WIPE_MEMORY	.\\src\\oauth.cpp	/^#define WIPE_MEMORY /;"	d	file:
WOFF_Header	.\\include\\freetype\\internal\\tttypes.h	/^  } WOFF_HeaderRec, *WOFF_Header;$/;"	t	typeref:struct:WOFF_HeaderRec_ *
WOFF_HeaderRec	.\\include\\freetype\\internal\\tttypes.h	/^  } WOFF_HeaderRec, *WOFF_Header;$/;"	t	typeref:struct:WOFF_HeaderRec_
WOFF_HeaderRec_	.\\include\\freetype\\internal\\tttypes.h	/^  typedef struct  WOFF_HeaderRec_$/;"	s
WOFF_Table	.\\include\\freetype\\internal\\tttypes.h	/^  } WOFF_TableRec, *WOFF_Table;$/;"	t	typeref:struct:WOFF_TableRec_ *
WOFF_TableRec	.\\include\\freetype\\internal\\tttypes.h	/^  } WOFF_TableRec, *WOFF_Table;$/;"	t	typeref:struct:WOFF_TableRec_
WOFF_TableRec_	.\\include\\freetype\\internal\\tttypes.h	/^  typedef struct  WOFF_TableRec_$/;"	s
WidthType	.\\include\\freetype\\tttables.h	/^    FT_Char    WidthType;$/;"	m	struct:TT_PCLT_	typeref:typename:FT_Char
WinGetProcAddress	.\\src\\gl_core_3_3.cpp	/^static PROC WinGetProcAddress(const char *name)$/;"	f	typeref:typename:PROC	file:
_CURL_WARNING	.\\include\\curl\\typecheck-gcc.h	/^#define _CURL_WARNING(/;"	d
_DEPS	.\\makefile	/^_DEPS=Window.h gl_core_3_3.h ft2build.h$/;"	m
_OAUTH_H	.\\include\\oauth.h	/^#define _OAUTH_H /;"	d
_OAUTH_XMALLOC_H	.\\include\\xmalloc.h	/^#define _OAUTH_XMALLOC_H /;"	d
_OBJ	.\\makefile	/^_OBJ=gl_core_3_3.o Window.o oauth.o xmalloc.o hash.o$/;"	m
_WIN32	.\\include\\GLFW\\glfw3.h	/^ #define _WIN32$/;"	d
__CURL_CURLBUILD_H	.\\include\\curl\\curlbuild.h	/^#define __CURL_CURLBUILD_H$/;"	d
__CURL_CURLRULES_H	.\\include\\curl\\curlrules.h	/^#define __CURL_CURLRULES_H$/;"	d
__CURL_CURLVER_H	.\\include\\curl\\curlver.h	/^#define __CURL_CURLVER_H$/;"	d
__CURL_CURL_H	.\\include\\curl\\curl.h	/^#define __CURL_CURL_H$/;"	d
__CURL_EASY_H	.\\include\\curl\\easy.h	/^#define __CURL_EASY_H$/;"	d
__CURL_MPRINTF_H	.\\include\\curl\\mprintf.h	/^#define __CURL_MPRINTF_H$/;"	d
__CURL_MULTI_H	.\\include\\curl\\multi.h	/^#define __CURL_MULTI_H$/;"	d
__CURL_OFF_T_C_HLPR1	.\\include\\curl\\curlrules.h	/^#  define __CURL_OFF_T_C_HLPR1(/;"	d
__CURL_OFF_T_C_HLPR2	.\\include\\curl\\curlrules.h	/^#    define __CURL_OFF_T_C_HLPR2(/;"	d
__CURL_OFF_T_C_HLPR2	.\\include\\curl\\curlrules.h	/^#  define __CURL_OFF_T_C_HLPR2(/;"	d
__CURL_TYPECHECK_GCC_H	.\\include\\curl\\typecheck-gcc.h	/^#define __CURL_TYPECHECK_GCC_H$/;"	d
__FTERRORS_H__	.\\include\\freetype\\fterrors.h	/^#define __FTERRORS_H__$/;"	d
__FTXF86_H__	.\\include\\freetype\\ftxf86.h	/^#define __FTXF86_H__$/;"	d
__GLEW_H__	.\\include\\gl_core_3_3.h	/^#define __GLEW_H__$/;"	d
__GLEXT_H_	.\\include\\gl_core_3_3.h	/^#define __GLEXT_H_$/;"	d
__GL_H__	.\\include\\gl_core_3_3.h	/^#define __GL_H__$/;"	d
__STDC_HEADERS_H	.\\include\\curl\\stdcheaders.h	/^#define __STDC_HEADERS_H$/;"	d
__anon0621b64b010a	.\\include\\freetype\\ftbdf.h	/^    union {$/;"	u	struct:BDF_PropertyRec_
__anon529bf04d0103	.\\include\\curl\\curl.h	/^typedef enum {$/;"	g
__anon529bf04d0208	.\\include\\curl\\curl.h	/^  struct {$/;"	s	struct:curl_fileinfo
__anon529bf04d0303	.\\include\\curl\\curl.h	/^typedef enum  {$/;"	g
__anon529bf04d0403	.\\include\\curl\\curl.h	/^typedef enum {$/;"	g
__anon529bf04d0503	.\\include\\curl\\curl.h	/^typedef enum  {$/;"	g
__anon529bf04d0603	.\\include\\curl\\curl.h	/^typedef enum {$/;"	g
__anon529bf04d0703	.\\include\\curl\\curl.h	/^typedef enum {$/;"	g
__anon529bf04d0803	.\\include\\curl\\curl.h	/^typedef enum {$/;"	g
__anon529bf04d0903	.\\include\\curl\\curl.h	/^typedef enum {$/;"	g
__anon529bf04d0a03	.\\include\\curl\\curl.h	/^typedef enum {$/;"	g
__anon529bf04d0b03	.\\include\\curl\\curl.h	/^typedef enum {$/;"	g
__anon529bf04d0c03	.\\include\\curl\\curl.h	/^typedef enum {$/;"	g
__anon529bf04d0d03	.\\include\\curl\\curl.h	/^typedef enum {$/;"	g
__anon529bf04d0e03	.\\include\\curl\\curl.h	/^typedef enum {$/;"	g
__anon529bf04d0f03	.\\include\\curl\\curl.h	/^enum {$/;"	g
__anon529bf04d1003	.\\include\\curl\\curl.h	/^enum {$/;"	g
__anon529bf04d1103	.\\include\\curl\\curl.h	/^enum {$/;"	g
__anon529bf04d1203	.\\include\\curl\\curl.h	/^typedef enum {$/;"	g
__anon529bf04d1303	.\\include\\curl\\curl.h	/^typedef enum {$/;"	g
__anon529bf04d1403	.\\include\\curl\\curl.h	/^typedef enum {$/;"	g
__anon529bf04d1503	.\\include\\curl\\curl.h	/^typedef enum {$/;"	g
__anon529bf04d1603	.\\include\\curl\\curl.h	/^typedef enum {$/;"	g
__anon529bf04d1703	.\\include\\curl\\curl.h	/^typedef enum {$/;"	g
__anon529bf04d1803	.\\include\\curl\\curl.h	/^typedef enum {$/;"	g
__anon529bf04d1903	.\\include\\curl\\curl.h	/^typedef enum {$/;"	g
__anon529bf04d1a03	.\\include\\curl\\curl.h	/^typedef enum {$/;"	g
__anon529bf04d1b03	.\\include\\curl\\curl.h	/^typedef enum {$/;"	g
__anon529bf04d1c03	.\\include\\curl\\curl.h	/^typedef enum {$/;"	g
__anon529bf04d1d08	.\\include\\curl\\curl.h	/^typedef struct {$/;"	s
__anon5c6118fb010a	.\\include\\freetype\\internal\\tttypes.h	/^    {$/;"	u	struct:TT_Post_NamesRec_
__anona7791d620103	.\\include\\curl\\multi.h	/^typedef enum {$/;"	g
__anona7791d620203	.\\include\\curl\\multi.h	/^typedef enum {$/;"	g
__anona7791d62030a	.\\include\\curl\\multi.h	/^  union {$/;"	u	struct:CURLMsg
__anona7791d620403	.\\include\\curl\\multi.h	/^typedef enum {$/;"	g
__anonb3585c060103	.\\include\\oauth.h	/^typedef enum { $/;"	g
__curl_rule_01__	.\\include\\curl\\curlrules.h	/^  __curl_rule_01__$/;"	t	typeref:typename:char[CurlchkszEQ (long,CURL_SIZEOF_LONG)]
__curl_rule_02__	.\\include\\curl\\curlrules.h	/^  __curl_rule_02__$/;"	t	typeref:typename:char[CurlchkszEQ (curl_off_t,CURL_SIZEOF_CURL_OFF_T)]
__curl_rule_03__	.\\include\\curl\\curlrules.h	/^  __curl_rule_03__$/;"	t	typeref:typename:char[CurlchkszGE (curl_off_t,long)]
__curl_rule_04__	.\\include\\curl\\curlrules.h	/^  __curl_rule_04__$/;"	t	typeref:typename:char[CurlchkszEQ (curl_socklen_t,CURL_SIZEOF_CURL_SOCKLEN_T)]
__curl_rule_05__	.\\include\\curl\\curlrules.h	/^  __curl_rule_05__$/;"	t	typeref:typename:char[CurlchkszGE (curl_socklen_t,int)]
__gl_ATI_h_	.\\include\\gl_core_3_3.h	/^#define __gl_ATI_h_$/;"	d
__gl_h_	.\\include\\gl_core_3_3.h	/^#define __gl_h_$/;"	d
__glew_h__	.\\include\\gl_core_3_3.h	/^#define __glew_h__$/;"	d
__glext_h_	.\\include\\gl_core_3_3.h	/^#define __glext_h_$/;"	d
__gltypes_h_	.\\include\\gl_core_3_3.h	/^#define __gltypes_h_$/;"	d
_curl_callback_compatible	.\\include\\curl\\typecheck-gcc.h	/^#define _curl_callback_compatible(/;"	d
_curl_conv_callback1	.\\include\\curl\\typecheck-gcc.h	/^typedef CURLcode (*_curl_conv_callback1)(char *, size_t length);$/;"	t	typeref:typename:CURLcode (*)(char *,size_t length)
_curl_conv_callback2	.\\include\\curl\\typecheck-gcc.h	/^typedef CURLcode (*_curl_conv_callback2)(const char *, size_t length);$/;"	t	typeref:typename:CURLcode (*)(const char *,size_t length)
_curl_conv_callback3	.\\include\\curl\\typecheck-gcc.h	/^typedef CURLcode (*_curl_conv_callback3)(void *, size_t length);$/;"	t	typeref:typename:CURLcode (*)(void *,size_t length)
_curl_conv_callback4	.\\include\\curl\\typecheck-gcc.h	/^typedef CURLcode (*_curl_conv_callback4)(const void *, size_t length);$/;"	t	typeref:typename:CURLcode (*)(const void *,size_t length)
_curl_debug_callback1	.\\include\\curl\\typecheck-gcc.h	/^typedef int (_curl_debug_callback1) (CURL *,$/;"	t	typeref:typename:int ()(CURL *,curl_infotype,char *,size_t,void *)
_curl_debug_callback2	.\\include\\curl\\typecheck-gcc.h	/^typedef int (_curl_debug_callback2) (CURL *,$/;"	t	typeref:typename:int ()(CURL *,curl_infotype,char *,size_t,const void *)
_curl_debug_callback3	.\\include\\curl\\typecheck-gcc.h	/^typedef int (_curl_debug_callback3) (CURL *,$/;"	t	typeref:typename:int ()(CURL *,curl_infotype,const char *,size_t,void *)
_curl_debug_callback4	.\\include\\curl\\typecheck-gcc.h	/^typedef int (_curl_debug_callback4) (CURL *,$/;"	t	typeref:typename:int ()(CURL *,curl_infotype,const char *,size_t,const void *)
_curl_debug_callback5	.\\include\\curl\\typecheck-gcc.h	/^typedef int (_curl_debug_callback5) (CURL *,$/;"	t	typeref:typename:int ()(CURL *,curl_infotype,unsigned char *,size_t,void *)
_curl_debug_callback6	.\\include\\curl\\typecheck-gcc.h	/^typedef int (_curl_debug_callback6) (CURL *,$/;"	t	typeref:typename:int ()(CURL *,curl_infotype,unsigned char *,size_t,const void *)
_curl_debug_callback7	.\\include\\curl\\typecheck-gcc.h	/^typedef int (_curl_debug_callback7) (CURL *,$/;"	t	typeref:typename:int ()(CURL *,curl_infotype,const unsigned char *,size_t,void *)
_curl_debug_callback8	.\\include\\curl\\typecheck-gcc.h	/^typedef int (_curl_debug_callback8) (CURL *,$/;"	t	typeref:typename:int ()(CURL *,curl_infotype,const unsigned char *,size_t,const void *)
_curl_ioctl_callback1	.\\include\\curl\\typecheck-gcc.h	/^typedef curlioerr (_curl_ioctl_callback1)(CURL *, int, void*);$/;"	t	typeref:typename:curlioerr ()(CURL *,int,void *)
_curl_ioctl_callback2	.\\include\\curl\\typecheck-gcc.h	/^typedef curlioerr (_curl_ioctl_callback2)(CURL *, int, const void*);$/;"	t	typeref:typename:curlioerr ()(CURL *,int,const void *)
_curl_ioctl_callback3	.\\include\\curl\\typecheck-gcc.h	/^typedef curlioerr (_curl_ioctl_callback3)(CURL *, curliocmd, void*);$/;"	t	typeref:typename:curlioerr ()(CURL *,curliocmd,void *)
_curl_ioctl_callback4	.\\include\\curl\\typecheck-gcc.h	/^typedef curlioerr (_curl_ioctl_callback4)(CURL *, curliocmd, const void*);$/;"	t	typeref:typename:curlioerr ()(CURL *,curliocmd,const void *)
_curl_is_FILE	.\\include\\curl\\typecheck-gcc.h	/^#define _curl_is_FILE(/;"	d
_curl_is_NULL	.\\include\\curl\\typecheck-gcc.h	/^#define _curl_is_NULL(/;"	d
_curl_is_any_ptr	.\\include\\curl\\typecheck-gcc.h	/^#define _curl_is_any_ptr(/;"	d
_curl_is_arr	.\\include\\curl\\typecheck-gcc.h	/^#define _curl_is_arr(/;"	d
_curl_is_cb_data	.\\include\\curl\\typecheck-gcc.h	/^#define _curl_is_cb_data(/;"	d
_curl_is_cb_data_option	.\\include\\curl\\typecheck-gcc.h	/^#define _curl_is_cb_data_option(/;"	d
_curl_is_conv_cb	.\\include\\curl\\typecheck-gcc.h	/^#define _curl_is_conv_cb(/;"	d
_curl_is_conv_cb_option	.\\include\\curl\\typecheck-gcc.h	/^#define _curl_is_conv_cb_option(/;"	d
_curl_is_debug_cb	.\\include\\curl\\typecheck-gcc.h	/^#define _curl_is_debug_cb(/;"	d
_curl_is_double_info	.\\include\\curl\\typecheck-gcc.h	/^#define _curl_is_double_info(/;"	d
_curl_is_error_buffer	.\\include\\curl\\typecheck-gcc.h	/^#define _curl_is_error_buffer(/;"	d
_curl_is_ioctl_cb	.\\include\\curl\\typecheck-gcc.h	/^#define _curl_is_ioctl_cb(/;"	d
_curl_is_long	.\\include\\curl\\typecheck-gcc.h	/^#define _curl_is_long(/;"	d
_curl_is_long_info	.\\include\\curl\\typecheck-gcc.h	/^#define _curl_is_long_info(/;"	d
_curl_is_long_option	.\\include\\curl\\typecheck-gcc.h	/^#define _curl_is_long_option(/;"	d
_curl_is_off_t	.\\include\\curl\\typecheck-gcc.h	/^#define _curl_is_off_t(/;"	d
_curl_is_off_t_option	.\\include\\curl\\typecheck-gcc.h	/^#define _curl_is_off_t_option(/;"	d
_curl_is_opensocket_cb	.\\include\\curl\\typecheck-gcc.h	/^#define _curl_is_opensocket_cb(/;"	d
_curl_is_postfields	.\\include\\curl\\typecheck-gcc.h	/^#define _curl_is_postfields(/;"	d
_curl_is_postfields_option	.\\include\\curl\\typecheck-gcc.h	/^#define _curl_is_postfields_option(/;"	d
_curl_is_progress_cb	.\\include\\curl\\typecheck-gcc.h	/^#define _curl_is_progress_cb(/;"	d
_curl_is_ptr	.\\include\\curl\\typecheck-gcc.h	/^#define _curl_is_ptr(/;"	d
_curl_is_read_cb	.\\include\\curl\\typecheck-gcc.h	/^#define _curl_is_read_cb(/;"	d
_curl_is_seek_cb	.\\include\\curl\\typecheck-gcc.h	/^#define _curl_is_seek_cb(/;"	d
_curl_is_slist_info	.\\include\\curl\\typecheck-gcc.h	/^#define _curl_is_slist_info(/;"	d
_curl_is_slist_option	.\\include\\curl\\typecheck-gcc.h	/^#define _curl_is_slist_option(/;"	d
_curl_is_sockopt_cb	.\\include\\curl\\typecheck-gcc.h	/^#define _curl_is_sockopt_cb(/;"	d
_curl_is_ssl_ctx_cb	.\\include\\curl\\typecheck-gcc.h	/^#define _curl_is_ssl_ctx_cb(/;"	d
_curl_is_string	.\\include\\curl\\typecheck-gcc.h	/^#define _curl_is_string(/;"	d
_curl_is_string_info	.\\include\\curl\\typecheck-gcc.h	/^#define _curl_is_string_info(/;"	d
_curl_is_string_option	.\\include\\curl\\typecheck-gcc.h	/^#define _curl_is_string_option(/;"	d
_curl_is_write_cb	.\\include\\curl\\typecheck-gcc.h	/^#define _curl_is_write_cb(/;"	d
_curl_is_write_cb_option	.\\include\\curl\\typecheck-gcc.h	/^#define _curl_is_write_cb_option(/;"	d
_curl_opensocket_callback1	.\\include\\curl\\typecheck-gcc.h	/^typedef curl_socket_t (_curl_opensocket_callback1)$/;"	t	typeref:typename:curl_socket_t ()(void *,curlsocktype,struct curl_sockaddr *)
_curl_opensocket_callback2	.\\include\\curl\\typecheck-gcc.h	/^typedef curl_socket_t (_curl_opensocket_callback2)$/;"	t	typeref:typename:curl_socket_t ()(void *,curlsocktype,const struct curl_sockaddr *)
_curl_opensocket_callback3	.\\include\\curl\\typecheck-gcc.h	/^typedef curl_socket_t (_curl_opensocket_callback3)$/;"	t	typeref:typename:curl_socket_t ()(const void *,curlsocktype,struct curl_sockaddr *)
_curl_opensocket_callback4	.\\include\\curl\\typecheck-gcc.h	/^typedef curl_socket_t (_curl_opensocket_callback4)$/;"	t	typeref:typename:curl_socket_t ()(const void *,curlsocktype,const struct curl_sockaddr *)
_curl_progress_callback1	.\\include\\curl\\typecheck-gcc.h	/^typedef int (_curl_progress_callback1)(void *,$/;"	t	typeref:typename:int ()(void *,double,double,double,double)
_curl_progress_callback2	.\\include\\curl\\typecheck-gcc.h	/^typedef int (_curl_progress_callback2)(const void *,$/;"	t	typeref:typename:int ()(const void *,double,double,double,double)
_curl_read_callback1	.\\include\\curl\\typecheck-gcc.h	/^typedef size_t (_curl_read_callback1)(char *, size_t, size_t, void*);$/;"	t	typeref:typename:size_t ()(char *,size_t,size_t,void *)
_curl_read_callback2	.\\include\\curl\\typecheck-gcc.h	/^typedef size_t (_curl_read_callback2)(char *, size_t, size_t, const void*);$/;"	t	typeref:typename:size_t ()(char *,size_t,size_t,const void *)
_curl_read_callback3	.\\include\\curl\\typecheck-gcc.h	/^typedef size_t (_curl_read_callback3)(char *, size_t, size_t, FILE*);$/;"	t	typeref:typename:size_t ()(char *,size_t,size_t,FILE *)
_curl_read_callback4	.\\include\\curl\\typecheck-gcc.h	/^typedef size_t (_curl_read_callback4)(void *, size_t, size_t, void*);$/;"	t	typeref:typename:size_t ()(void *,size_t,size_t,void *)
_curl_read_callback5	.\\include\\curl\\typecheck-gcc.h	/^typedef size_t (_curl_read_callback5)(void *, size_t, size_t, const void*);$/;"	t	typeref:typename:size_t ()(void *,size_t,size_t,const void *)
_curl_read_callback6	.\\include\\curl\\typecheck-gcc.h	/^typedef size_t (_curl_read_callback6)(void *, size_t, size_t, FILE*);$/;"	t	typeref:typename:size_t ()(void *,size_t,size_t,FILE *)
_curl_seek_callback1	.\\include\\curl\\typecheck-gcc.h	/^typedef CURLcode (*_curl_seek_callback1)(void *, curl_off_t, int);$/;"	t	typeref:typename:CURLcode (*)(void *,curl_off_t,int)
_curl_seek_callback2	.\\include\\curl\\typecheck-gcc.h	/^typedef CURLcode (*_curl_seek_callback2)(const void *, curl_off_t, int);$/;"	t	typeref:typename:CURLcode (*)(const void *,curl_off_t,int)
_curl_sockopt_callback1	.\\include\\curl\\typecheck-gcc.h	/^typedef int (_curl_sockopt_callback1)(void *, curl_socket_t, curlsocktype);$/;"	t	typeref:typename:int ()(void *,curl_socket_t,curlsocktype)
_curl_sockopt_callback2	.\\include\\curl\\typecheck-gcc.h	/^typedef int (_curl_sockopt_callback2)(const void *, curl_socket_t,$/;"	t	typeref:typename:int ()(const void *,curl_socket_t,curlsocktype)
_curl_ssl_ctx_callback1	.\\include\\curl\\typecheck-gcc.h	/^typedef CURLcode (_curl_ssl_ctx_callback1)(CURL *, void *, void *);$/;"	t	typeref:typename:CURLcode ()(CURL *,void *,void *)
_curl_ssl_ctx_callback2	.\\include\\curl\\typecheck-gcc.h	/^typedef CURLcode (_curl_ssl_ctx_callback2)(CURL *, void *, const void *);$/;"	t	typeref:typename:CURLcode ()(CURL *,void *,const void *)
_curl_ssl_ctx_callback3	.\\include\\curl\\typecheck-gcc.h	/^typedef CURLcode (_curl_ssl_ctx_callback3)(CURL *, const void *, void *);$/;"	t	typeref:typename:CURLcode ()(CURL *,const void *,void *)
_curl_ssl_ctx_callback4	.\\include\\curl\\typecheck-gcc.h	/^typedef CURLcode (_curl_ssl_ctx_callback4)(CURL *, const void *, const void *);$/;"	t	typeref:typename:CURLcode ()(CURL *,const void *,const void *)
_curl_ssl_ctx_callback5	.\\include\\curl\\typecheck-gcc.h	/^typedef CURLcode (_curl_ssl_ctx_callback5)(CURL *, SSL_CTX, void *);$/;"	t	typeref:typename:CURLcode ()(CURL *,SSL_CTX,void *)
_curl_ssl_ctx_callback5	.\\include\\curl\\typecheck-gcc.h	/^typedef _curl_ssl_ctx_callback1 _curl_ssl_ctx_callback5;$/;"	t	typeref:typename:_curl_ssl_ctx_callback1
_curl_ssl_ctx_callback6	.\\include\\curl\\typecheck-gcc.h	/^typedef CURLcode (_curl_ssl_ctx_callback6)(CURL *, SSL_CTX, const void *);$/;"	t	typeref:typename:CURLcode ()(CURL *,SSL_CTX,const void *)
_curl_ssl_ctx_callback6	.\\include\\curl\\typecheck-gcc.h	/^typedef _curl_ssl_ctx_callback1 _curl_ssl_ctx_callback6;$/;"	t	typeref:typename:_curl_ssl_ctx_callback1
_curl_ssl_ctx_callback7	.\\include\\curl\\typecheck-gcc.h	/^typedef CURLcode (_curl_ssl_ctx_callback7)(CURL *, const SSL_CTX, void *);$/;"	t	typeref:typename:CURLcode ()(CURL *,const SSL_CTX,void *)
_curl_ssl_ctx_callback7	.\\include\\curl\\typecheck-gcc.h	/^typedef _curl_ssl_ctx_callback1 _curl_ssl_ctx_callback7;$/;"	t	typeref:typename:_curl_ssl_ctx_callback1
_curl_ssl_ctx_callback8	.\\include\\curl\\typecheck-gcc.h	/^typedef CURLcode (_curl_ssl_ctx_callback8)(CURL *, const SSL_CTX,$/;"	t	typeref:typename:CURLcode ()(CURL *,const SSL_CTX,const void *)
_curl_ssl_ctx_callback8	.\\include\\curl\\typecheck-gcc.h	/^typedef _curl_ssl_ctx_callback1 _curl_ssl_ctx_callback8;$/;"	t	typeref:typename:_curl_ssl_ctx_callback1
_curl_write_callback1	.\\include\\curl\\typecheck-gcc.h	/^typedef size_t (_curl_write_callback1)(const char *, size_t, size_t, void*);$/;"	t	typeref:typename:size_t ()(const char *,size_t,size_t,void *)
_curl_write_callback2	.\\include\\curl\\typecheck-gcc.h	/^typedef size_t (_curl_write_callback2)(const char *, size_t, size_t,$/;"	t	typeref:typename:size_t ()(const char *,size_t,size_t,const void *)
_curl_write_callback3	.\\include\\curl\\typecheck-gcc.h	/^typedef size_t (_curl_write_callback3)(const char *, size_t, size_t, FILE*);$/;"	t	typeref:typename:size_t ()(const char *,size_t,size_t,FILE *)
_curl_write_callback4	.\\include\\curl\\typecheck-gcc.h	/^typedef size_t (_curl_write_callback4)(const void *, size_t, size_t, void*);$/;"	t	typeref:typename:size_t ()(const void *,size_t,size_t,void *)
_curl_write_callback5	.\\include\\curl\\typecheck-gcc.h	/^typedef size_t (_curl_write_callback5)(const void *, size_t, size_t,$/;"	t	typeref:typename:size_t ()(const void *,size_t,size_t,const void *)
_curl_write_callback6	.\\include\\curl\\typecheck-gcc.h	/^typedef size_t (_curl_write_callback6)(const void *, size_t, size_t, FILE*);$/;"	t	typeref:typename:size_t ()(const void *,size_t,size_t,FILE *)
_glfw3_h_	.\\include\\GLFW\\glfw3.h	/^#define _glfw3_h_$/;"	d
_glfw3_native_h_	.\\include\\GLFW\\glfw3native.h	/^#define _glfw3_native_h_$/;"	d
_ptrc_glActiveTexture	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLACTIVETEXTUREPROC _ptrc_glActiveTexture = Switch_ActiveTexture;$/;"	v	typeref:typename:PFN_PTRC_GLACTIVETEXTUREPROC
_ptrc_glAttachShader	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLATTACHSHADERPROC _ptrc_glAttachShader = Switch_AttachShader;$/;"	v	typeref:typename:PFN_PTRC_GLATTACHSHADERPROC
_ptrc_glBeginConditionalRender	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLBEGINCONDITIONALRENDERPROC _ptrc_glBeginConditionalRender = Switch_BeginConditionalRe/;"	v	typeref:typename:PFN_PTRC_GLBEGINCONDITIONALRENDERPROC
_ptrc_glBeginQuery	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLBEGINQUERYPROC _ptrc_glBeginQuery = Switch_BeginQuery;$/;"	v	typeref:typename:PFN_PTRC_GLBEGINQUERYPROC
_ptrc_glBeginTransformFeedback	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLBEGINTRANSFORMFEEDBACKPROC _ptrc_glBeginTransformFeedback = Switch_BeginTransformFeed/;"	v	typeref:typename:PFN_PTRC_GLBEGINTRANSFORMFEEDBACKPROC
_ptrc_glBindAttribLocation	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLBINDATTRIBLOCATIONPROC _ptrc_glBindAttribLocation = Switch_BindAttribLocation;$/;"	v	typeref:typename:PFN_PTRC_GLBINDATTRIBLOCATIONPROC
_ptrc_glBindBuffer	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLBINDBUFFERPROC _ptrc_glBindBuffer = Switch_BindBuffer;$/;"	v	typeref:typename:PFN_PTRC_GLBINDBUFFERPROC
_ptrc_glBindBufferBase	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLBINDBUFFERBASEPROC _ptrc_glBindBufferBase = Switch_BindBufferBase;$/;"	v	typeref:typename:PFN_PTRC_GLBINDBUFFERBASEPROC
_ptrc_glBindBufferRange	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLBINDBUFFERRANGEPROC _ptrc_glBindBufferRange = Switch_BindBufferRange;$/;"	v	typeref:typename:PFN_PTRC_GLBINDBUFFERRANGEPROC
_ptrc_glBindFragDataLocation	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLBINDFRAGDATALOCATIONPROC _ptrc_glBindFragDataLocation = Switch_BindFragDataLocation;$/;"	v	typeref:typename:PFN_PTRC_GLBINDFRAGDATALOCATIONPROC
_ptrc_glBindFragDataLocationIndexed	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLBINDFRAGDATALOCATIONINDEXEDPROC _ptrc_glBindFragDataLocationIndexed = Switch_BindFrag/;"	v	typeref:typename:PFN_PTRC_GLBINDFRAGDATALOCATIONINDEXEDPROC
_ptrc_glBindFramebuffer	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLBINDFRAMEBUFFERPROC _ptrc_glBindFramebuffer = Switch_BindFramebuffer;$/;"	v	typeref:typename:PFN_PTRC_GLBINDFRAMEBUFFERPROC
_ptrc_glBindRenderbuffer	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLBINDRENDERBUFFERPROC _ptrc_glBindRenderbuffer = Switch_BindRenderbuffer;$/;"	v	typeref:typename:PFN_PTRC_GLBINDRENDERBUFFERPROC
_ptrc_glBindSampler	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLBINDSAMPLERPROC _ptrc_glBindSampler = Switch_BindSampler;$/;"	v	typeref:typename:PFN_PTRC_GLBINDSAMPLERPROC
_ptrc_glBindTexture	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLBINDTEXTUREPROC _ptrc_glBindTexture = Switch_BindTexture;$/;"	v	typeref:typename:PFN_PTRC_GLBINDTEXTUREPROC
_ptrc_glBindVertexArray	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLBINDVERTEXARRAYPROC _ptrc_glBindVertexArray = Switch_BindVertexArray;$/;"	v	typeref:typename:PFN_PTRC_GLBINDVERTEXARRAYPROC
_ptrc_glBlendColor	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLBLENDCOLORPROC _ptrc_glBlendColor = Switch_BlendColor;$/;"	v	typeref:typename:PFN_PTRC_GLBLENDCOLORPROC
_ptrc_glBlendEquation	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLBLENDEQUATIONPROC _ptrc_glBlendEquation = Switch_BlendEquation;$/;"	v	typeref:typename:PFN_PTRC_GLBLENDEQUATIONPROC
_ptrc_glBlendEquationSeparate	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLBLENDEQUATIONSEPARATEPROC _ptrc_glBlendEquationSeparate = Switch_BlendEquationSeparat/;"	v	typeref:typename:PFN_PTRC_GLBLENDEQUATIONSEPARATEPROC
_ptrc_glBlendFunc	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLBLENDFUNCPROC _ptrc_glBlendFunc = Switch_BlendFunc;$/;"	v	typeref:typename:PFN_PTRC_GLBLENDFUNCPROC
_ptrc_glBlendFuncSeparate	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLBLENDFUNCSEPARATEPROC _ptrc_glBlendFuncSeparate = Switch_BlendFuncSeparate;$/;"	v	typeref:typename:PFN_PTRC_GLBLENDFUNCSEPARATEPROC
_ptrc_glBlitFramebuffer	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLBLITFRAMEBUFFERPROC _ptrc_glBlitFramebuffer = Switch_BlitFramebuffer;$/;"	v	typeref:typename:PFN_PTRC_GLBLITFRAMEBUFFERPROC
_ptrc_glBufferData	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLBUFFERDATAPROC _ptrc_glBufferData = Switch_BufferData;$/;"	v	typeref:typename:PFN_PTRC_GLBUFFERDATAPROC
_ptrc_glBufferSubData	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLBUFFERSUBDATAPROC _ptrc_glBufferSubData = Switch_BufferSubData;$/;"	v	typeref:typename:PFN_PTRC_GLBUFFERSUBDATAPROC
_ptrc_glCheckFramebufferStatus	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLCHECKFRAMEBUFFERSTATUSPROC _ptrc_glCheckFramebufferStatus = Switch_CheckFramebufferSt/;"	v	typeref:typename:PFN_PTRC_GLCHECKFRAMEBUFFERSTATUSPROC
_ptrc_glClampColor	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLCLAMPCOLORPROC _ptrc_glClampColor = Switch_ClampColor;$/;"	v	typeref:typename:PFN_PTRC_GLCLAMPCOLORPROC
_ptrc_glClear	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLCLEARPROC _ptrc_glClear = Switch_Clear;$/;"	v	typeref:typename:PFN_PTRC_GLCLEARPROC
_ptrc_glClearBufferfi	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLCLEARBUFFERFIPROC _ptrc_glClearBufferfi = Switch_ClearBufferfi;$/;"	v	typeref:typename:PFN_PTRC_GLCLEARBUFFERFIPROC
_ptrc_glClearBufferfv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLCLEARBUFFERFVPROC _ptrc_glClearBufferfv = Switch_ClearBufferfv;$/;"	v	typeref:typename:PFN_PTRC_GLCLEARBUFFERFVPROC
_ptrc_glClearBufferiv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLCLEARBUFFERIVPROC _ptrc_glClearBufferiv = Switch_ClearBufferiv;$/;"	v	typeref:typename:PFN_PTRC_GLCLEARBUFFERIVPROC
_ptrc_glClearBufferuiv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLCLEARBUFFERUIVPROC _ptrc_glClearBufferuiv = Switch_ClearBufferuiv;$/;"	v	typeref:typename:PFN_PTRC_GLCLEARBUFFERUIVPROC
_ptrc_glClearColor	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLCLEARCOLORPROC _ptrc_glClearColor = Switch_ClearColor;$/;"	v	typeref:typename:PFN_PTRC_GLCLEARCOLORPROC
_ptrc_glClearDepth	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLCLEARDEPTHPROC _ptrc_glClearDepth = Switch_ClearDepth;$/;"	v	typeref:typename:PFN_PTRC_GLCLEARDEPTHPROC
_ptrc_glClearStencil	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLCLEARSTENCILPROC _ptrc_glClearStencil = Switch_ClearStencil;$/;"	v	typeref:typename:PFN_PTRC_GLCLEARSTENCILPROC
_ptrc_glClientWaitSync	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLCLIENTWAITSYNCPROC _ptrc_glClientWaitSync = Switch_ClientWaitSync;$/;"	v	typeref:typename:PFN_PTRC_GLCLIENTWAITSYNCPROC
_ptrc_glColorMask	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLCOLORMASKPROC _ptrc_glColorMask = Switch_ColorMask;$/;"	v	typeref:typename:PFN_PTRC_GLCOLORMASKPROC
_ptrc_glColorMaski	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLCOLORMASKIPROC _ptrc_glColorMaski = Switch_ColorMaski;$/;"	v	typeref:typename:PFN_PTRC_GLCOLORMASKIPROC
_ptrc_glCompileShader	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLCOMPILESHADERPROC _ptrc_glCompileShader = Switch_CompileShader;$/;"	v	typeref:typename:PFN_PTRC_GLCOMPILESHADERPROC
_ptrc_glCompressedTexImage1D	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLCOMPRESSEDTEXIMAGE1DPROC _ptrc_glCompressedTexImage1D = Switch_CompressedTexImage1D;$/;"	v	typeref:typename:PFN_PTRC_GLCOMPRESSEDTEXIMAGE1DPROC
_ptrc_glCompressedTexImage2D	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLCOMPRESSEDTEXIMAGE2DPROC _ptrc_glCompressedTexImage2D = Switch_CompressedTexImage2D;$/;"	v	typeref:typename:PFN_PTRC_GLCOMPRESSEDTEXIMAGE2DPROC
_ptrc_glCompressedTexImage3D	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLCOMPRESSEDTEXIMAGE3DPROC _ptrc_glCompressedTexImage3D = Switch_CompressedTexImage3D;$/;"	v	typeref:typename:PFN_PTRC_GLCOMPRESSEDTEXIMAGE3DPROC
_ptrc_glCompressedTexSubImage1D	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLCOMPRESSEDTEXSUBIMAGE1DPROC _ptrc_glCompressedTexSubImage1D = Switch_CompressedTexSub/;"	v	typeref:typename:PFN_PTRC_GLCOMPRESSEDTEXSUBIMAGE1DPROC
_ptrc_glCompressedTexSubImage2D	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLCOMPRESSEDTEXSUBIMAGE2DPROC _ptrc_glCompressedTexSubImage2D = Switch_CompressedTexSub/;"	v	typeref:typename:PFN_PTRC_GLCOMPRESSEDTEXSUBIMAGE2DPROC
_ptrc_glCompressedTexSubImage3D	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLCOMPRESSEDTEXSUBIMAGE3DPROC _ptrc_glCompressedTexSubImage3D = Switch_CompressedTexSub/;"	v	typeref:typename:PFN_PTRC_GLCOMPRESSEDTEXSUBIMAGE3DPROC
_ptrc_glCopyBufferSubData	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLCOPYBUFFERSUBDATAPROC _ptrc_glCopyBufferSubData = Switch_CopyBufferSubData;$/;"	v	typeref:typename:PFN_PTRC_GLCOPYBUFFERSUBDATAPROC
_ptrc_glCopyTexImage1D	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLCOPYTEXIMAGE1DPROC _ptrc_glCopyTexImage1D = Switch_CopyTexImage1D;$/;"	v	typeref:typename:PFN_PTRC_GLCOPYTEXIMAGE1DPROC
_ptrc_glCopyTexImage2D	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLCOPYTEXIMAGE2DPROC _ptrc_glCopyTexImage2D = Switch_CopyTexImage2D;$/;"	v	typeref:typename:PFN_PTRC_GLCOPYTEXIMAGE2DPROC
_ptrc_glCopyTexSubImage1D	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLCOPYTEXSUBIMAGE1DPROC _ptrc_glCopyTexSubImage1D = Switch_CopyTexSubImage1D;$/;"	v	typeref:typename:PFN_PTRC_GLCOPYTEXSUBIMAGE1DPROC
_ptrc_glCopyTexSubImage2D	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLCOPYTEXSUBIMAGE2DPROC _ptrc_glCopyTexSubImage2D = Switch_CopyTexSubImage2D;$/;"	v	typeref:typename:PFN_PTRC_GLCOPYTEXSUBIMAGE2DPROC
_ptrc_glCopyTexSubImage3D	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLCOPYTEXSUBIMAGE3DPROC _ptrc_glCopyTexSubImage3D = Switch_CopyTexSubImage3D;$/;"	v	typeref:typename:PFN_PTRC_GLCOPYTEXSUBIMAGE3DPROC
_ptrc_glCreateProgram	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLCREATEPROGRAMPROC _ptrc_glCreateProgram = Switch_CreateProgram;$/;"	v	typeref:typename:PFN_PTRC_GLCREATEPROGRAMPROC
_ptrc_glCreateShader	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLCREATESHADERPROC _ptrc_glCreateShader = Switch_CreateShader;$/;"	v	typeref:typename:PFN_PTRC_GLCREATESHADERPROC
_ptrc_glCullFace	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLCULLFACEPROC _ptrc_glCullFace = Switch_CullFace;$/;"	v	typeref:typename:PFN_PTRC_GLCULLFACEPROC
_ptrc_glDeleteBuffers	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLDELETEBUFFERSPROC _ptrc_glDeleteBuffers = Switch_DeleteBuffers;$/;"	v	typeref:typename:PFN_PTRC_GLDELETEBUFFERSPROC
_ptrc_glDeleteFramebuffers	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLDELETEFRAMEBUFFERSPROC _ptrc_glDeleteFramebuffers = Switch_DeleteFramebuffers;$/;"	v	typeref:typename:PFN_PTRC_GLDELETEFRAMEBUFFERSPROC
_ptrc_glDeleteProgram	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLDELETEPROGRAMPROC _ptrc_glDeleteProgram = Switch_DeleteProgram;$/;"	v	typeref:typename:PFN_PTRC_GLDELETEPROGRAMPROC
_ptrc_glDeleteQueries	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLDELETEQUERIESPROC _ptrc_glDeleteQueries = Switch_DeleteQueries;$/;"	v	typeref:typename:PFN_PTRC_GLDELETEQUERIESPROC
_ptrc_glDeleteRenderbuffers	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLDELETERENDERBUFFERSPROC _ptrc_glDeleteRenderbuffers = Switch_DeleteRenderbuffers;$/;"	v	typeref:typename:PFN_PTRC_GLDELETERENDERBUFFERSPROC
_ptrc_glDeleteSamplers	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLDELETESAMPLERSPROC _ptrc_glDeleteSamplers = Switch_DeleteSamplers;$/;"	v	typeref:typename:PFN_PTRC_GLDELETESAMPLERSPROC
_ptrc_glDeleteShader	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLDELETESHADERPROC _ptrc_glDeleteShader = Switch_DeleteShader;$/;"	v	typeref:typename:PFN_PTRC_GLDELETESHADERPROC
_ptrc_glDeleteSync	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLDELETESYNCPROC _ptrc_glDeleteSync = Switch_DeleteSync;$/;"	v	typeref:typename:PFN_PTRC_GLDELETESYNCPROC
_ptrc_glDeleteTextures	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLDELETETEXTURESPROC _ptrc_glDeleteTextures = Switch_DeleteTextures;$/;"	v	typeref:typename:PFN_PTRC_GLDELETETEXTURESPROC
_ptrc_glDeleteVertexArrays	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLDELETEVERTEXARRAYSPROC _ptrc_glDeleteVertexArrays = Switch_DeleteVertexArrays;$/;"	v	typeref:typename:PFN_PTRC_GLDELETEVERTEXARRAYSPROC
_ptrc_glDepthFunc	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLDEPTHFUNCPROC _ptrc_glDepthFunc = Switch_DepthFunc;$/;"	v	typeref:typename:PFN_PTRC_GLDEPTHFUNCPROC
_ptrc_glDepthMask	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLDEPTHMASKPROC _ptrc_glDepthMask = Switch_DepthMask;$/;"	v	typeref:typename:PFN_PTRC_GLDEPTHMASKPROC
_ptrc_glDepthRange	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLDEPTHRANGEPROC _ptrc_glDepthRange = Switch_DepthRange;$/;"	v	typeref:typename:PFN_PTRC_GLDEPTHRANGEPROC
_ptrc_glDetachShader	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLDETACHSHADERPROC _ptrc_glDetachShader = Switch_DetachShader;$/;"	v	typeref:typename:PFN_PTRC_GLDETACHSHADERPROC
_ptrc_glDisable	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLDISABLEPROC _ptrc_glDisable = Switch_Disable;$/;"	v	typeref:typename:PFN_PTRC_GLDISABLEPROC
_ptrc_glDisableVertexAttribArray	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLDISABLEVERTEXATTRIBARRAYPROC _ptrc_glDisableVertexAttribArray = Switch_DisableVertexA/;"	v	typeref:typename:PFN_PTRC_GLDISABLEVERTEXATTRIBARRAYPROC
_ptrc_glDisablei	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLDISABLEIPROC _ptrc_glDisablei = Switch_Disablei;$/;"	v	typeref:typename:PFN_PTRC_GLDISABLEIPROC
_ptrc_glDrawArrays	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLDRAWARRAYSPROC _ptrc_glDrawArrays = Switch_DrawArrays;$/;"	v	typeref:typename:PFN_PTRC_GLDRAWARRAYSPROC
_ptrc_glDrawArraysInstanced	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLDRAWARRAYSINSTANCEDPROC _ptrc_glDrawArraysInstanced = Switch_DrawArraysInstanced;$/;"	v	typeref:typename:PFN_PTRC_GLDRAWARRAYSINSTANCEDPROC
_ptrc_glDrawBuffer	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLDRAWBUFFERPROC _ptrc_glDrawBuffer = Switch_DrawBuffer;$/;"	v	typeref:typename:PFN_PTRC_GLDRAWBUFFERPROC
_ptrc_glDrawBuffers	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLDRAWBUFFERSPROC _ptrc_glDrawBuffers = Switch_DrawBuffers;$/;"	v	typeref:typename:PFN_PTRC_GLDRAWBUFFERSPROC
_ptrc_glDrawElements	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLDRAWELEMENTSPROC _ptrc_glDrawElements = Switch_DrawElements;$/;"	v	typeref:typename:PFN_PTRC_GLDRAWELEMENTSPROC
_ptrc_glDrawElementsBaseVertex	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLDRAWELEMENTSBASEVERTEXPROC _ptrc_glDrawElementsBaseVertex = Switch_DrawElementsBaseVe/;"	v	typeref:typename:PFN_PTRC_GLDRAWELEMENTSBASEVERTEXPROC
_ptrc_glDrawElementsInstanced	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLDRAWELEMENTSINSTANCEDPROC _ptrc_glDrawElementsInstanced = Switch_DrawElementsInstance/;"	v	typeref:typename:PFN_PTRC_GLDRAWELEMENTSINSTANCEDPROC
_ptrc_glDrawElementsInstancedBaseVertex	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLDRAWELEMENTSINSTANCEDBASEVERTEXPROC _ptrc_glDrawElementsInstancedBaseVertex = Switch_/;"	v	typeref:typename:PFN_PTRC_GLDRAWELEMENTSINSTANCEDBASEVERTEXPROC
_ptrc_glDrawRangeElements	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLDRAWRANGEELEMENTSPROC _ptrc_glDrawRangeElements = Switch_DrawRangeElements;$/;"	v	typeref:typename:PFN_PTRC_GLDRAWRANGEELEMENTSPROC
_ptrc_glDrawRangeElementsBaseVertex	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLDRAWRANGEELEMENTSBASEVERTEXPROC _ptrc_glDrawRangeElementsBaseVertex = Switch_DrawRang/;"	v	typeref:typename:PFN_PTRC_GLDRAWRANGEELEMENTSBASEVERTEXPROC
_ptrc_glEnable	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLENABLEPROC _ptrc_glEnable = Switch_Enable;$/;"	v	typeref:typename:PFN_PTRC_GLENABLEPROC
_ptrc_glEnableVertexAttribArray	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLENABLEVERTEXATTRIBARRAYPROC _ptrc_glEnableVertexAttribArray = Switch_EnableVertexAttr/;"	v	typeref:typename:PFN_PTRC_GLENABLEVERTEXATTRIBARRAYPROC
_ptrc_glEnablei	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLENABLEIPROC _ptrc_glEnablei = Switch_Enablei;$/;"	v	typeref:typename:PFN_PTRC_GLENABLEIPROC
_ptrc_glEndConditionalRender	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLENDCONDITIONALRENDERPROC _ptrc_glEndConditionalRender = Switch_EndConditionalRender;$/;"	v	typeref:typename:PFN_PTRC_GLENDCONDITIONALRENDERPROC
_ptrc_glEndQuery	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLENDQUERYPROC _ptrc_glEndQuery = Switch_EndQuery;$/;"	v	typeref:typename:PFN_PTRC_GLENDQUERYPROC
_ptrc_glEndTransformFeedback	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLENDTRANSFORMFEEDBACKPROC _ptrc_glEndTransformFeedback = Switch_EndTransformFeedback;$/;"	v	typeref:typename:PFN_PTRC_GLENDTRANSFORMFEEDBACKPROC
_ptrc_glFenceSync	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLFENCESYNCPROC _ptrc_glFenceSync = Switch_FenceSync;$/;"	v	typeref:typename:PFN_PTRC_GLFENCESYNCPROC
_ptrc_glFinish	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLFINISHPROC _ptrc_glFinish = Switch_Finish;$/;"	v	typeref:typename:PFN_PTRC_GLFINISHPROC
_ptrc_glFlush	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLFLUSHPROC _ptrc_glFlush = Switch_Flush;$/;"	v	typeref:typename:PFN_PTRC_GLFLUSHPROC
_ptrc_glFlushMappedBufferRange	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLFLUSHMAPPEDBUFFERRANGEPROC _ptrc_glFlushMappedBufferRange = Switch_FlushMappedBufferR/;"	v	typeref:typename:PFN_PTRC_GLFLUSHMAPPEDBUFFERRANGEPROC
_ptrc_glFramebufferRenderbuffer	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLFRAMEBUFFERRENDERBUFFERPROC _ptrc_glFramebufferRenderbuffer = Switch_FramebufferRende/;"	v	typeref:typename:PFN_PTRC_GLFRAMEBUFFERRENDERBUFFERPROC
_ptrc_glFramebufferTexture	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLFRAMEBUFFERTEXTUREPROC _ptrc_glFramebufferTexture = Switch_FramebufferTexture;$/;"	v	typeref:typename:PFN_PTRC_GLFRAMEBUFFERTEXTUREPROC
_ptrc_glFramebufferTexture1D	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLFRAMEBUFFERTEXTURE1DPROC _ptrc_glFramebufferTexture1D = Switch_FramebufferTexture1D;$/;"	v	typeref:typename:PFN_PTRC_GLFRAMEBUFFERTEXTURE1DPROC
_ptrc_glFramebufferTexture2D	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLFRAMEBUFFERTEXTURE2DPROC _ptrc_glFramebufferTexture2D = Switch_FramebufferTexture2D;$/;"	v	typeref:typename:PFN_PTRC_GLFRAMEBUFFERTEXTURE2DPROC
_ptrc_glFramebufferTexture3D	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLFRAMEBUFFERTEXTURE3DPROC _ptrc_glFramebufferTexture3D = Switch_FramebufferTexture3D;$/;"	v	typeref:typename:PFN_PTRC_GLFRAMEBUFFERTEXTURE3DPROC
_ptrc_glFramebufferTextureLayer	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLFRAMEBUFFERTEXTURELAYERPROC _ptrc_glFramebufferTextureLayer = Switch_FramebufferTextu/;"	v	typeref:typename:PFN_PTRC_GLFRAMEBUFFERTEXTURELAYERPROC
_ptrc_glFrontFace	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLFRONTFACEPROC _ptrc_glFrontFace = Switch_FrontFace;$/;"	v	typeref:typename:PFN_PTRC_GLFRONTFACEPROC
_ptrc_glGenBuffers	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGENBUFFERSPROC _ptrc_glGenBuffers = Switch_GenBuffers;$/;"	v	typeref:typename:PFN_PTRC_GLGENBUFFERSPROC
_ptrc_glGenFramebuffers	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGENFRAMEBUFFERSPROC _ptrc_glGenFramebuffers = Switch_GenFramebuffers;$/;"	v	typeref:typename:PFN_PTRC_GLGENFRAMEBUFFERSPROC
_ptrc_glGenQueries	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGENQUERIESPROC _ptrc_glGenQueries = Switch_GenQueries;$/;"	v	typeref:typename:PFN_PTRC_GLGENQUERIESPROC
_ptrc_glGenRenderbuffers	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGENRENDERBUFFERSPROC _ptrc_glGenRenderbuffers = Switch_GenRenderbuffers;$/;"	v	typeref:typename:PFN_PTRC_GLGENRENDERBUFFERSPROC
_ptrc_glGenSamplers	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGENSAMPLERSPROC _ptrc_glGenSamplers = Switch_GenSamplers;$/;"	v	typeref:typename:PFN_PTRC_GLGENSAMPLERSPROC
_ptrc_glGenTextures	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGENTEXTURESPROC _ptrc_glGenTextures = Switch_GenTextures;$/;"	v	typeref:typename:PFN_PTRC_GLGENTEXTURESPROC
_ptrc_glGenVertexArrays	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGENVERTEXARRAYSPROC _ptrc_glGenVertexArrays = Switch_GenVertexArrays;$/;"	v	typeref:typename:PFN_PTRC_GLGENVERTEXARRAYSPROC
_ptrc_glGenerateMipmap	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGENERATEMIPMAPPROC _ptrc_glGenerateMipmap = Switch_GenerateMipmap;$/;"	v	typeref:typename:PFN_PTRC_GLGENERATEMIPMAPPROC
_ptrc_glGetActiveAttrib	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETACTIVEATTRIBPROC _ptrc_glGetActiveAttrib = Switch_GetActiveAttrib;$/;"	v	typeref:typename:PFN_PTRC_GLGETACTIVEATTRIBPROC
_ptrc_glGetActiveUniform	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETACTIVEUNIFORMPROC _ptrc_glGetActiveUniform = Switch_GetActiveUniform;$/;"	v	typeref:typename:PFN_PTRC_GLGETACTIVEUNIFORMPROC
_ptrc_glGetActiveUniformBlockName	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETACTIVEUNIFORMBLOCKNAMEPROC _ptrc_glGetActiveUniformBlockName = Switch_GetActiveUni/;"	v	typeref:typename:PFN_PTRC_GLGETACTIVEUNIFORMBLOCKNAMEPROC
_ptrc_glGetActiveUniformBlockiv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETACTIVEUNIFORMBLOCKIVPROC _ptrc_glGetActiveUniformBlockiv = Switch_GetActiveUniform/;"	v	typeref:typename:PFN_PTRC_GLGETACTIVEUNIFORMBLOCKIVPROC
_ptrc_glGetActiveUniformName	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETACTIVEUNIFORMNAMEPROC _ptrc_glGetActiveUniformName = Switch_GetActiveUniformName;$/;"	v	typeref:typename:PFN_PTRC_GLGETACTIVEUNIFORMNAMEPROC
_ptrc_glGetActiveUniformsiv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETACTIVEUNIFORMSIVPROC _ptrc_glGetActiveUniformsiv = Switch_GetActiveUniformsiv;$/;"	v	typeref:typename:PFN_PTRC_GLGETACTIVEUNIFORMSIVPROC
_ptrc_glGetAttachedShaders	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETATTACHEDSHADERSPROC _ptrc_glGetAttachedShaders = Switch_GetAttachedShaders;$/;"	v	typeref:typename:PFN_PTRC_GLGETATTACHEDSHADERSPROC
_ptrc_glGetAttribLocation	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETATTRIBLOCATIONPROC _ptrc_glGetAttribLocation = Switch_GetAttribLocation;$/;"	v	typeref:typename:PFN_PTRC_GLGETATTRIBLOCATIONPROC
_ptrc_glGetBooleani_v	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETBOOLEANI_VPROC _ptrc_glGetBooleani_v = Switch_GetBooleani_v;$/;"	v	typeref:typename:PFN_PTRC_GLGETBOOLEANI_VPROC
_ptrc_glGetBooleanv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETBOOLEANVPROC _ptrc_glGetBooleanv = Switch_GetBooleanv;$/;"	v	typeref:typename:PFN_PTRC_GLGETBOOLEANVPROC
_ptrc_glGetBufferParameteri64v	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETBUFFERPARAMETERI64VPROC _ptrc_glGetBufferParameteri64v = Switch_GetBufferParameter/;"	v	typeref:typename:PFN_PTRC_GLGETBUFFERPARAMETERI64VPROC
_ptrc_glGetBufferParameteriv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETBUFFERPARAMETERIVPROC _ptrc_glGetBufferParameteriv = Switch_GetBufferParameteriv;$/;"	v	typeref:typename:PFN_PTRC_GLGETBUFFERPARAMETERIVPROC
_ptrc_glGetBufferPointerv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETBUFFERPOINTERVPROC _ptrc_glGetBufferPointerv = Switch_GetBufferPointerv;$/;"	v	typeref:typename:PFN_PTRC_GLGETBUFFERPOINTERVPROC
_ptrc_glGetBufferSubData	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETBUFFERSUBDATAPROC _ptrc_glGetBufferSubData = Switch_GetBufferSubData;$/;"	v	typeref:typename:PFN_PTRC_GLGETBUFFERSUBDATAPROC
_ptrc_glGetCompressedTexImage	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETCOMPRESSEDTEXIMAGEPROC _ptrc_glGetCompressedTexImage = Switch_GetCompressedTexImag/;"	v	typeref:typename:PFN_PTRC_GLGETCOMPRESSEDTEXIMAGEPROC
_ptrc_glGetDoublev	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETDOUBLEVPROC _ptrc_glGetDoublev = Switch_GetDoublev;$/;"	v	typeref:typename:PFN_PTRC_GLGETDOUBLEVPROC
_ptrc_glGetError	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETERRORPROC _ptrc_glGetError = Switch_GetError;$/;"	v	typeref:typename:PFN_PTRC_GLGETERRORPROC
_ptrc_glGetFloatv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETFLOATVPROC _ptrc_glGetFloatv = Switch_GetFloatv;$/;"	v	typeref:typename:PFN_PTRC_GLGETFLOATVPROC
_ptrc_glGetFragDataIndex	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETFRAGDATAINDEXPROC _ptrc_glGetFragDataIndex = Switch_GetFragDataIndex;$/;"	v	typeref:typename:PFN_PTRC_GLGETFRAGDATAINDEXPROC
_ptrc_glGetFragDataLocation	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETFRAGDATALOCATIONPROC _ptrc_glGetFragDataLocation = Switch_GetFragDataLocation;$/;"	v	typeref:typename:PFN_PTRC_GLGETFRAGDATALOCATIONPROC
_ptrc_glGetFramebufferAttachmentParameteriv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC _ptrc_glGetFramebufferAttachmentParameteriv =/;"	v	typeref:typename:PFN_PTRC_GLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC
_ptrc_glGetInteger64i_v	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETINTEGER64I_VPROC _ptrc_glGetInteger64i_v = Switch_GetInteger64i_v;$/;"	v	typeref:typename:PFN_PTRC_GLGETINTEGER64I_VPROC
_ptrc_glGetInteger64v	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETINTEGER64VPROC _ptrc_glGetInteger64v = Switch_GetInteger64v;$/;"	v	typeref:typename:PFN_PTRC_GLGETINTEGER64VPROC
_ptrc_glGetIntegeri_v	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETINTEGERI_VPROC _ptrc_glGetIntegeri_v = Switch_GetIntegeri_v;$/;"	v	typeref:typename:PFN_PTRC_GLGETINTEGERI_VPROC
_ptrc_glGetIntegerv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETINTEGERVPROC _ptrc_glGetIntegerv = Switch_GetIntegerv;$/;"	v	typeref:typename:PFN_PTRC_GLGETINTEGERVPROC
_ptrc_glGetMultisamplefv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETMULTISAMPLEFVPROC _ptrc_glGetMultisamplefv = Switch_GetMultisamplefv;$/;"	v	typeref:typename:PFN_PTRC_GLGETMULTISAMPLEFVPROC
_ptrc_glGetProgramInfoLog	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETPROGRAMINFOLOGPROC _ptrc_glGetProgramInfoLog = Switch_GetProgramInfoLog;$/;"	v	typeref:typename:PFN_PTRC_GLGETPROGRAMINFOLOGPROC
_ptrc_glGetProgramiv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETPROGRAMIVPROC _ptrc_glGetProgramiv = Switch_GetProgramiv;$/;"	v	typeref:typename:PFN_PTRC_GLGETPROGRAMIVPROC
_ptrc_glGetQueryObjecti64v	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETQUERYOBJECTI64VPROC _ptrc_glGetQueryObjecti64v = Switch_GetQueryObjecti64v;$/;"	v	typeref:typename:PFN_PTRC_GLGETQUERYOBJECTI64VPROC
_ptrc_glGetQueryObjectiv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETQUERYOBJECTIVPROC _ptrc_glGetQueryObjectiv = Switch_GetQueryObjectiv;$/;"	v	typeref:typename:PFN_PTRC_GLGETQUERYOBJECTIVPROC
_ptrc_glGetQueryObjectui64v	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETQUERYOBJECTUI64VPROC _ptrc_glGetQueryObjectui64v = Switch_GetQueryObjectui64v;$/;"	v	typeref:typename:PFN_PTRC_GLGETQUERYOBJECTUI64VPROC
_ptrc_glGetQueryObjectuiv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETQUERYOBJECTUIVPROC _ptrc_glGetQueryObjectuiv = Switch_GetQueryObjectuiv;$/;"	v	typeref:typename:PFN_PTRC_GLGETQUERYOBJECTUIVPROC
_ptrc_glGetQueryiv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETQUERYIVPROC _ptrc_glGetQueryiv = Switch_GetQueryiv;$/;"	v	typeref:typename:PFN_PTRC_GLGETQUERYIVPROC
_ptrc_glGetRenderbufferParameteriv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETRENDERBUFFERPARAMETERIVPROC _ptrc_glGetRenderbufferParameteriv = Switch_GetRenderb/;"	v	typeref:typename:PFN_PTRC_GLGETRENDERBUFFERPARAMETERIVPROC
_ptrc_glGetSamplerParameterIiv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETSAMPLERPARAMETERIIVPROC _ptrc_glGetSamplerParameterIiv = Switch_GetSamplerParamete/;"	v	typeref:typename:PFN_PTRC_GLGETSAMPLERPARAMETERIIVPROC
_ptrc_glGetSamplerParameterIuiv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETSAMPLERPARAMETERIUIVPROC _ptrc_glGetSamplerParameterIuiv = Switch_GetSamplerParame/;"	v	typeref:typename:PFN_PTRC_GLGETSAMPLERPARAMETERIUIVPROC
_ptrc_glGetSamplerParameterfv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETSAMPLERPARAMETERFVPROC _ptrc_glGetSamplerParameterfv = Switch_GetSamplerParameterf/;"	v	typeref:typename:PFN_PTRC_GLGETSAMPLERPARAMETERFVPROC
_ptrc_glGetSamplerParameteriv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETSAMPLERPARAMETERIVPROC _ptrc_glGetSamplerParameteriv = Switch_GetSamplerParameteri/;"	v	typeref:typename:PFN_PTRC_GLGETSAMPLERPARAMETERIVPROC
_ptrc_glGetShaderInfoLog	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETSHADERINFOLOGPROC _ptrc_glGetShaderInfoLog = Switch_GetShaderInfoLog;$/;"	v	typeref:typename:PFN_PTRC_GLGETSHADERINFOLOGPROC
_ptrc_glGetShaderSource	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETSHADERSOURCEPROC _ptrc_glGetShaderSource = Switch_GetShaderSource;$/;"	v	typeref:typename:PFN_PTRC_GLGETSHADERSOURCEPROC
_ptrc_glGetShaderiv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETSHADERIVPROC _ptrc_glGetShaderiv = Switch_GetShaderiv;$/;"	v	typeref:typename:PFN_PTRC_GLGETSHADERIVPROC
_ptrc_glGetString	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETSTRINGPROC _ptrc_glGetString = Switch_GetString;$/;"	v	typeref:typename:PFN_PTRC_GLGETSTRINGPROC
_ptrc_glGetStringi	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETSTRINGIPROC _ptrc_glGetStringi = Switch_GetStringi;$/;"	v	typeref:typename:PFN_PTRC_GLGETSTRINGIPROC
_ptrc_glGetSynciv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETSYNCIVPROC _ptrc_glGetSynciv = Switch_GetSynciv;$/;"	v	typeref:typename:PFN_PTRC_GLGETSYNCIVPROC
_ptrc_glGetTexImage	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETTEXIMAGEPROC _ptrc_glGetTexImage = Switch_GetTexImage;$/;"	v	typeref:typename:PFN_PTRC_GLGETTEXIMAGEPROC
_ptrc_glGetTexLevelParameterfv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETTEXLEVELPARAMETERFVPROC _ptrc_glGetTexLevelParameterfv = Switch_GetTexLevelParamet/;"	v	typeref:typename:PFN_PTRC_GLGETTEXLEVELPARAMETERFVPROC
_ptrc_glGetTexLevelParameteriv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETTEXLEVELPARAMETERIVPROC _ptrc_glGetTexLevelParameteriv = Switch_GetTexLevelParamet/;"	v	typeref:typename:PFN_PTRC_GLGETTEXLEVELPARAMETERIVPROC
_ptrc_glGetTexParameterIiv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETTEXPARAMETERIIVPROC _ptrc_glGetTexParameterIiv = Switch_GetTexParameterIiv;$/;"	v	typeref:typename:PFN_PTRC_GLGETTEXPARAMETERIIVPROC
_ptrc_glGetTexParameterIuiv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETTEXPARAMETERIUIVPROC _ptrc_glGetTexParameterIuiv = Switch_GetTexParameterIuiv;$/;"	v	typeref:typename:PFN_PTRC_GLGETTEXPARAMETERIUIVPROC
_ptrc_glGetTexParameterfv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETTEXPARAMETERFVPROC _ptrc_glGetTexParameterfv = Switch_GetTexParameterfv;$/;"	v	typeref:typename:PFN_PTRC_GLGETTEXPARAMETERFVPROC
_ptrc_glGetTexParameteriv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETTEXPARAMETERIVPROC _ptrc_glGetTexParameteriv = Switch_GetTexParameteriv;$/;"	v	typeref:typename:PFN_PTRC_GLGETTEXPARAMETERIVPROC
_ptrc_glGetTransformFeedbackVarying	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETTRANSFORMFEEDBACKVARYINGPROC _ptrc_glGetTransformFeedbackVarying = Switch_GetTrans/;"	v	typeref:typename:PFN_PTRC_GLGETTRANSFORMFEEDBACKVARYINGPROC
_ptrc_glGetUniformBlockIndex	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETUNIFORMBLOCKINDEXPROC _ptrc_glGetUniformBlockIndex = Switch_GetUniformBlockIndex;$/;"	v	typeref:typename:PFN_PTRC_GLGETUNIFORMBLOCKINDEXPROC
_ptrc_glGetUniformIndices	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETUNIFORMINDICESPROC _ptrc_glGetUniformIndices = Switch_GetUniformIndices;$/;"	v	typeref:typename:PFN_PTRC_GLGETUNIFORMINDICESPROC
_ptrc_glGetUniformLocation	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETUNIFORMLOCATIONPROC _ptrc_glGetUniformLocation = Switch_GetUniformLocation;$/;"	v	typeref:typename:PFN_PTRC_GLGETUNIFORMLOCATIONPROC
_ptrc_glGetUniformfv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETUNIFORMFVPROC _ptrc_glGetUniformfv = Switch_GetUniformfv;$/;"	v	typeref:typename:PFN_PTRC_GLGETUNIFORMFVPROC
_ptrc_glGetUniformiv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETUNIFORMIVPROC _ptrc_glGetUniformiv = Switch_GetUniformiv;$/;"	v	typeref:typename:PFN_PTRC_GLGETUNIFORMIVPROC
_ptrc_glGetUniformuiv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETUNIFORMUIVPROC _ptrc_glGetUniformuiv = Switch_GetUniformuiv;$/;"	v	typeref:typename:PFN_PTRC_GLGETUNIFORMUIVPROC
_ptrc_glGetVertexAttribIiv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETVERTEXATTRIBIIVPROC _ptrc_glGetVertexAttribIiv = Switch_GetVertexAttribIiv;$/;"	v	typeref:typename:PFN_PTRC_GLGETVERTEXATTRIBIIVPROC
_ptrc_glGetVertexAttribIuiv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETVERTEXATTRIBIUIVPROC _ptrc_glGetVertexAttribIuiv = Switch_GetVertexAttribIuiv;$/;"	v	typeref:typename:PFN_PTRC_GLGETVERTEXATTRIBIUIVPROC
_ptrc_glGetVertexAttribPointerv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETVERTEXATTRIBPOINTERVPROC _ptrc_glGetVertexAttribPointerv = Switch_GetVertexAttribP/;"	v	typeref:typename:PFN_PTRC_GLGETVERTEXATTRIBPOINTERVPROC
_ptrc_glGetVertexAttribdv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETVERTEXATTRIBDVPROC _ptrc_glGetVertexAttribdv = Switch_GetVertexAttribdv;$/;"	v	typeref:typename:PFN_PTRC_GLGETVERTEXATTRIBDVPROC
_ptrc_glGetVertexAttribfv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETVERTEXATTRIBFVPROC _ptrc_glGetVertexAttribfv = Switch_GetVertexAttribfv;$/;"	v	typeref:typename:PFN_PTRC_GLGETVERTEXATTRIBFVPROC
_ptrc_glGetVertexAttribiv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLGETVERTEXATTRIBIVPROC _ptrc_glGetVertexAttribiv = Switch_GetVertexAttribiv;$/;"	v	typeref:typename:PFN_PTRC_GLGETVERTEXATTRIBIVPROC
_ptrc_glHint	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLHINTPROC _ptrc_glHint = Switch_Hint;$/;"	v	typeref:typename:PFN_PTRC_GLHINTPROC
_ptrc_glIsBuffer	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLISBUFFERPROC _ptrc_glIsBuffer = Switch_IsBuffer;$/;"	v	typeref:typename:PFN_PTRC_GLISBUFFERPROC
_ptrc_glIsEnabled	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLISENABLEDPROC _ptrc_glIsEnabled = Switch_IsEnabled;$/;"	v	typeref:typename:PFN_PTRC_GLISENABLEDPROC
_ptrc_glIsEnabledi	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLISENABLEDIPROC _ptrc_glIsEnabledi = Switch_IsEnabledi;$/;"	v	typeref:typename:PFN_PTRC_GLISENABLEDIPROC
_ptrc_glIsFramebuffer	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLISFRAMEBUFFERPROC _ptrc_glIsFramebuffer = Switch_IsFramebuffer;$/;"	v	typeref:typename:PFN_PTRC_GLISFRAMEBUFFERPROC
_ptrc_glIsProgram	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLISPROGRAMPROC _ptrc_glIsProgram = Switch_IsProgram;$/;"	v	typeref:typename:PFN_PTRC_GLISPROGRAMPROC
_ptrc_glIsQuery	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLISQUERYPROC _ptrc_glIsQuery = Switch_IsQuery;$/;"	v	typeref:typename:PFN_PTRC_GLISQUERYPROC
_ptrc_glIsRenderbuffer	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLISRENDERBUFFERPROC _ptrc_glIsRenderbuffer = Switch_IsRenderbuffer;$/;"	v	typeref:typename:PFN_PTRC_GLISRENDERBUFFERPROC
_ptrc_glIsSampler	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLISSAMPLERPROC _ptrc_glIsSampler = Switch_IsSampler;$/;"	v	typeref:typename:PFN_PTRC_GLISSAMPLERPROC
_ptrc_glIsShader	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLISSHADERPROC _ptrc_glIsShader = Switch_IsShader;$/;"	v	typeref:typename:PFN_PTRC_GLISSHADERPROC
_ptrc_glIsSync	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLISSYNCPROC _ptrc_glIsSync = Switch_IsSync;$/;"	v	typeref:typename:PFN_PTRC_GLISSYNCPROC
_ptrc_glIsTexture	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLISTEXTUREPROC _ptrc_glIsTexture = Switch_IsTexture;$/;"	v	typeref:typename:PFN_PTRC_GLISTEXTUREPROC
_ptrc_glIsVertexArray	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLISVERTEXARRAYPROC _ptrc_glIsVertexArray = Switch_IsVertexArray;$/;"	v	typeref:typename:PFN_PTRC_GLISVERTEXARRAYPROC
_ptrc_glLineWidth	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLLINEWIDTHPROC _ptrc_glLineWidth = Switch_LineWidth;$/;"	v	typeref:typename:PFN_PTRC_GLLINEWIDTHPROC
_ptrc_glLinkProgram	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLLINKPROGRAMPROC _ptrc_glLinkProgram = Switch_LinkProgram;$/;"	v	typeref:typename:PFN_PTRC_GLLINKPROGRAMPROC
_ptrc_glLogicOp	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLLOGICOPPROC _ptrc_glLogicOp = Switch_LogicOp;$/;"	v	typeref:typename:PFN_PTRC_GLLOGICOPPROC
_ptrc_glMapBuffer	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLMAPBUFFERPROC _ptrc_glMapBuffer = Switch_MapBuffer;$/;"	v	typeref:typename:PFN_PTRC_GLMAPBUFFERPROC
_ptrc_glMapBufferRange	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLMAPBUFFERRANGEPROC _ptrc_glMapBufferRange = Switch_MapBufferRange;$/;"	v	typeref:typename:PFN_PTRC_GLMAPBUFFERRANGEPROC
_ptrc_glMultiDrawArrays	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLMULTIDRAWARRAYSPROC _ptrc_glMultiDrawArrays = Switch_MultiDrawArrays;$/;"	v	typeref:typename:PFN_PTRC_GLMULTIDRAWARRAYSPROC
_ptrc_glMultiDrawElements	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLMULTIDRAWELEMENTSPROC _ptrc_glMultiDrawElements = Switch_MultiDrawElements;$/;"	v	typeref:typename:PFN_PTRC_GLMULTIDRAWELEMENTSPROC
_ptrc_glMultiDrawElementsBaseVertex	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLMULTIDRAWELEMENTSBASEVERTEXPROC _ptrc_glMultiDrawElementsBaseVertex = Switch_MultiDra/;"	v	typeref:typename:PFN_PTRC_GLMULTIDRAWELEMENTSBASEVERTEXPROC
_ptrc_glPixelStoref	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLPIXELSTOREFPROC _ptrc_glPixelStoref = Switch_PixelStoref;$/;"	v	typeref:typename:PFN_PTRC_GLPIXELSTOREFPROC
_ptrc_glPixelStorei	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLPIXELSTOREIPROC _ptrc_glPixelStorei = Switch_PixelStorei;$/;"	v	typeref:typename:PFN_PTRC_GLPIXELSTOREIPROC
_ptrc_glPointParameterf	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLPOINTPARAMETERFPROC _ptrc_glPointParameterf = Switch_PointParameterf;$/;"	v	typeref:typename:PFN_PTRC_GLPOINTPARAMETERFPROC
_ptrc_glPointParameterfv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLPOINTPARAMETERFVPROC _ptrc_glPointParameterfv = Switch_PointParameterfv;$/;"	v	typeref:typename:PFN_PTRC_GLPOINTPARAMETERFVPROC
_ptrc_glPointParameteri	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLPOINTPARAMETERIPROC _ptrc_glPointParameteri = Switch_PointParameteri;$/;"	v	typeref:typename:PFN_PTRC_GLPOINTPARAMETERIPROC
_ptrc_glPointParameteriv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLPOINTPARAMETERIVPROC _ptrc_glPointParameteriv = Switch_PointParameteriv;$/;"	v	typeref:typename:PFN_PTRC_GLPOINTPARAMETERIVPROC
_ptrc_glPointSize	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLPOINTSIZEPROC _ptrc_glPointSize = Switch_PointSize;$/;"	v	typeref:typename:PFN_PTRC_GLPOINTSIZEPROC
_ptrc_glPolygonMode	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLPOLYGONMODEPROC _ptrc_glPolygonMode = Switch_PolygonMode;$/;"	v	typeref:typename:PFN_PTRC_GLPOLYGONMODEPROC
_ptrc_glPolygonOffset	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLPOLYGONOFFSETPROC _ptrc_glPolygonOffset = Switch_PolygonOffset;$/;"	v	typeref:typename:PFN_PTRC_GLPOLYGONOFFSETPROC
_ptrc_glPrimitiveRestartIndex	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLPRIMITIVERESTARTINDEXPROC _ptrc_glPrimitiveRestartIndex = Switch_PrimitiveRestartInde/;"	v	typeref:typename:PFN_PTRC_GLPRIMITIVERESTARTINDEXPROC
_ptrc_glProvokingVertex	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLPROVOKINGVERTEXPROC _ptrc_glProvokingVertex = Switch_ProvokingVertex;$/;"	v	typeref:typename:PFN_PTRC_GLPROVOKINGVERTEXPROC
_ptrc_glQueryCounter	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLQUERYCOUNTERPROC _ptrc_glQueryCounter = Switch_QueryCounter;$/;"	v	typeref:typename:PFN_PTRC_GLQUERYCOUNTERPROC
_ptrc_glReadBuffer	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLREADBUFFERPROC _ptrc_glReadBuffer = Switch_ReadBuffer;$/;"	v	typeref:typename:PFN_PTRC_GLREADBUFFERPROC
_ptrc_glReadPixels	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLREADPIXELSPROC _ptrc_glReadPixels = Switch_ReadPixels;$/;"	v	typeref:typename:PFN_PTRC_GLREADPIXELSPROC
_ptrc_glRenderbufferStorage	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLRENDERBUFFERSTORAGEPROC _ptrc_glRenderbufferStorage = Switch_RenderbufferStorage;$/;"	v	typeref:typename:PFN_PTRC_GLRENDERBUFFERSTORAGEPROC
_ptrc_glRenderbufferStorageMultisample	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLRENDERBUFFERSTORAGEMULTISAMPLEPROC _ptrc_glRenderbufferStorageMultisample = Switch_Re/;"	v	typeref:typename:PFN_PTRC_GLRENDERBUFFERSTORAGEMULTISAMPLEPROC
_ptrc_glSampleCoverage	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLSAMPLECOVERAGEPROC _ptrc_glSampleCoverage = Switch_SampleCoverage;$/;"	v	typeref:typename:PFN_PTRC_GLSAMPLECOVERAGEPROC
_ptrc_glSampleMaski	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLSAMPLEMASKIPROC _ptrc_glSampleMaski = Switch_SampleMaski;$/;"	v	typeref:typename:PFN_PTRC_GLSAMPLEMASKIPROC
_ptrc_glSamplerParameterIiv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLSAMPLERPARAMETERIIVPROC _ptrc_glSamplerParameterIiv = Switch_SamplerParameterIiv;$/;"	v	typeref:typename:PFN_PTRC_GLSAMPLERPARAMETERIIVPROC
_ptrc_glSamplerParameterIuiv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLSAMPLERPARAMETERIUIVPROC _ptrc_glSamplerParameterIuiv = Switch_SamplerParameterIuiv;$/;"	v	typeref:typename:PFN_PTRC_GLSAMPLERPARAMETERIUIVPROC
_ptrc_glSamplerParameterf	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLSAMPLERPARAMETERFPROC _ptrc_glSamplerParameterf = Switch_SamplerParameterf;$/;"	v	typeref:typename:PFN_PTRC_GLSAMPLERPARAMETERFPROC
_ptrc_glSamplerParameterfv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLSAMPLERPARAMETERFVPROC _ptrc_glSamplerParameterfv = Switch_SamplerParameterfv;$/;"	v	typeref:typename:PFN_PTRC_GLSAMPLERPARAMETERFVPROC
_ptrc_glSamplerParameteri	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLSAMPLERPARAMETERIPROC _ptrc_glSamplerParameteri = Switch_SamplerParameteri;$/;"	v	typeref:typename:PFN_PTRC_GLSAMPLERPARAMETERIPROC
_ptrc_glSamplerParameteriv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLSAMPLERPARAMETERIVPROC _ptrc_glSamplerParameteriv = Switch_SamplerParameteriv;$/;"	v	typeref:typename:PFN_PTRC_GLSAMPLERPARAMETERIVPROC
_ptrc_glScissor	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLSCISSORPROC _ptrc_glScissor = Switch_Scissor;$/;"	v	typeref:typename:PFN_PTRC_GLSCISSORPROC
_ptrc_glShaderSource	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLSHADERSOURCEPROC _ptrc_glShaderSource = Switch_ShaderSource;$/;"	v	typeref:typename:PFN_PTRC_GLSHADERSOURCEPROC
_ptrc_glStencilFunc	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLSTENCILFUNCPROC _ptrc_glStencilFunc = Switch_StencilFunc;$/;"	v	typeref:typename:PFN_PTRC_GLSTENCILFUNCPROC
_ptrc_glStencilFuncSeparate	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLSTENCILFUNCSEPARATEPROC _ptrc_glStencilFuncSeparate = Switch_StencilFuncSeparate;$/;"	v	typeref:typename:PFN_PTRC_GLSTENCILFUNCSEPARATEPROC
_ptrc_glStencilMask	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLSTENCILMASKPROC _ptrc_glStencilMask = Switch_StencilMask;$/;"	v	typeref:typename:PFN_PTRC_GLSTENCILMASKPROC
_ptrc_glStencilMaskSeparate	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLSTENCILMASKSEPARATEPROC _ptrc_glStencilMaskSeparate = Switch_StencilMaskSeparate;$/;"	v	typeref:typename:PFN_PTRC_GLSTENCILMASKSEPARATEPROC
_ptrc_glStencilOp	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLSTENCILOPPROC _ptrc_glStencilOp = Switch_StencilOp;$/;"	v	typeref:typename:PFN_PTRC_GLSTENCILOPPROC
_ptrc_glStencilOpSeparate	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLSTENCILOPSEPARATEPROC _ptrc_glStencilOpSeparate = Switch_StencilOpSeparate;$/;"	v	typeref:typename:PFN_PTRC_GLSTENCILOPSEPARATEPROC
_ptrc_glTexBuffer	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLTEXBUFFERPROC _ptrc_glTexBuffer = Switch_TexBuffer;$/;"	v	typeref:typename:PFN_PTRC_GLTEXBUFFERPROC
_ptrc_glTexImage1D	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLTEXIMAGE1DPROC _ptrc_glTexImage1D = Switch_TexImage1D;$/;"	v	typeref:typename:PFN_PTRC_GLTEXIMAGE1DPROC
_ptrc_glTexImage2D	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLTEXIMAGE2DPROC _ptrc_glTexImage2D = Switch_TexImage2D;$/;"	v	typeref:typename:PFN_PTRC_GLTEXIMAGE2DPROC
_ptrc_glTexImage2DMultisample	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLTEXIMAGE2DMULTISAMPLEPROC _ptrc_glTexImage2DMultisample = Switch_TexImage2DMultisampl/;"	v	typeref:typename:PFN_PTRC_GLTEXIMAGE2DMULTISAMPLEPROC
_ptrc_glTexImage3D	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLTEXIMAGE3DPROC _ptrc_glTexImage3D = Switch_TexImage3D;$/;"	v	typeref:typename:PFN_PTRC_GLTEXIMAGE3DPROC
_ptrc_glTexImage3DMultisample	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLTEXIMAGE3DMULTISAMPLEPROC _ptrc_glTexImage3DMultisample = Switch_TexImage3DMultisampl/;"	v	typeref:typename:PFN_PTRC_GLTEXIMAGE3DMULTISAMPLEPROC
_ptrc_glTexParameterIiv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLTEXPARAMETERIIVPROC _ptrc_glTexParameterIiv = Switch_TexParameterIiv;$/;"	v	typeref:typename:PFN_PTRC_GLTEXPARAMETERIIVPROC
_ptrc_glTexParameterIuiv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLTEXPARAMETERIUIVPROC _ptrc_glTexParameterIuiv = Switch_TexParameterIuiv;$/;"	v	typeref:typename:PFN_PTRC_GLTEXPARAMETERIUIVPROC
_ptrc_glTexParameterf	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLTEXPARAMETERFPROC _ptrc_glTexParameterf = Switch_TexParameterf;$/;"	v	typeref:typename:PFN_PTRC_GLTEXPARAMETERFPROC
_ptrc_glTexParameterfv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLTEXPARAMETERFVPROC _ptrc_glTexParameterfv = Switch_TexParameterfv;$/;"	v	typeref:typename:PFN_PTRC_GLTEXPARAMETERFVPROC
_ptrc_glTexParameteri	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLTEXPARAMETERIPROC _ptrc_glTexParameteri = Switch_TexParameteri;$/;"	v	typeref:typename:PFN_PTRC_GLTEXPARAMETERIPROC
_ptrc_glTexParameteriv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLTEXPARAMETERIVPROC _ptrc_glTexParameteriv = Switch_TexParameteriv;$/;"	v	typeref:typename:PFN_PTRC_GLTEXPARAMETERIVPROC
_ptrc_glTexSubImage1D	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLTEXSUBIMAGE1DPROC _ptrc_glTexSubImage1D = Switch_TexSubImage1D;$/;"	v	typeref:typename:PFN_PTRC_GLTEXSUBIMAGE1DPROC
_ptrc_glTexSubImage2D	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLTEXSUBIMAGE2DPROC _ptrc_glTexSubImage2D = Switch_TexSubImage2D;$/;"	v	typeref:typename:PFN_PTRC_GLTEXSUBIMAGE2DPROC
_ptrc_glTexSubImage3D	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLTEXSUBIMAGE3DPROC _ptrc_glTexSubImage3D = Switch_TexSubImage3D;$/;"	v	typeref:typename:PFN_PTRC_GLTEXSUBIMAGE3DPROC
_ptrc_glTransformFeedbackVaryings	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLTRANSFORMFEEDBACKVARYINGSPROC _ptrc_glTransformFeedbackVaryings = Switch_TransformFee/;"	v	typeref:typename:PFN_PTRC_GLTRANSFORMFEEDBACKVARYINGSPROC
_ptrc_glUniform1f	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLUNIFORM1FPROC _ptrc_glUniform1f = Switch_Uniform1f;$/;"	v	typeref:typename:PFN_PTRC_GLUNIFORM1FPROC
_ptrc_glUniform1fv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLUNIFORM1FVPROC _ptrc_glUniform1fv = Switch_Uniform1fv;$/;"	v	typeref:typename:PFN_PTRC_GLUNIFORM1FVPROC
_ptrc_glUniform1i	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLUNIFORM1IPROC _ptrc_glUniform1i = Switch_Uniform1i;$/;"	v	typeref:typename:PFN_PTRC_GLUNIFORM1IPROC
_ptrc_glUniform1iv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLUNIFORM1IVPROC _ptrc_glUniform1iv = Switch_Uniform1iv;$/;"	v	typeref:typename:PFN_PTRC_GLUNIFORM1IVPROC
_ptrc_glUniform1ui	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLUNIFORM1UIPROC _ptrc_glUniform1ui = Switch_Uniform1ui;$/;"	v	typeref:typename:PFN_PTRC_GLUNIFORM1UIPROC
_ptrc_glUniform1uiv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLUNIFORM1UIVPROC _ptrc_glUniform1uiv = Switch_Uniform1uiv;$/;"	v	typeref:typename:PFN_PTRC_GLUNIFORM1UIVPROC
_ptrc_glUniform2f	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLUNIFORM2FPROC _ptrc_glUniform2f = Switch_Uniform2f;$/;"	v	typeref:typename:PFN_PTRC_GLUNIFORM2FPROC
_ptrc_glUniform2fv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLUNIFORM2FVPROC _ptrc_glUniform2fv = Switch_Uniform2fv;$/;"	v	typeref:typename:PFN_PTRC_GLUNIFORM2FVPROC
_ptrc_glUniform2i	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLUNIFORM2IPROC _ptrc_glUniform2i = Switch_Uniform2i;$/;"	v	typeref:typename:PFN_PTRC_GLUNIFORM2IPROC
_ptrc_glUniform2iv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLUNIFORM2IVPROC _ptrc_glUniform2iv = Switch_Uniform2iv;$/;"	v	typeref:typename:PFN_PTRC_GLUNIFORM2IVPROC
_ptrc_glUniform2ui	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLUNIFORM2UIPROC _ptrc_glUniform2ui = Switch_Uniform2ui;$/;"	v	typeref:typename:PFN_PTRC_GLUNIFORM2UIPROC
_ptrc_glUniform2uiv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLUNIFORM2UIVPROC _ptrc_glUniform2uiv = Switch_Uniform2uiv;$/;"	v	typeref:typename:PFN_PTRC_GLUNIFORM2UIVPROC
_ptrc_glUniform3f	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLUNIFORM3FPROC _ptrc_glUniform3f = Switch_Uniform3f;$/;"	v	typeref:typename:PFN_PTRC_GLUNIFORM3FPROC
_ptrc_glUniform3fv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLUNIFORM3FVPROC _ptrc_glUniform3fv = Switch_Uniform3fv;$/;"	v	typeref:typename:PFN_PTRC_GLUNIFORM3FVPROC
_ptrc_glUniform3i	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLUNIFORM3IPROC _ptrc_glUniform3i = Switch_Uniform3i;$/;"	v	typeref:typename:PFN_PTRC_GLUNIFORM3IPROC
_ptrc_glUniform3iv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLUNIFORM3IVPROC _ptrc_glUniform3iv = Switch_Uniform3iv;$/;"	v	typeref:typename:PFN_PTRC_GLUNIFORM3IVPROC
_ptrc_glUniform3ui	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLUNIFORM3UIPROC _ptrc_glUniform3ui = Switch_Uniform3ui;$/;"	v	typeref:typename:PFN_PTRC_GLUNIFORM3UIPROC
_ptrc_glUniform3uiv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLUNIFORM3UIVPROC _ptrc_glUniform3uiv = Switch_Uniform3uiv;$/;"	v	typeref:typename:PFN_PTRC_GLUNIFORM3UIVPROC
_ptrc_glUniform4f	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLUNIFORM4FPROC _ptrc_glUniform4f = Switch_Uniform4f;$/;"	v	typeref:typename:PFN_PTRC_GLUNIFORM4FPROC
_ptrc_glUniform4fv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLUNIFORM4FVPROC _ptrc_glUniform4fv = Switch_Uniform4fv;$/;"	v	typeref:typename:PFN_PTRC_GLUNIFORM4FVPROC
_ptrc_glUniform4i	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLUNIFORM4IPROC _ptrc_glUniform4i = Switch_Uniform4i;$/;"	v	typeref:typename:PFN_PTRC_GLUNIFORM4IPROC
_ptrc_glUniform4iv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLUNIFORM4IVPROC _ptrc_glUniform4iv = Switch_Uniform4iv;$/;"	v	typeref:typename:PFN_PTRC_GLUNIFORM4IVPROC
_ptrc_glUniform4ui	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLUNIFORM4UIPROC _ptrc_glUniform4ui = Switch_Uniform4ui;$/;"	v	typeref:typename:PFN_PTRC_GLUNIFORM4UIPROC
_ptrc_glUniform4uiv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLUNIFORM4UIVPROC _ptrc_glUniform4uiv = Switch_Uniform4uiv;$/;"	v	typeref:typename:PFN_PTRC_GLUNIFORM4UIVPROC
_ptrc_glUniformBlockBinding	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLUNIFORMBLOCKBINDINGPROC _ptrc_glUniformBlockBinding = Switch_UniformBlockBinding;$/;"	v	typeref:typename:PFN_PTRC_GLUNIFORMBLOCKBINDINGPROC
_ptrc_glUniformMatrix2fv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLUNIFORMMATRIX2FVPROC _ptrc_glUniformMatrix2fv = Switch_UniformMatrix2fv;$/;"	v	typeref:typename:PFN_PTRC_GLUNIFORMMATRIX2FVPROC
_ptrc_glUniformMatrix2x3fv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLUNIFORMMATRIX2X3FVPROC _ptrc_glUniformMatrix2x3fv = Switch_UniformMatrix2x3fv;$/;"	v	typeref:typename:PFN_PTRC_GLUNIFORMMATRIX2X3FVPROC
_ptrc_glUniformMatrix2x4fv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLUNIFORMMATRIX2X4FVPROC _ptrc_glUniformMatrix2x4fv = Switch_UniformMatrix2x4fv;$/;"	v	typeref:typename:PFN_PTRC_GLUNIFORMMATRIX2X4FVPROC
_ptrc_glUniformMatrix3fv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLUNIFORMMATRIX3FVPROC _ptrc_glUniformMatrix3fv = Switch_UniformMatrix3fv;$/;"	v	typeref:typename:PFN_PTRC_GLUNIFORMMATRIX3FVPROC
_ptrc_glUniformMatrix3x2fv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLUNIFORMMATRIX3X2FVPROC _ptrc_glUniformMatrix3x2fv = Switch_UniformMatrix3x2fv;$/;"	v	typeref:typename:PFN_PTRC_GLUNIFORMMATRIX3X2FVPROC
_ptrc_glUniformMatrix3x4fv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLUNIFORMMATRIX3X4FVPROC _ptrc_glUniformMatrix3x4fv = Switch_UniformMatrix3x4fv;$/;"	v	typeref:typename:PFN_PTRC_GLUNIFORMMATRIX3X4FVPROC
_ptrc_glUniformMatrix4fv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLUNIFORMMATRIX4FVPROC _ptrc_glUniformMatrix4fv = Switch_UniformMatrix4fv;$/;"	v	typeref:typename:PFN_PTRC_GLUNIFORMMATRIX4FVPROC
_ptrc_glUniformMatrix4x2fv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLUNIFORMMATRIX4X2FVPROC _ptrc_glUniformMatrix4x2fv = Switch_UniformMatrix4x2fv;$/;"	v	typeref:typename:PFN_PTRC_GLUNIFORMMATRIX4X2FVPROC
_ptrc_glUniformMatrix4x3fv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLUNIFORMMATRIX4X3FVPROC _ptrc_glUniformMatrix4x3fv = Switch_UniformMatrix4x3fv;$/;"	v	typeref:typename:PFN_PTRC_GLUNIFORMMATRIX4X3FVPROC
_ptrc_glUnmapBuffer	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLUNMAPBUFFERPROC _ptrc_glUnmapBuffer = Switch_UnmapBuffer;$/;"	v	typeref:typename:PFN_PTRC_GLUNMAPBUFFERPROC
_ptrc_glUseProgram	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLUSEPROGRAMPROC _ptrc_glUseProgram = Switch_UseProgram;$/;"	v	typeref:typename:PFN_PTRC_GLUSEPROGRAMPROC
_ptrc_glValidateProgram	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVALIDATEPROGRAMPROC _ptrc_glValidateProgram = Switch_ValidateProgram;$/;"	v	typeref:typename:PFN_PTRC_GLVALIDATEPROGRAMPROC
_ptrc_glVertexAttrib1d	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIB1DPROC _ptrc_glVertexAttrib1d = Switch_VertexAttrib1d;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIB1DPROC
_ptrc_glVertexAttrib1dv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIB1DVPROC _ptrc_glVertexAttrib1dv = Switch_VertexAttrib1dv;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIB1DVPROC
_ptrc_glVertexAttrib1f	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIB1FPROC _ptrc_glVertexAttrib1f = Switch_VertexAttrib1f;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIB1FPROC
_ptrc_glVertexAttrib1fv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIB1FVPROC _ptrc_glVertexAttrib1fv = Switch_VertexAttrib1fv;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIB1FVPROC
_ptrc_glVertexAttrib1s	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIB1SPROC _ptrc_glVertexAttrib1s = Switch_VertexAttrib1s;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIB1SPROC
_ptrc_glVertexAttrib1sv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIB1SVPROC _ptrc_glVertexAttrib1sv = Switch_VertexAttrib1sv;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIB1SVPROC
_ptrc_glVertexAttrib2d	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIB2DPROC _ptrc_glVertexAttrib2d = Switch_VertexAttrib2d;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIB2DPROC
_ptrc_glVertexAttrib2dv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIB2DVPROC _ptrc_glVertexAttrib2dv = Switch_VertexAttrib2dv;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIB2DVPROC
_ptrc_glVertexAttrib2f	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIB2FPROC _ptrc_glVertexAttrib2f = Switch_VertexAttrib2f;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIB2FPROC
_ptrc_glVertexAttrib2fv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIB2FVPROC _ptrc_glVertexAttrib2fv = Switch_VertexAttrib2fv;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIB2FVPROC
_ptrc_glVertexAttrib2s	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIB2SPROC _ptrc_glVertexAttrib2s = Switch_VertexAttrib2s;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIB2SPROC
_ptrc_glVertexAttrib2sv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIB2SVPROC _ptrc_glVertexAttrib2sv = Switch_VertexAttrib2sv;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIB2SVPROC
_ptrc_glVertexAttrib3d	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIB3DPROC _ptrc_glVertexAttrib3d = Switch_VertexAttrib3d;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIB3DPROC
_ptrc_glVertexAttrib3dv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIB3DVPROC _ptrc_glVertexAttrib3dv = Switch_VertexAttrib3dv;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIB3DVPROC
_ptrc_glVertexAttrib3f	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIB3FPROC _ptrc_glVertexAttrib3f = Switch_VertexAttrib3f;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIB3FPROC
_ptrc_glVertexAttrib3fv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIB3FVPROC _ptrc_glVertexAttrib3fv = Switch_VertexAttrib3fv;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIB3FVPROC
_ptrc_glVertexAttrib3s	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIB3SPROC _ptrc_glVertexAttrib3s = Switch_VertexAttrib3s;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIB3SPROC
_ptrc_glVertexAttrib3sv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIB3SVPROC _ptrc_glVertexAttrib3sv = Switch_VertexAttrib3sv;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIB3SVPROC
_ptrc_glVertexAttrib4Nbv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIB4NBVPROC _ptrc_glVertexAttrib4Nbv = Switch_VertexAttrib4Nbv;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIB4NBVPROC
_ptrc_glVertexAttrib4Niv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIB4NIVPROC _ptrc_glVertexAttrib4Niv = Switch_VertexAttrib4Niv;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIB4NIVPROC
_ptrc_glVertexAttrib4Nsv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIB4NSVPROC _ptrc_glVertexAttrib4Nsv = Switch_VertexAttrib4Nsv;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIB4NSVPROC
_ptrc_glVertexAttrib4Nub	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIB4NUBPROC _ptrc_glVertexAttrib4Nub = Switch_VertexAttrib4Nub;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIB4NUBPROC
_ptrc_glVertexAttrib4Nubv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIB4NUBVPROC _ptrc_glVertexAttrib4Nubv = Switch_VertexAttrib4Nubv;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIB4NUBVPROC
_ptrc_glVertexAttrib4Nuiv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIB4NUIVPROC _ptrc_glVertexAttrib4Nuiv = Switch_VertexAttrib4Nuiv;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIB4NUIVPROC
_ptrc_glVertexAttrib4Nusv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIB4NUSVPROC _ptrc_glVertexAttrib4Nusv = Switch_VertexAttrib4Nusv;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIB4NUSVPROC
_ptrc_glVertexAttrib4bv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIB4BVPROC _ptrc_glVertexAttrib4bv = Switch_VertexAttrib4bv;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIB4BVPROC
_ptrc_glVertexAttrib4d	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIB4DPROC _ptrc_glVertexAttrib4d = Switch_VertexAttrib4d;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIB4DPROC
_ptrc_glVertexAttrib4dv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIB4DVPROC _ptrc_glVertexAttrib4dv = Switch_VertexAttrib4dv;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIB4DVPROC
_ptrc_glVertexAttrib4f	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIB4FPROC _ptrc_glVertexAttrib4f = Switch_VertexAttrib4f;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIB4FPROC
_ptrc_glVertexAttrib4fv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIB4FVPROC _ptrc_glVertexAttrib4fv = Switch_VertexAttrib4fv;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIB4FVPROC
_ptrc_glVertexAttrib4iv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIB4IVPROC _ptrc_glVertexAttrib4iv = Switch_VertexAttrib4iv;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIB4IVPROC
_ptrc_glVertexAttrib4s	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIB4SPROC _ptrc_glVertexAttrib4s = Switch_VertexAttrib4s;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIB4SPROC
_ptrc_glVertexAttrib4sv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIB4SVPROC _ptrc_glVertexAttrib4sv = Switch_VertexAttrib4sv;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIB4SVPROC
_ptrc_glVertexAttrib4ubv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIB4UBVPROC _ptrc_glVertexAttrib4ubv = Switch_VertexAttrib4ubv;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIB4UBVPROC
_ptrc_glVertexAttrib4uiv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIB4UIVPROC _ptrc_glVertexAttrib4uiv = Switch_VertexAttrib4uiv;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIB4UIVPROC
_ptrc_glVertexAttrib4usv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIB4USVPROC _ptrc_glVertexAttrib4usv = Switch_VertexAttrib4usv;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIB4USVPROC
_ptrc_glVertexAttribDivisor	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIBDIVISORPROC _ptrc_glVertexAttribDivisor = Switch_VertexAttribDivisor;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIBDIVISORPROC
_ptrc_glVertexAttribI1i	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIBI1IPROC _ptrc_glVertexAttribI1i = Switch_VertexAttribI1i;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIBI1IPROC
_ptrc_glVertexAttribI1iv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIBI1IVPROC _ptrc_glVertexAttribI1iv = Switch_VertexAttribI1iv;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIBI1IVPROC
_ptrc_glVertexAttribI1ui	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIBI1UIPROC _ptrc_glVertexAttribI1ui = Switch_VertexAttribI1ui;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIBI1UIPROC
_ptrc_glVertexAttribI1uiv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIBI1UIVPROC _ptrc_glVertexAttribI1uiv = Switch_VertexAttribI1uiv;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIBI1UIVPROC
_ptrc_glVertexAttribI2i	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIBI2IPROC _ptrc_glVertexAttribI2i = Switch_VertexAttribI2i;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIBI2IPROC
_ptrc_glVertexAttribI2iv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIBI2IVPROC _ptrc_glVertexAttribI2iv = Switch_VertexAttribI2iv;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIBI2IVPROC
_ptrc_glVertexAttribI2ui	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIBI2UIPROC _ptrc_glVertexAttribI2ui = Switch_VertexAttribI2ui;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIBI2UIPROC
_ptrc_glVertexAttribI2uiv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIBI2UIVPROC _ptrc_glVertexAttribI2uiv = Switch_VertexAttribI2uiv;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIBI2UIVPROC
_ptrc_glVertexAttribI3i	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIBI3IPROC _ptrc_glVertexAttribI3i = Switch_VertexAttribI3i;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIBI3IPROC
_ptrc_glVertexAttribI3iv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIBI3IVPROC _ptrc_glVertexAttribI3iv = Switch_VertexAttribI3iv;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIBI3IVPROC
_ptrc_glVertexAttribI3ui	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIBI3UIPROC _ptrc_glVertexAttribI3ui = Switch_VertexAttribI3ui;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIBI3UIPROC
_ptrc_glVertexAttribI3uiv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIBI3UIVPROC _ptrc_glVertexAttribI3uiv = Switch_VertexAttribI3uiv;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIBI3UIVPROC
_ptrc_glVertexAttribI4bv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIBI4BVPROC _ptrc_glVertexAttribI4bv = Switch_VertexAttribI4bv;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIBI4BVPROC
_ptrc_glVertexAttribI4i	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIBI4IPROC _ptrc_glVertexAttribI4i = Switch_VertexAttribI4i;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIBI4IPROC
_ptrc_glVertexAttribI4iv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIBI4IVPROC _ptrc_glVertexAttribI4iv = Switch_VertexAttribI4iv;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIBI4IVPROC
_ptrc_glVertexAttribI4sv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIBI4SVPROC _ptrc_glVertexAttribI4sv = Switch_VertexAttribI4sv;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIBI4SVPROC
_ptrc_glVertexAttribI4ubv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIBI4UBVPROC _ptrc_glVertexAttribI4ubv = Switch_VertexAttribI4ubv;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIBI4UBVPROC
_ptrc_glVertexAttribI4ui	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIBI4UIPROC _ptrc_glVertexAttribI4ui = Switch_VertexAttribI4ui;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIBI4UIPROC
_ptrc_glVertexAttribI4uiv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIBI4UIVPROC _ptrc_glVertexAttribI4uiv = Switch_VertexAttribI4uiv;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIBI4UIVPROC
_ptrc_glVertexAttribI4usv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIBI4USVPROC _ptrc_glVertexAttribI4usv = Switch_VertexAttribI4usv;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIBI4USVPROC
_ptrc_glVertexAttribIPointer	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIBIPOINTERPROC _ptrc_glVertexAttribIPointer = Switch_VertexAttribIPointer;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIBIPOINTERPROC
_ptrc_glVertexAttribP1ui	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIBP1UIPROC _ptrc_glVertexAttribP1ui = Switch_VertexAttribP1ui;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIBP1UIPROC
_ptrc_glVertexAttribP1uiv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIBP1UIVPROC _ptrc_glVertexAttribP1uiv = Switch_VertexAttribP1uiv;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIBP1UIVPROC
_ptrc_glVertexAttribP2ui	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIBP2UIPROC _ptrc_glVertexAttribP2ui = Switch_VertexAttribP2ui;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIBP2UIPROC
_ptrc_glVertexAttribP2uiv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIBP2UIVPROC _ptrc_glVertexAttribP2uiv = Switch_VertexAttribP2uiv;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIBP2UIVPROC
_ptrc_glVertexAttribP3ui	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIBP3UIPROC _ptrc_glVertexAttribP3ui = Switch_VertexAttribP3ui;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIBP3UIPROC
_ptrc_glVertexAttribP3uiv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIBP3UIVPROC _ptrc_glVertexAttribP3uiv = Switch_VertexAttribP3uiv;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIBP3UIVPROC
_ptrc_glVertexAttribP4ui	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIBP4UIPROC _ptrc_glVertexAttribP4ui = Switch_VertexAttribP4ui;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIBP4UIPROC
_ptrc_glVertexAttribP4uiv	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIBP4UIVPROC _ptrc_glVertexAttribP4uiv = Switch_VertexAttribP4uiv;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIBP4UIVPROC
_ptrc_glVertexAttribPointer	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVERTEXATTRIBPOINTERPROC _ptrc_glVertexAttribPointer = Switch_VertexAttribPointer;$/;"	v	typeref:typename:PFN_PTRC_GLVERTEXATTRIBPOINTERPROC
_ptrc_glViewport	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLVIEWPORTPROC _ptrc_glViewport = Switch_Viewport;$/;"	v	typeref:typename:PFN_PTRC_GLVIEWPORTPROC
_ptrc_glWaitSync	.\\src\\gl_core_3_3.cpp	/^PFN_PTRC_GLWAITSYNCPROC _ptrc_glWaitSync = Switch_WaitSync;$/;"	v	typeref:typename:PFN_PTRC_GLWAITSYNCPROC
access_glyph_frame	.\\include\\freetype\\internal\\tttypes.h	/^    TT_Loader_StartGlyphFunc  access_glyph_frame;$/;"	m	struct:TT_FaceRec_	typeref:typename:TT_Loader_StartGlyphFunc
achVendID	.\\include\\freetype\\tttables.h	/^    FT_Char    achVendID[4];$/;"	m	struct:TT_OS2_	typeref:typename:FT_Char[4]
add	.\\include\\freetype\\internal\\psaux.h	/^    (*add)( PS_Table  table,$/;"	m	struct:PS_Table_FuncsRec_	typeref:typename:FT_Error (*)(PS_Table table,FT_Int idx,void * object,FT_UInt length)
add_contour	.\\include\\freetype\\internal\\psaux.h	/^    T1_Builder_Add_Contour_Func    add_contour;$/;"	m	struct:T1_Builder_FuncsRec_	typeref:typename:T1_Builder_Add_Contour_Func
add_point	.\\include\\freetype\\internal\\psaux.h	/^    T1_Builder_Add_Point_Func      add_point;$/;"	m	struct:T1_Builder_FuncsRec_	typeref:typename:T1_Builder_Add_Point_Func
add_point1	.\\include\\freetype\\internal\\psaux.h	/^    T1_Builder_Add_Point1_Func     add_point1;$/;"	m	struct:T1_Builder_FuncsRec_	typeref:typename:T1_Builder_Add_Point1_Func
addr	.\\include\\curl\\curl.h	/^  struct sockaddr addr;$/;"	m	struct:curl_sockaddr	typeref:struct:sockaddr
addrlen	.\\include\\curl\\curl.h	/^  unsigned int addrlen; \/* addrlen was a socklen_t type before 7.18.0 but it$/;"	m	struct:curl_sockaddr	typeref:typename:unsigned int
advance	.\\include\\freetype\\freetype.h	/^    FT_Vector         advance;$/;"	m	struct:FT_GlyphSlotRec_	typeref:typename:FT_Vector
advance	.\\include\\freetype\\ftglyph.h	/^    FT_Vector              advance;$/;"	m	struct:FT_GlyphRec_	typeref:typename:FT_Vector
advance	.\\include\\freetype\\ftincrem.h	/^    FT_Long  advance;$/;"	m	struct:FT_Incremental_MetricsRec_	typeref:typename:FT_Long
advance	.\\include\\freetype\\internal\\psaux.h	/^    FT_Vector       advance;$/;"	m	struct:T1_BuilderRec_	typeref:typename:FT_Vector
advance	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Byte  advance;$/;"	m	struct:TT_SBit_Small_Metrics_	typeref:typename:FT_Byte
advance	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Int           advance;$/;"	m	struct:TT_LoaderRec_	typeref:typename:FT_Int
advance	.\\include\\freetype\\internal\\tttypes.h	/^    FT_UShort  advance;$/;"	m	struct:TT_LongMetricsRec_	typeref:typename:FT_UShort
advance_Height_Max	.\\include\\freetype\\tttables.h	/^    FT_UShort  advance_Height_Max;      \/* advance height maximum *\/$/;"	m	struct:TT_VertHeader_	typeref:typename:FT_UShort
advance_Width_Max	.\\include\\freetype\\tttables.h	/^    FT_UShort  advance_Width_Max;      \/* advance width maximum *\/$/;"	m	struct:TT_HoriHeader_	typeref:typename:FT_UShort
advance_v	.\\include\\freetype\\ftincrem.h	/^    FT_Long  advance_v;     \/* since 2.3.12 *\/$/;"	m	struct:FT_Incremental_MetricsRec_	typeref:typename:FT_Long
afm_data	.\\include\\freetype\\internal\\t1types.h	/^    const void*     afm_data;$/;"	m	struct:T1_FaceRec_	typeref:typename:const void *
afm_parser_funcs	.\\include\\freetype\\internal\\psaux.h	/^    const AFM_Parser_FuncsRec*  afm_parser_funcs;$/;"	m	struct:PSAux_ServiceRec_	typeref:typename:const AFM_Parser_FuncsRec *
age	.\\include\\curl\\curl.h	/^  CURLversion age;          \/* age of the returned struct *\/$/;"	m	struct:__anon529bf04d1d08	typeref:typename:CURLversion
alloc	.\\include\\freetype\\ftsystem.h	/^    FT_Alloc_Func    alloc;$/;"	m	struct:FT_MemoryRec_	typeref:typename:FT_Alloc_Func
apply	.\\include\\freetype\\internal\\pshints.h	/^    T1_Hints_ApplyFunc     apply;$/;"	m	struct:T1_Hints_FuncsRec_	typeref:typename:T1_Hints_ApplyFunc
apply	.\\include\\freetype\\internal\\pshints.h	/^    T2_Hints_ApplyFunc    apply;$/;"	m	struct:T2_Hints_FuncsRec_	typeref:typename:T2_Hints_ApplyFunc
ares	.\\include\\curl\\curl.h	/^  const char *ares;$/;"	m	struct:__anon529bf04d1d08	typeref:typename:const char *
ares_num	.\\include\\curl\\curl.h	/^  int ares_num;$/;"	m	struct:__anon529bf04d1d08	typeref:typename:int
arg1	.\\include\\Window.h	/^    const char* arg1; \/\/ url$/;"	m	struct:curlArgs	typeref:typename:const char *
arg1	.\\include\\freetype\\internal\\ftgloadr.h	/^    FT_Int     arg1;$/;"	m	struct:FT_SubGlyphRec_	typeref:typename:FT_Int
arg2	.\\include\\Window.h	/^    curl_slist* arg2; \/\/ slist$/;"	m	struct:curlArgs	typeref:typename:curl_slist *
arg2	.\\include\\freetype\\internal\\ftgloadr.h	/^    FT_Int     arg2;$/;"	m	struct:FT_SubGlyphRec_	typeref:typename:FT_Int
arg3	.\\include\\Window.h	/^    char* arg3; \/\/ postData$/;"	m	struct:curlArgs	typeref:typename:char *
array_max	.\\include\\freetype\\internal\\psaux.h	/^    FT_UInt             array_max;    \/* maximum number of elements for *\/$/;"	m	struct:T1_FieldRec_	typeref:typename:FT_UInt
ascender	.\\include\\freetype\\freetype.h	/^    FT_Pos     ascender;    \/* ascender in 26.6 frac. pixels          *\/$/;"	m	struct:FT_Size_Metrics_	typeref:typename:FT_Pos
ascender	.\\include\\freetype\\freetype.h	/^    FT_Short          ascender;$/;"	m	struct:FT_FaceRec_	typeref:typename:FT_Short
ascender	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Char  ascender;$/;"	m	struct:TT_SBit_LineMetricsRec_	typeref:typename:FT_Char
ascent	.\\include\\freetype\\ftwinfnt.h	/^    FT_UShort  ascent;$/;"	m	struct:FT_WinFNT_HeaderRec_	typeref:typename:FT_UShort
atom	.\\include\\freetype\\ftbdf.h	/^      const char*     atom;$/;"	m	union:BDF_PropertyRec_::__anon0621b64b010a	typeref:typename:const char *
attach_file	.\\include\\freetype\\internal\\ftdriver.h	/^    FT_Face_AttachFunc       attach_file;$/;"	m	struct:FT_Driver_ClassRec_	typeref:typename:FT_Face_AttachFunc
attribute_deprecated	.\\include\\oauth.h	/^#    define attribute_deprecated /;"	d
attribute_deprecated	.\\include\\oauth.h	/^#    define attribute_deprecated$/;"	d
auto_hinter	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_Module          auto_hinter;$/;"	m	struct:FT_LibraryRec_	typeref:typename:FT_Module
autofit	.\\include\\freetype\\internal\\ftpic.h	/^    void*  autofit;$/;"	m	struct:FT_PIC_Container_	typeref:typename:void *
autohint	.\\include\\freetype\\freetype.h	/^    FT_Generic        autohint;   \/* face-specific auto-hinter data *\/$/;"	m	struct:FT_FaceRec_	typeref:typename:FT_Generic
available_sizes	.\\include\\freetype\\freetype.h	/^    FT_Bitmap_Size*   available_sizes;$/;"	m	struct:FT_FaceRec_	typeref:typename:FT_Bitmap_Size *
avg_width	.\\include\\freetype\\ftwinfnt.h	/^    FT_UShort  avg_width;$/;"	m	struct:FT_WinFNT_HeaderRec_	typeref:typename:FT_UShort
axis	.\\include\\freetype\\ftmm.h	/^    FT_MM_Axis  axis[T1_MAX_MM_AXIS];$/;"	m	struct:FT_Multi_Master_	typeref:typename:FT_MM_Axis[]
axis	.\\include\\freetype\\ftmm.h	/^    FT_Var_Axis*         axis;$/;"	m	struct:FT_MM_Var_	typeref:typename:FT_Var_Axis *
axis_names	.\\include\\freetype\\t1tables.h	/^    FT_String*       axis_names[T1_MAX_MM_AXIS];$/;"	m	struct:PS_BlendRec_	typeref:typename:FT_String * []
b_data	.\\include\\curl\\curl.h	/^  char * b_data;$/;"	m	struct:curl_fileinfo	typeref:typename:char *
b_size	.\\include\\curl\\curl.h	/^  size_t b_size;$/;"	m	struct:curl_fileinfo	typeref:typename:size_t
b_used	.\\include\\curl\\curl.h	/^  size_t b_used;$/;"	m	struct:curl_fileinfo	typeref:typename:size_t
backend	.\\include\\curl\\curl.h	/^  curl_sslbackend backend;$/;"	m	struct:curl_tlssessioninfo	typeref:typename:curl_sslbackend
base	.\\include\\freetype\\ftsystem.h	/^    unsigned char*       base;$/;"	m	struct:FT_StreamRec_	typeref:typename:unsigned char *
base	.\\include\\freetype\\internal\\ftgloadr.h	/^    FT_GlyphLoadRec  base;$/;"	m	struct:FT_GlyphLoaderRec_	typeref:typename:FT_GlyphLoadRec
base	.\\include\\freetype\\internal\\ftpic.h	/^    void*  base;$/;"	m	struct:FT_PIC_Container_	typeref:typename:void *
base	.\\include\\freetype\\internal\\ftvalid.h	/^    const FT_Byte*      base;        \/* address of table in memory       *\/$/;"	m	struct:FT_ValidatorRec_	typeref:typename:const FT_Byte *
base	.\\include\\freetype\\internal\\psaux.h	/^    FT_Byte*   base;$/;"	m	struct:PS_ParserRec_	typeref:typename:FT_Byte *
base	.\\include\\freetype\\internal\\psaux.h	/^    FT_Byte*  base;$/;"	m	struct:T1_Decoder_ZoneRec_	typeref:typename:FT_Byte *
base	.\\include\\freetype\\internal\\psaux.h	/^    FT_Outline*     base;$/;"	m	struct:T1_BuilderRec_	typeref:typename:FT_Outline *
base	.\\include\\freetype\\internal\\tttypes.h	/^    TT_GlyphZoneRec  base;$/;"	m	struct:TT_LoaderRec_	typeref:typename:TT_GlyphZoneRec
bbox	.\\include\\freetype\\freetype.h	/^    FT_BBox           bbox;$/;"	m	struct:FT_FaceRec_	typeref:typename:FT_BBox
bbox	.\\include\\freetype\\internal\\psaux.h	/^    FT_BBox         bbox;          \/* bounding box *\/$/;"	m	struct:T1_BuilderRec_	typeref:typename:FT_BBox
bbox	.\\include\\freetype\\internal\\tttypes.h	/^    FT_BBox          bbox;$/;"	m	struct:TT_LoaderRec_	typeref:typename:FT_BBox
bboxes	.\\include\\freetype\\t1tables.h	/^    FT_BBox*         bboxes    [T1_MAX_MM_DESIGNS + 1];$/;"	m	struct:PS_BlendRec_	typeref:typename:FT_BBox * []
bdf	.\\include\\freetype\\internal\\tttypes.h	/^    TT_BDFRec             bdf;$/;"	m	struct:TT_FaceRec_	typeref:typename:TT_BDFRec
bearing	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Short   bearing;$/;"	m	struct:TT_LongMetricsRec_	typeref:typename:FT_Short
bearingX	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Char  bearingX;$/;"	m	struct:TT_SBit_Small_Metrics_	typeref:typename:FT_Char
bearingY	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Char  bearingY;$/;"	m	struct:TT_SBit_Small_Metrics_	typeref:typename:FT_Char
bearing_x	.\\include\\freetype\\ftincrem.h	/^    FT_Long  bearing_x;$/;"	m	struct:FT_Incremental_MetricsRec_	typeref:typename:FT_Long
bearing_y	.\\include\\freetype\\ftincrem.h	/^    FT_Long  bearing_y;$/;"	m	struct:FT_Incremental_MetricsRec_	typeref:typename:FT_Long
binary_data	.\\include\\freetype\\internal\\t1types.h	/^    FT_Byte*         binary_data; \/* used if hex data has been converted *\/$/;"	m	struct:CID_FaceRec_	typeref:typename:FT_Byte *
bit_depth	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Byte                 bit_depth;$/;"	m	struct:TT_SBit_StrikeRec_	typeref:typename:FT_Byte
bit_set	.\\include\\freetype\\ftimage.h	/^    FT_Raster_BitSet_Func   bit_set;      \/* unused *\/$/;"	m	struct:FT_Raster_Params_	typeref:typename:FT_Raster_BitSet_Func
bit_test	.\\include\\freetype\\ftimage.h	/^    FT_Raster_BitTest_Func  bit_test;     \/* unused *\/$/;"	m	struct:FT_Raster_Params_	typeref:typename:FT_Raster_BitTest_Func
bitmap	.\\include\\freetype\\freetype.h	/^    FT_Bitmap         bitmap;$/;"	m	struct:FT_GlyphSlotRec_	typeref:typename:FT_Bitmap
bitmap	.\\include\\freetype\\ftglyph.h	/^    FT_Bitmap    bitmap;$/;"	m	struct:FT_BitmapGlyphRec_	typeref:typename:FT_Bitmap
bitmap_left	.\\include\\freetype\\freetype.h	/^    FT_Int            bitmap_left;$/;"	m	struct:FT_GlyphSlotRec_	typeref:typename:FT_Int
bitmap_top	.\\include\\freetype\\freetype.h	/^    FT_Int            bitmap_top;$/;"	m	struct:FT_GlyphSlotRec_	typeref:typename:FT_Int
bits_offset	.\\include\\freetype\\ftwinfnt.h	/^    FT_ULong   bits_offset;$/;"	m	struct:FT_WinFNT_HeaderRec_	typeref:typename:FT_ULong
bits_pointer	.\\include\\freetype\\ftwinfnt.h	/^    FT_ULong   bits_pointer;$/;"	m	struct:FT_WinFNT_HeaderRec_	typeref:typename:FT_ULong
black_spans	.\\include\\freetype\\ftimage.h	/^    FT_SpanFunc             black_spans;  \/* unused *\/$/;"	m	struct:FT_Raster_Params_	typeref:typename:FT_SpanFunc
blend	.\\include\\freetype\\internal\\psaux.h	/^    PS_Blend             blend;       \/* for multiple master support *\/$/;"	m	struct:T1_DecoderRec_	typeref:typename:PS_Blend
blend	.\\include\\freetype\\internal\\t1types.h	/^    PS_Blend        blend;$/;"	m	struct:T1_FaceRec_	typeref:typename:PS_Blend
blend	.\\include\\freetype\\internal\\tttypes.h	/^    GX_Blend              blend;$/;"	m	struct:TT_FaceRec_	typeref:typename:GX_Blend
blend_bitflags	.\\include\\freetype\\t1tables.h	/^    FT_ULong         blend_bitflags;$/;"	m	struct:PS_BlendRec_	typeref:typename:FT_ULong
blend_points	.\\include\\freetype\\t1tables.h	/^    FT_Fixed*  blend_points;$/;"	m	struct:PS_DesignMap_	typeref:typename:FT_Fixed *
block	.\\include\\freetype\\internal\\psaux.h	/^    FT_Byte*           block;          \/* current memory block           *\/$/;"	m	struct:PS_TableRec_	typeref:typename:FT_Byte *
blue	.\\include\\GLFW\\glfw3.h	/^    unsigned short* blue;$/;"	m	struct:GLFWgammaramp	typeref:typename:unsigned short *
blueBits	.\\include\\GLFW\\glfw3.h	/^    int blueBits;$/;"	m	struct:GLFWvidmode	typeref:typename:int
blue_fuzz	.\\include\\freetype\\t1tables.h	/^    FT_Int     blue_fuzz;$/;"	m	struct:PS_PrivateRec_	typeref:typename:FT_Int
blue_scale	.\\include\\freetype\\t1tables.h	/^    FT_Fixed   blue_scale;$/;"	m	struct:PS_PrivateRec_	typeref:typename:FT_Fixed
blue_shift	.\\include\\freetype\\t1tables.h	/^    FT_Int     blue_shift;$/;"	m	struct:PS_PrivateRec_	typeref:typename:FT_Int
blue_values	.\\include\\freetype\\t1tables.h	/^    FT_Short   blue_values[14];$/;"	m	struct:PS_PrivateRec_	typeref:typename:FT_Short[14]
break_char	.\\include\\freetype\\ftwinfnt.h	/^    FT_Byte    break_char;$/;"	m	struct:FT_WinFNT_HeaderRec_	typeref:typename:FT_Byte
buffer	.\\include\\curl\\curl.h	/^  char *buffer;                     \/* pointer to allocated buffer contents *\/$/;"	m	struct:curl_httppost	typeref:typename:char *
buffer	.\\include\\freetype\\ftcache.h	/^    FT_Byte*  buffer;$/;"	m	struct:FTC_SBitRec_	typeref:typename:FT_Byte *
buffer	.\\include\\freetype\\ftimage.h	/^    unsigned char*  buffer;$/;"	m	struct:FT_Bitmap_	typeref:typename:unsigned char *
bufferlength	.\\include\\curl\\curl.h	/^  long bufferlength;                \/* length of buffer field *\/$/;"	m	struct:curl_httppost	typeref:typename:long
buildchar	.\\include\\freetype\\internal\\psaux.h	/^    FT_Long*             buildchar;$/;"	m	struct:T1_DecoderRec_	typeref:typename:FT_Long *
buildchar	.\\include\\freetype\\internal\\t1types.h	/^    FT_Long*         buildchar;$/;"	m	struct:T1_FaceRec_	typeref:typename:FT_Long *
builder	.\\include\\freetype\\internal\\psaux.h	/^    T1_BuilderRec        builder;$/;"	m	struct:T1_DecoderRec_	typeref:typename:T1_BuilderRec
byte_len	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Int           byte_len;$/;"	m	struct:TT_LoaderRec_	typeref:typename:FT_Int
bytes_per_row	.\\include\\freetype\\ftwinfnt.h	/^    FT_UShort  bytes_per_row;$/;"	m	struct:FT_WinFNT_HeaderRec_	typeref:typename:FT_UShort
capacity	.\\include\\freetype\\internal\\psaux.h	/^    FT_Offset          capacity;       \/* current size of memory block   *\/$/;"	m	struct:PS_TableRec_	typeref:typename:FT_Offset
cardinal	.\\include\\freetype\\ftbdf.h	/^      FT_UInt32       cardinal;$/;"	m	union:BDF_PropertyRec_::__anon0621b64b010a	typeref:typename:FT_UInt32
caret_Offset	.\\include\\freetype\\tttables.h	/^    FT_Short   caret_Offset;$/;"	m	struct:TT_HoriHeader_	typeref:typename:FT_Short
caret_Offset	.\\include\\freetype\\tttables.h	/^    FT_Short   caret_Offset;$/;"	m	struct:TT_VertHeader_	typeref:typename:FT_Short
caret_Slope_Rise	.\\include\\freetype\\tttables.h	/^    FT_Short   caret_Slope_Rise;$/;"	m	struct:TT_HoriHeader_	typeref:typename:FT_Short
caret_Slope_Rise	.\\include\\freetype\\tttables.h	/^    FT_Short   caret_Slope_Rise;$/;"	m	struct:TT_VertHeader_	typeref:typename:FT_Short
caret_Slope_Run	.\\include\\freetype\\tttables.h	/^    FT_Short   caret_Slope_Run;$/;"	m	struct:TT_HoriHeader_	typeref:typename:FT_Short
caret_Slope_Run	.\\include\\freetype\\tttables.h	/^    FT_Short   caret_Slope_Run;$/;"	m	struct:TT_VertHeader_	typeref:typename:FT_Short
caret_offset	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Char  caret_offset;$/;"	m	struct:TT_SBit_LineMetricsRec_	typeref:typename:FT_Char
caret_slope_denominator	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Char  caret_slope_denominator;$/;"	m	struct:TT_SBit_LineMetricsRec_	typeref:typename:FT_Char
caret_slope_numerator	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Char  caret_slope_numerator;$/;"	m	struct:TT_SBit_LineMetricsRec_	typeref:typename:FT_Char
cdv_idx	.\\include\\freetype\\internal\\t1types.h	/^    FT_Int           cdv_idx;$/;"	m	struct:T1_FaceRec_	typeref:typename:FT_Int
certinfo	.\\include\\curl\\curl.h	/^  struct curl_slist **certinfo; \/* for each index in this array, there's a$/;"	m	struct:curl_certinfo	typeref:struct:curl_slist **
cff	.\\include\\freetype\\internal\\ftpic.h	/^    void*  cff;$/;"	m	struct:FT_PIC_Container_	typeref:typename:void *
charArray	.\\src\\Window.cpp	/^Character charArray[nFontNames][sizeof(fontSizes)\/sizeof(int)][128];$/;"	v	typeref:typename:Character[][][128]
char_index	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_CMap_CharIndexFunc  char_index;$/;"	m	struct:FT_CMap_ClassRec_	typeref:typename:FT_CMap_CharIndexFunc
char_index	.\\include\\freetype\\internal\\t1types.h	/^    FT_UShort*   char_index;$/;"	m	struct:T1_EncodingRecRec_	typeref:typename:FT_UShort *
char_name	.\\include\\freetype\\internal\\t1types.h	/^    FT_String**  char_name;$/;"	m	struct:T1_EncodingRecRec_	typeref:typename:FT_String **
char_next	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_CMap_CharNextFunc   char_next;$/;"	m	struct:FT_CMap_ClassRec_	typeref:typename:FT_CMap_CharNextFunc
char_var_default	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_CMap_CharVarIsDefaultFunc  char_var_default;$/;"	m	struct:FT_CMap_ClassRec_	typeref:typename:FT_CMap_CharVarIsDefaultFunc
char_var_index	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_CMap_CharVarIndexFunc      char_var_index;$/;"	m	struct:FT_CMap_ClassRec_	typeref:typename:FT_CMap_CharVarIndexFunc
charmap	.\\include\\freetype\\freetype.h	/^    FT_CharMap        charmap;$/;"	m	struct:FT_FaceRec_	typeref:typename:FT_CharMap
charmap	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_CharMapRec  charmap;$/;"	m	struct:FT_CMapRec_	typeref:typename:FT_CharMapRec
charmaprecs	.\\include\\freetype\\internal\\t1types.h	/^    FT_CharMapRec   charmaprecs[2];$/;"	m	struct:T1_FaceRec_	typeref:typename:FT_CharMapRec[2]
charmaps	.\\include\\freetype\\freetype.h	/^    FT_CharMap*       charmaps;$/;"	m	struct:FT_FaceRec_	typeref:typename:FT_CharMap *
charmaps	.\\include\\freetype\\internal\\t1types.h	/^    FT_CharMap      charmaps[2];$/;"	m	struct:T1_FaceRec_	typeref:typename:FT_CharMap[2]
charset	.\\include\\freetype\\ftwinfnt.h	/^    FT_Byte    charset;$/;"	m	struct:FT_WinFNT_HeaderRec_	typeref:typename:FT_Byte
charstrings	.\\include\\freetype\\internal\\t1types.h	/^    FT_Byte**        charstrings;       \/* array of glyph charstrings *\/$/;"	m	struct:T1_FontRec_	typeref:typename:FT_Byte **
charstrings_block	.\\include\\freetype\\internal\\t1types.h	/^    FT_Byte*         charstrings_block;$/;"	m	struct:T1_FontRec_	typeref:typename:FT_Byte *
charstrings_len	.\\include\\freetype\\internal\\t1types.h	/^    FT_UInt*         charstrings_len;$/;"	m	struct:T1_FontRec_	typeref:typename:FT_UInt *
charvariant_list	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_CMap_CharVariantListFunc   charvariant_list;$/;"	m	struct:FT_CMap_ClassRec_	typeref:typename:FT_CMap_CharVariantListFunc
check_points	.\\include\\freetype\\internal\\psaux.h	/^    T1_Builder_Check_Points_Func   check_points;$/;"	m	struct:T1_Builder_FuncsRec_	typeref:typename:T1_Builder_Check_Points_Func
cid	.\\include\\freetype\\internal\\t1types.h	/^    CID_FaceInfoRec  cid;$/;"	m	struct:CID_FaceRec_	typeref:typename:CID_FaceInfoRec
cid_count	.\\include\\freetype\\t1tables.h	/^    FT_ULong        cid_count;$/;"	m	struct:CID_FaceInfoRec_	typeref:typename:FT_ULong
cid_font_name	.\\include\\freetype\\t1tables.h	/^    FT_String*      cid_font_name;$/;"	m	struct:CID_FaceInfoRec_	typeref:typename:FT_String *
cid_font_type	.\\include\\freetype\\t1tables.h	/^    FT_Int          cid_font_type;$/;"	m	struct:CID_FaceInfoRec_	typeref:typename:FT_Int
cid_stream	.\\include\\freetype\\internal\\t1types.h	/^    FT_Stream        cid_stream;$/;"	m	struct:CID_FaceRec_	typeref:typename:FT_Stream
cid_version	.\\include\\freetype\\t1tables.h	/^    FT_Fixed        cid_version;$/;"	m	struct:CID_FaceInfoRec_	typeref:typename:FT_Fixed
cidmap_offset	.\\include\\freetype\\t1tables.h	/^    FT_ULong        cidmap_offset;$/;"	m	struct:CID_FaceInfoRec_	typeref:typename:FT_ULong
ckern_validate_func	.\\include\\freetype\\internal\\services\\svgxval.h	/^  (*ckern_validate_func)( FT_Face   face,$/;"	t	typeref:typename:FT_Error (*)(FT_Face face,FT_UInt ckern_flags,FT_Bytes * ckern_table)
clazz	.\\include\\freetype\\ftglyph.h	/^    const FT_Glyph_Class*  clazz;$/;"	m	struct:FT_GlyphRec_	typeref:typename:const FT_Glyph_Class *
clazz	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_CMap_Class  clazz;$/;"	m	struct:FT_CMapRec_	typeref:typename:FT_CMap_Class
clazz	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_Driver_Class  clazz;$/;"	m	struct:FT_DriverRec_	typeref:typename:FT_Driver_Class
clazz	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_Module_Class*  clazz;$/;"	m	struct:FT_ModuleRec_	typeref:typename:FT_Module_Class *
clazz	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_Renderer_Class*      clazz;$/;"	m	struct:FT_RendererRec_	typeref:typename:FT_Renderer_Class *
clean	.\\makefile	/^clean:$/;"	t
clip_box	.\\include\\freetype\\ftimage.h	/^    FT_BBox                 clip_box;$/;"	m	struct:FT_Raster_Params_	typeref:typename:FT_BBox
close	.\\include\\freetype\\ftsystem.h	/^    FT_Stream_CloseFunc  close;$/;"	m	struct:FT_StreamRec_	typeref:typename:FT_Stream_CloseFunc
close	.\\include\\freetype\\internal\\pshints.h	/^    T1_Hints_CloseFunc     close;$/;"	m	struct:T1_Hints_FuncsRec_	typeref:typename:T1_Hints_CloseFunc
close	.\\include\\freetype\\internal\\pshints.h	/^    T2_Hints_CloseFunc    close;$/;"	m	struct:T2_Hints_FuncsRec_	typeref:typename:T2_Hints_CloseFunc
close_contour	.\\include\\freetype\\internal\\psaux.h	/^    T1_Builder_Close_Contour_Func  close_contour;$/;"	m	struct:T1_Builder_FuncsRec_	typeref:typename:T1_Builder_Close_Contour_Func
cmap	.\\include\\freetype\\internal\\services\\svpscmap.h	/^    FT_CMapRec  cmap;$/;"	m	struct:PS_UnicodesRec_	typeref:typename:FT_CMapRec
cmap_size	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ULong              cmap_size;$/;"	m	struct:TT_FaceRec_	typeref:typename:FT_ULong
cmap_table	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Byte*              cmap_table;   \/* extracted `cmap' table *\/$/;"	m	struct:TT_FaceRec_	typeref:typename:FT_Byte *
code	.\\include\\freetype\\internal\\t1types.h	/^    FT_Byte**  code;$/;"	m	struct:CID_SubrsRec_	typeref:typename:FT_Byte **
code_first	.\\include\\freetype\\internal\\t1types.h	/^    FT_Int       code_first;$/;"	m	struct:T1_EncodingRecRec_	typeref:typename:FT_Int
code_last	.\\include\\freetype\\internal\\t1types.h	/^    FT_Int       code_last;$/;"	m	struct:T1_EncodingRecRec_	typeref:typename:FT_Int
color_ref	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ULong                color_ref;$/;"	m	struct:TT_SBit_StrikeRec_	typeref:typename:FT_ULong
color_table_offset	.\\include\\freetype\\ftwinfnt.h	/^    FT_UShort  color_table_offset;$/;"	m	struct:FT_WinFNT_HeaderRec_	typeref:typename:FT_UShort
compare	.\\include\\freetype\\internal\\fthash.h	/^    FT_Hash_CompareFunc  compare;$/;"	m	struct:FT_HashRec_	typeref:typename:FT_Hash_CompareFunc
composites	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ListRec       composites;$/;"	m	struct:TT_LoaderRec_	typeref:typename:FT_ListRec
conic_to	.\\include\\freetype\\ftimage.h	/^    FT_Outline_ConicToFunc  conic_to;$/;"	m	struct:FT_Outline_Funcs_	typeref:typename:FT_Outline_ConicToFunc
contentheader	.\\include\\curl\\curl.h	/^  struct curl_slist* contentheader; \/* list of extra headers for this form *\/$/;"	m	struct:curl_httppost	typeref:struct:curl_slist *
contentlen	.\\include\\curl\\curl.h	/^  curl_off_t contentlen;            \/* alternative length of contents$/;"	m	struct:curl_httppost	typeref:typename:curl_off_t
contents	.\\include\\curl\\curl.h	/^  char *contents;                   \/* pointer to allocated data contents *\/$/;"	m	struct:curl_httppost	typeref:typename:char *
contentslength	.\\include\\curl\\curl.h	/^  long contentslength;              \/* length of contents field, see also$/;"	m	struct:curl_httppost	typeref:typename:long
contenttype	.\\include\\curl\\curl.h	/^  char *contenttype;                \/* Content-Type *\/$/;"	m	struct:curl_httppost	typeref:typename:char *
contours	.\\include\\freetype\\ftimage.h	/^    short*      contours;        \/* the contour end points             *\/$/;"	m	struct:FT_Outline_	typeref:typename:short *
contours	.\\include\\freetype\\internal\\tttypes.h	/^    FT_UShort*  contours;    \/* contour end points          *\/$/;"	m	struct:TT_GlyphZoneRec_	typeref:typename:FT_UShort *
control_data	.\\include\\freetype\\freetype.h	/^    void*             control_data;$/;"	m	struct:FT_GlyphSlotRec_	typeref:typename:void *
control_len	.\\include\\freetype\\freetype.h	/^    long              control_len;$/;"	m	struct:FT_GlyphSlotRec_	typeref:typename:long
coords	.\\include\\freetype\\ftmm.h	/^    FT_Fixed*  coords;$/;"	m	struct:FT_Var_Named_Style_	typeref:typename:FT_Fixed *
copyright	.\\include\\freetype\\ftwinfnt.h	/^    FT_Byte    copyright[60];$/;"	m	struct:FT_WinFNT_HeaderRec_	typeref:typename:FT_Byte[60]
count	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Long    count;$/;"	m	struct:TTC_HeaderRec_	typeref:typename:FT_Long
count_offset	.\\include\\freetype\\internal\\psaux.h	/^    FT_UInt             count_offset; \/* offset of element count for    *\/$/;"	m	struct:T1_FieldRec_	typeref:typename:FT_UInt
counter	.\\include\\freetype\\internal\\pshints.h	/^    T2_Hints_CounterFunc  counter;$/;"	m	struct:T2_Hints_FuncsRec_	typeref:typename:T2_Hints_CounterFunc
coverage	.\\include\\freetype\\ftimage.h	/^    unsigned char   coverage;$/;"	m	struct:FT_Span_	typeref:typename:unsigned char
create	.\\include\\freetype\\internal\\pshints.h	/^    PSH_Globals_NewFunc       create;$/;"	m	struct:PSH_Globals_FuncsRec_	typeref:typename:PSH_Globals_NewFunc
cubic_to	.\\include\\freetype\\ftimage.h	/^    FT_Outline_CubicToFunc  cubic_to;$/;"	m	struct:FT_Outline_Funcs_	typeref:typename:FT_Outline_CubicToFunc
cur	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Vector*  cur;         \/* current point coordinates   *\/$/;"	m	struct:TT_GlyphZoneRec_	typeref:typename:FT_Vector *
cur_renderer	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_Renderer        cur_renderer;     \/* current outline renderer *\/$/;"	m	struct:FT_LibraryRec_	typeref:typename:FT_Renderer
curlArgs	.\\include\\Window.h	/^struct curlArgs {$/;"	s
curlPrintError	.\\src\\Window.cpp	/^void curlPrintError(CURLcode curlstatus){$/;"	f	typeref:typename:void
curl_TimeCond	.\\include\\curl\\curl.h	/^} curl_TimeCond;$/;"	t	typeref:enum:__anon529bf04d1203
curl_calloc_callback	.\\include\\curl\\curl.h	/^typedef void *(*curl_calloc_callback)(size_t nmemb, size_t size);$/;"	t	typeref:typename:void * (*)(size_t nmemb,size_t size)
curl_certinfo	.\\include\\curl\\curl.h	/^struct curl_certinfo {$/;"	s
curl_chunk_bgn_callback	.\\include\\curl\\curl.h	/^typedef long (*curl_chunk_bgn_callback)(const void *transfer_info,$/;"	t	typeref:typename:long (*)(const void * transfer_info,void * ptr,int remains)
curl_chunk_end_callback	.\\include\\curl\\curl.h	/^typedef long (*curl_chunk_end_callback)(void *ptr);$/;"	t	typeref:typename:long (*)(void * ptr)
curl_closepolicy	.\\include\\curl\\curl.h	/^} curl_closepolicy;$/;"	t	typeref:enum:__anon529bf04d1703
curl_closesocket_callback	.\\include\\curl\\curl.h	/^(*curl_closesocket_callback)(void *clientp, curl_socket_t item);$/;"	t	typeref:typename:int (*)(void * clientp,curl_socket_t item)
curl_conv_callback	.\\include\\curl\\curl.h	/^typedef CURLcode (*curl_conv_callback)(char *buffer, size_t length);$/;"	t	typeref:typename:CURLcode (*)(char * buffer,size_t length)
curl_debug_callback	.\\include\\curl\\curl.h	/^typedef int (*curl_debug_callback)$/;"	t	typeref:typename:int (*)(CURL * handle,curl_infotype type,char * data,size_t size,void * userptr)
curl_easy_getinfo	.\\include\\curl\\curl.h	/^#define curl_easy_getinfo(/;"	d
curl_easy_getinfo	.\\include\\curl\\typecheck-gcc.h	/^#define curl_easy_getinfo(/;"	d
curl_easy_setopt	.\\include\\curl\\curl.h	/^#define curl_easy_setopt(/;"	d
curl_easy_setopt	.\\include\\curl\\typecheck-gcc.h	/^#define curl_easy_setopt(/;"	d
curl_fileinfo	.\\include\\curl\\curl.h	/^struct curl_fileinfo {$/;"	s
curl_fnmatch_callback	.\\include\\curl\\curl.h	/^typedef int (*curl_fnmatch_callback)(void *ptr,$/;"	t	typeref:typename:int (*)(void * ptr,const char * pattern,const char * string)
curl_formget_callback	.\\include\\curl\\curl.h	/^typedef size_t (*curl_formget_callback)(void *arg, const char *buf,$/;"	t	typeref:typename:size_t (*)(void * arg,const char * buf,size_t len)
curl_forms	.\\include\\curl\\curl.h	/^struct curl_forms {$/;"	s
curl_free_callback	.\\include\\curl\\curl.h	/^typedef void (*curl_free_callback)(void *ptr);$/;"	t	typeref:typename:void (*)(void * ptr)
curl_ftpauth	.\\include\\curl\\curl.h	/^} curl_ftpauth;$/;"	t	typeref:enum:__anon529bf04d0b03
curl_ftpccc	.\\include\\curl\\curl.h	/^} curl_ftpccc;$/;"	t	typeref:enum:__anon529bf04d0a03
curl_ftpcreatedir	.\\include\\curl\\curl.h	/^} curl_ftpcreatedir;$/;"	t	typeref:enum:__anon529bf04d0c03
curl_ftpmethod	.\\include\\curl\\curl.h	/^} curl_ftpmethod;$/;"	t	typeref:enum:__anon529bf04d0d03
curl_ftpssl	.\\include\\curl\\curl.h	/^#define curl_ftpssl /;"	d
curl_httppost	.\\include\\curl\\curl.h	/^struct curl_httppost {$/;"	s
curl_infotype	.\\include\\curl\\curl.h	/^} curl_infotype;$/;"	t	typeref:enum:__anon529bf04d0603
curl_ioctl_callback	.\\include\\curl\\curl.h	/^typedef curlioerr (*curl_ioctl_callback)(CURL *handle,$/;"	t	typeref:typename:curlioerr (*)(CURL * handle,int cmd,void * clientp)
curl_khkey	.\\include\\curl\\curl.h	/^struct curl_khkey {$/;"	s
curl_khmatch	.\\include\\curl\\curl.h	/^enum curl_khmatch {$/;"	g
curl_khstat	.\\include\\curl\\curl.h	/^enum curl_khstat {$/;"	g
curl_khtype	.\\include\\curl\\curl.h	/^enum curl_khtype {$/;"	g
curl_lock_access	.\\include\\curl\\curl.h	/^} curl_lock_access;$/;"	t	typeref:enum:__anon529bf04d1903
curl_lock_data	.\\include\\curl\\curl.h	/^} curl_lock_data;$/;"	t	typeref:enum:__anon529bf04d1803
curl_lock_function	.\\include\\curl\\curl.h	/^typedef void (*curl_lock_function)(CURL *handle,$/;"	t	typeref:typename:void (*)(CURL * handle,curl_lock_data data,curl_lock_access locktype,void * userptr)
curl_malloc_callback	.\\include\\curl\\curl.h	/^typedef void *(*curl_malloc_callback)(size_t size);$/;"	t	typeref:typename:void * (*)(size_t size)
curl_multi_setopt	.\\include\\curl\\curl.h	/^#define curl_multi_setopt(/;"	d
curl_multi_setopt	.\\include\\curl\\typecheck-gcc.h	/^#define curl_multi_setopt(/;"	d
curl_multi_socket	.\\include\\curl\\multi.h	/^#define curl_multi_socket(/;"	d
curl_multi_timer_callback	.\\include\\curl\\multi.h	/^typedef int (*curl_multi_timer_callback)(CURLM *multi,    \/* multi handle *\/$/;"	t	typeref:typename:int (*)(CURLM * multi,long timeout_ms,void * userp)
curl_off_t	.\\include\\curl\\curlbuild.h	/^  typedef CURL_TYPEOF_CURL_OFF_T curl_off_t;$/;"	t	typeref:typename:CURL_TYPEOF_CURL_OFF_T
curl_opensocket_callback	.\\include\\curl\\curl.h	/^(*curl_opensocket_callback)(void *clientp,$/;"	t	typeref:typename:curl_socket_t (*)(void * clientp,curlsocktype purpose,struct curl_sockaddr * address)
curl_progress_callback	.\\include\\curl\\curl.h	/^typedef int (*curl_progress_callback)(void *clientp,$/;"	t	typeref:typename:int (*)(void * clientp,double dltotal,double dlnow,double ultotal,double ulnow)
curl_proxytype	.\\include\\curl\\curl.h	/^} curl_proxytype;  \/* this enum was added in 7.10 *\/$/;"	t	typeref:enum:__anon529bf04d0803
curl_push_callback	.\\include\\curl\\multi.h	/^typedef int (*curl_push_callback)(CURL *parent,$/;"	t	typeref:typename:int (*)(CURL * parent,CURL * easy,size_t num_headers,struct curl_pushheaders * headers,void * userp)
curl_read_callback	.\\include\\curl\\curl.h	/^typedef size_t (*curl_read_callback)(char *buffer,$/;"	t	typeref:typename:size_t (*)(char * buffer,size_t size,size_t nitems,void * instream)
curl_realloc_callback	.\\include\\curl\\curl.h	/^typedef void *(*curl_realloc_callback)(void *ptr, size_t size);$/;"	t	typeref:typename:void * (*)(void * ptr,size_t size)
curl_seek_callback	.\\include\\curl\\curl.h	/^typedef int (*curl_seek_callback)(void *instream,$/;"	t	typeref:typename:int (*)(void * instream,curl_off_t offset,int origin)
curl_share_setopt	.\\include\\curl\\curl.h	/^#define curl_share_setopt(/;"	d
curl_share_setopt	.\\include\\curl\\typecheck-gcc.h	/^#define curl_share_setopt(/;"	d
curl_slist	.\\include\\curl\\curl.h	/^struct curl_slist {$/;"	s
curl_sockaddr	.\\include\\curl\\curl.h	/^struct curl_sockaddr {$/;"	s
curl_socket_callback	.\\include\\curl\\multi.h	/^typedef int (*curl_socket_callback)(CURL *easy,      \/* easy handle *\/$/;"	t	typeref:typename:int (*)(CURL * easy,curl_socket_t s,int what,void * userp,void * socketp)
curl_socket_t	.\\include\\curl\\curl.h	/^typedef SOCKET curl_socket_t;$/;"	t	typeref:typename:SOCKET
curl_socket_t	.\\include\\curl\\curl.h	/^typedef int curl_socket_t;$/;"	t	typeref:typename:int
curl_socket_typedef	.\\include\\curl\\curl.h	/^#define curl_socket_typedef$/;"	d
curl_socklen_t	.\\include\\curl\\curlbuild.h	/^  typedef CURL_TYPEOF_CURL_SOCKLEN_T curl_socklen_t;$/;"	t	typeref:typename:CURL_TYPEOF_CURL_SOCKLEN_T
curl_sockopt_callback	.\\include\\curl\\curl.h	/^typedef int (*curl_sockopt_callback)(void *clientp,$/;"	t	typeref:typename:int (*)(void * clientp,curl_socket_t curlfd,curlsocktype purpose)
curl_sshkeycallback	.\\include\\curl\\curl.h	/^  (*curl_sshkeycallback) (CURL *easy,     \/* easy handle *\/$/;"	t	typeref:typename:int (*)(CURL * easy,const struct curl_khkey * knownkey,const struct curl_khkey * foundkey,enum curl_khmatch,void * clientp)
curl_ssl_ctx_callback	.\\include\\curl\\curl.h	/^typedef CURLcode (*curl_ssl_ctx_callback)(CURL *curl,    \/* easy handle *\/$/;"	t	typeref:typename:CURLcode (*)(CURL * curl,void * ssl_ctx,void * userptr)
curl_sslbackend	.\\include\\curl\\curl.h	/^} curl_sslbackend;$/;"	t	typeref:enum:__anon529bf04d1503
curl_strdup_callback	.\\include\\curl\\curl.h	/^typedef char *(*curl_strdup_callback)(const char *str);$/;"	t	typeref:typename:char * (*)(const char * str)
curl_strequal	.\\include\\curl\\curl.h	/^CURL_EXTERN int (curl_strequal)(const char *s1, const char *s2);$/;"	v	typeref:typename:CURL_EXTERN int ()(const char * s1,const char * s2)
curl_strnequal	.\\include\\curl\\curl.h	/^CURL_EXTERN int (curl_strnequal)(const char *s1, const char *s2, size_t n);$/;"	v	typeref:typename:CURL_EXTERN int ()(const char * s1,const char * s2,size_t n)
curl_tlssessioninfo	.\\include\\curl\\curl.h	/^struct curl_tlssessioninfo {$/;"	s
curl_unlock_function	.\\include\\curl\\curl.h	/^typedef void (*curl_unlock_function)(CURL *handle,$/;"	t	typeref:typename:void (*)(CURL * handle,curl_lock_data data,void * userptr)
curl_usessl	.\\include\\curl\\curl.h	/^} curl_usessl;$/;"	t	typeref:enum:__anon529bf04d0903
curl_version_info_data	.\\include\\curl\\curl.h	/^} curl_version_info_data;$/;"	t	typeref:struct:__anon529bf04d1d08
curl_waitfd	.\\include\\curl\\multi.h	/^struct curl_waitfd {$/;"	s
curl_write_callback	.\\include\\curl\\curl.h	/^typedef size_t (*curl_write_callback)(char *buffer,$/;"	t	typeref:typename:size_t (*)(char * buffer,size_t size,size_t nitems,void * outstream)
curl_xferinfo_callback	.\\include\\curl\\curl.h	/^typedef int (*curl_xferinfo_callback)(void *clientp,$/;"	t	typeref:typename:int (*)(void * clientp,curl_off_t dltotal,curl_off_t dlnow,curl_off_t ultotal,curl_off_t ulnow)
curlfiletype	.\\include\\curl\\curl.h	/^} curlfiletype;$/;"	t	typeref:enum:__anon529bf04d0103
curliocmd	.\\include\\curl\\curl.h	/^} curliocmd;$/;"	t	typeref:enum:__anon529bf04d0503
curlioerr	.\\include\\curl\\curl.h	/^} curlioerr;$/;"	t	typeref:enum:__anon529bf04d0403
curlsocktype	.\\include\\curl\\curl.h	/^} curlsocktype;$/;"	t	typeref:enum:__anon529bf04d0303
current	.\\include\\freetype\\internal\\ftgloadr.h	/^    FT_GlyphLoadRec  current;$/;"	m	struct:FT_GlyphLoaderRec_	typeref:typename:FT_GlyphLoadRec
current	.\\include\\freetype\\internal\\psaux.h	/^    FT_Outline*     current;$/;"	m	struct:T1_BuilderRec_	typeref:typename:FT_Outline *
cursor	.\\include\\freetype\\ftsystem.h	/^    unsigned char*       cursor;$/;"	m	struct:FT_StreamRec_	typeref:typename:unsigned char *
cursor	.\\include\\freetype\\internal\\psaux.h	/^    FT_Byte*   cursor;$/;"	m	struct:PS_ParserRec_	typeref:typename:FT_Byte *
cursor	.\\include\\freetype\\internal\\psaux.h	/^    FT_Byte*  cursor;$/;"	m	struct:T1_Decoder_ZoneRec_	typeref:typename:FT_Byte *
cursor	.\\include\\freetype\\internal\\psaux.h	/^    FT_Offset          cursor;         \/* current cursor in memory block *\/$/;"	m	struct:PS_TableRec_	typeref:typename:FT_Offset
cursor	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Byte*         cursor;$/;"	m	struct:TT_LoaderRec_	typeref:typename:FT_Byte *
custom	.\\include\\freetype\\internal\\psaux.h	/^    FT_CMap_Class  custom;$/;"	m	struct:T1_CMap_ClassesRec_	typeref:typename:FT_CMap_Class
cvt	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Short*             cvt;$/;"	m	struct:TT_FaceRec_	typeref:typename:FT_Short *
cvt_program	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Byte*              cvt_program;$/;"	m	struct:TT_FaceRec_	typeref:typename:FT_Byte *
cvt_program_size	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ULong              cvt_program_size;$/;"	m	struct:TT_FaceRec_	typeref:typename:FT_ULong
cvt_size	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ULong              cvt_size;$/;"	m	struct:TT_FaceRec_	typeref:typename:FT_ULong
data	.\\include\\curl\\curl.h	/^  char *data;$/;"	m	struct:curl_slist	typeref:typename:char *
data	.\\include\\curl\\multi.h	/^  } data;$/;"	m	struct:CURLMsg	typeref:union:CURLMsg::__anona7791d62030a
data	.\\include\\freetype\\freetype.h	/^    FT_Pointer  data;$/;"	m	struct:FT_Parameter_	typeref:typename:FT_Pointer
data	.\\include\\freetype\\fttypes.h	/^    void*                 data;$/;"	m	struct:FT_Generic_	typeref:typename:void *
data	.\\include\\freetype\\fttypes.h	/^    void*        data;$/;"	m	struct:FT_ListNodeRec_	typeref:typename:void *
data	.\\include\\freetype\\internal\\fthash.h	/^    size_t      data;$/;"	m	struct:FT_HashnodeRec_	typeref:typename:size_t
data_offset	.\\include\\freetype\\t1tables.h	/^    FT_ULong        data_offset;$/;"	m	struct:CID_FaceInfoRec_	typeref:typename:FT_ULong
debug_hooks	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_DebugHook_Func  debug_hooks[4];$/;"	m	struct:FT_LibraryRec_	typeref:typename:FT_DebugHook_Func[4]
def	.\\include\\freetype\\ftmm.h	/^    FT_Fixed    def;$/;"	m	struct:FT_Var_Axis_	typeref:typename:FT_Fixed
default_char	.\\include\\freetype\\ftwinfnt.h	/^    FT_Byte    default_char;$/;"	m	struct:FT_WinFNT_HeaderRec_	typeref:typename:FT_Byte
default_design_vector	.\\include\\freetype\\t1tables.h	/^    FT_UInt          default_design_vector[T1_MAX_MM_DESIGNS];$/;"	m	struct:PS_BlendRec_	typeref:typename:FT_UInt[]
default_weight_vector	.\\include\\freetype\\t1tables.h	/^    FT_Fixed*        default_weight_vector;$/;"	m	struct:PS_BlendRec_	typeref:typename:FT_Fixed *
degree	.\\include\\freetype\\internal\\t1types.h	/^    FT_Int    degree;$/;"	m	struct:AFM_TrackKernRec_	typeref:typename:FT_Int
delta	.\\include\\freetype\\ftimage.h	/^    FT_Pos                  delta;$/;"	m	struct:FT_Outline_Funcs_	typeref:typename:FT_Pos
descender	.\\include\\freetype\\freetype.h	/^    FT_Pos     descender;   \/* descender in 26.6 frac. pixels         *\/$/;"	m	struct:FT_Size_Metrics_	typeref:typename:FT_Pos
descender	.\\include\\freetype\\freetype.h	/^    FT_Short          descender;$/;"	m	struct:FT_FaceRec_	typeref:typename:FT_Short
descender	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Char  descender;$/;"	m	struct:TT_SBit_LineMetricsRec_	typeref:typename:FT_Char
descriptor	.\\include\\freetype\\ftsystem.h	/^    FT_StreamDesc        descriptor;$/;"	m	struct:FT_StreamRec_	typeref:typename:FT_StreamDesc
design_map	.\\include\\freetype\\t1tables.h	/^    PS_DesignMapRec  design_map[T1_MAX_MM_AXIS];$/;"	m	struct:PS_BlendRec_	typeref:typename:PS_DesignMapRec[]
design_points	.\\include\\freetype\\t1tables.h	/^    FT_Long*   design_points;$/;"	m	struct:PS_DesignMap_	typeref:typename:FT_Long *
design_pos	.\\include\\freetype\\t1tables.h	/^    FT_Fixed*        design_pos[T1_MAX_MM_DESIGNS];$/;"	m	struct:PS_BlendRec_	typeref:typename:FT_Fixed * []
destroy	.\\include\\freetype\\internal\\pshints.h	/^    PSH_Globals_DestroyFunc   destroy;$/;"	m	struct:PSH_Globals_FuncsRec_	typeref:typename:PSH_Globals_DestroyFunc
device_offset	.\\include\\freetype\\ftwinfnt.h	/^    FT_ULong   device_offset;$/;"	m	struct:FT_WinFNT_HeaderRec_	typeref:typename:FT_ULong
dict	.\\include\\freetype\\internal\\psaux.h	/^    FT_UInt             dict;         \/* where we expect it             *\/$/;"	m	struct:T1_FieldRec_	typeref:typename:FT_UInt
dir_tables	.\\include\\freetype\\internal\\tttypes.h	/^    TT_Table              dir_tables;$/;"	m	struct:TT_FaceRec_	typeref:typename:TT_Table
doblend	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Bool               doblend;$/;"	m	struct:TT_FaceRec_	typeref:typename:FT_Bool
done	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_CMap_DoneFunc       done;$/;"	m	struct:FT_CMap_ClassRec_	typeref:typename:FT_CMap_DoneFunc
done	.\\include\\freetype\\internal\\psaux.h	/^    (*done)( AFM_Parser  parser );$/;"	m	struct:AFM_Parser_FuncsRec_	typeref:typename:void (*)(AFM_Parser parser)
done	.\\include\\freetype\\internal\\psaux.h	/^    (*done)( PS_Parser  parser );$/;"	m	struct:PS_Parser_FuncsRec_	typeref:typename:void (*)(PS_Parser parser)
done	.\\include\\freetype\\internal\\psaux.h	/^    (*done)( PS_Table  table );$/;"	m	struct:PS_Table_FuncsRec_	typeref:typename:void (*)(PS_Table table)
done	.\\include\\freetype\\internal\\psaux.h	/^    (*done)( T1_Builder   builder );$/;"	m	struct:T1_Builder_FuncsRec_	typeref:typename:void (*)(T1_Builder builder)
done	.\\include\\freetype\\internal\\psaux.h	/^    (*done)( T1_Decoder  decoder );$/;"	m	struct:T1_Decoder_FuncsRec_	typeref:typename:void (*)(T1_Decoder decoder)
done_face	.\\include\\freetype\\internal\\ftdriver.h	/^    FT_Face_DoneFunc         done_face;$/;"	m	struct:FT_Driver_ClassRec_	typeref:typename:FT_Face_DoneFunc
done_face	.\\include\\freetype\\internal\\sfnt.h	/^    TT_Done_Face_Func            done_face;$/;"	m	struct:SFNT_Interface_	typeref:typename:TT_Done_Face_Func
done_global_hints	.\\include\\freetype\\internal\\autohint.h	/^    FT_AutoHinter_GlobalDoneFunc   done_global_hints;$/;"	m	struct:FT_AutoHinter_InterfaceRec_	typeref:typename:FT_AutoHinter_GlobalDoneFunc
done_size	.\\include\\freetype\\internal\\ftdriver.h	/^    FT_Size_DoneFunc         done_size;$/;"	m	struct:FT_Driver_ClassRec_	typeref:typename:FT_Size_DoneFunc
done_slot	.\\include\\freetype\\internal\\ftdriver.h	/^    FT_Slot_DoneFunc         done_slot;$/;"	m	struct:FT_Driver_ClassRec_	typeref:typename:FT_Slot_DoneFunc
drawMainMenu	.\\src\\Window.cpp	/^void drawMainMenu(GLuint* prog, int width, int height){$/;"	f	typeref:typename:void
driver	.\\include\\freetype\\freetype.h	/^    FT_Driver         driver;$/;"	m	struct:FT_FaceRec_	typeref:typename:FT_Driver
driver	.\\include\\freetype\\freetype.h	/^    FT_Module       driver;$/;"	m	struct:FT_Open_Args_	typeref:typename:FT_Module
easy_handle	.\\include\\curl\\multi.h	/^  CURL *easy_handle; \/* the handle it concerns *\/$/;"	m	struct:CURLMsg	typeref:typename:CURL *
elements	.\\include\\freetype\\internal\\psaux.h	/^    FT_Byte**          elements;       \/* addresses of table elements *\/$/;"	m	struct:PS_TableRec_	typeref:typename:FT_Byte **
encoding	.\\include\\freetype\\freetype.h	/^    FT_Encoding  encoding;$/;"	m	struct:FT_CharMapRec_	typeref:typename:FT_Encoding
encoding	.\\include\\freetype\\internal\\t1types.h	/^    T1_EncodingRec   encoding;$/;"	m	struct:T1_FontRec_	typeref:typename:T1_EncodingRec
encodingID	.\\include\\freetype\\internal\\tttypes.h	/^    FT_UShort  encodingID;$/;"	m	struct:TT_NameEntryRec_	typeref:typename:FT_UShort
encoding_id	.\\include\\freetype\\freetype.h	/^    FT_UShort    encoding_id;$/;"	m	struct:FT_CharMapRec_	typeref:typename:FT_UShort
encoding_id	.\\include\\freetype\\ftsnames.h	/^    FT_UShort  encoding_id;$/;"	m	struct:FT_SfntName_	typeref:typename:FT_UShort
encoding_type	.\\include\\freetype\\internal\\t1types.h	/^    T1_EncodingType  encoding_type;$/;"	m	struct:T1_FontRec_	typeref:typename:T1_EncodingType
end_glyph	.\\include\\freetype\\internal\\tttypes.h	/^    FT_UShort               end_glyph;$/;"	m	struct:TT_SBit_StrikeRec_	typeref:typename:FT_UShort
entry_selector	.\\include\\freetype\\internal\\tttypes.h	/^    FT_UShort  entry_selector;$/;"	m	struct:SFNT_HeaderRec_	typeref:typename:FT_UShort
error	.\\include\\freetype\\internal\\ftvalid.h	/^    FT_Error            error;       \/* error returned. 0 means success  *\/$/;"	m	struct:FT_ValidatorRec_	typeref:typename:FT_Error
error	.\\include\\freetype\\internal\\psaux.h	/^    FT_Error   error;$/;"	m	struct:PS_ParserRec_	typeref:typename:FT_Error
error_callback	.\\src\\Window.cpp	/^void error_callback(int error, const char* description){$/;"	f	typeref:typename:void
events	.\\include\\curl\\multi.h	/^  short events;$/;"	m	struct:curl_waitfd	typeref:typename:short
exec	.\\include\\freetype\\internal\\tttypes.h	/^    TT_ExecContext   exec;$/;"	m	struct:TT_LoaderRec_	typeref:typename:TT_ExecContext
expansion_factor	.\\include\\freetype\\t1tables.h	/^    FT_Fixed       expansion_factor;$/;"	m	struct:CID_FaceDictRec_	typeref:typename:FT_Fixed
expansion_factor	.\\include\\freetype\\t1tables.h	/^    FT_Fixed   expansion_factor;$/;"	m	struct:PS_PrivateRec_	typeref:typename:FT_Fixed
expert	.\\include\\freetype\\internal\\psaux.h	/^    FT_CMap_Class  expert;$/;"	m	struct:T1_CMap_ClassesRec_	typeref:typename:FT_CMap_Class
extName	.\\src\\gl_core_3_3.cpp	/^	char const *extName;$/;"	m	struct:ogl_MapTable_s	typeref:typename:char const *	file:
extVariable	.\\src\\gl_core_3_3.cpp	/^	int *extVariable;$/;"	m	struct:ogl_MapTable_s	typeref:typename:int *	file:
extensions	.\\include\\freetype\\freetype.h	/^    void*             extensions; \/* unused                         *\/$/;"	m	struct:FT_FaceRec_	typeref:typename:void *
external_leading	.\\include\\freetype\\ftwinfnt.h	/^    FT_UShort  external_leading;$/;"	m	struct:FT_WinFNT_HeaderRec_	typeref:typename:FT_UShort
extra	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Generic            extra;$/;"	m	struct:TT_FaceRec_	typeref:typename:FT_Generic
extra_points	.\\include\\freetype\\internal\\ftgloadr.h	/^    FT_Vector*   extra_points;  \/* extra points table        *\/$/;"	m	struct:FT_GlyphLoadRec_	typeref:typename:FT_Vector *
extra_points2	.\\include\\freetype\\internal\\ftgloadr.h	/^    FT_Vector*   extra_points2; \/* second extra points table *\/$/;"	m	struct:FT_GlyphLoadRec_	typeref:typename:FT_Vector *
face	.\\include\\freetype\\freetype.h	/^    FT_Face           face;      \/* parent face object              *\/$/;"	m	struct:FT_SizeRec_	typeref:typename:FT_Face
face	.\\include\\freetype\\freetype.h	/^    FT_Face           face;$/;"	m	struct:FT_GlyphSlotRec_	typeref:typename:FT_Face
face	.\\include\\freetype\\freetype.h	/^    FT_Face      face;$/;"	m	struct:FT_CharMapRec_	typeref:typename:FT_Face
face	.\\include\\freetype\\ftautoh.h	/^    FT_Face     face;$/;"	m	struct:FT_Prop_GlyphToScriptMap_	typeref:typename:FT_Face
face	.\\include\\freetype\\ftautoh.h	/^    FT_Face  face;$/;"	m	struct:FT_Prop_IncreaseXHeight_	typeref:typename:FT_Face
face	.\\include\\freetype\\internal\\psaux.h	/^    FT_Face         face;$/;"	m	struct:T1_BuilderRec_	typeref:typename:FT_Face
face	.\\include\\freetype\\internal\\tttypes.h	/^    TT_Face          face;$/;"	m	struct:TT_LoaderRec_	typeref:typename:TT_Face
face_flags	.\\include\\freetype\\freetype.h	/^    FT_Long           face_flags;$/;"	m	struct:FT_FaceRec_	typeref:typename:FT_Long
face_id	.\\include\\freetype\\ftcache.h	/^    FTC_FaceID  face_id;$/;"	m	struct:FTC_ImageTypeRec_	typeref:typename:FTC_FaceID
face_id	.\\include\\freetype\\ftcache.h	/^    FTC_FaceID  face_id;$/;"	m	struct:FTC_ScalerRec_	typeref:typename:FTC_FaceID
face_index	.\\include\\freetype\\freetype.h	/^    FT_Long           face_index;$/;"	m	struct:FT_FaceRec_	typeref:typename:FT_Long
face_name_offset	.\\include\\freetype\\ftwinfnt.h	/^    FT_ULong   face_name_offset;$/;"	m	struct:FT_WinFNT_HeaderRec_	typeref:typename:FT_ULong
face_object_size	.\\include\\freetype\\internal\\ftdriver.h	/^    FT_Long                  face_object_size;$/;"	m	struct:FT_Driver_ClassRec_	typeref:typename:FT_Long
faces_list	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_ListRec       faces_list;$/;"	m	struct:FT_DriverRec_	typeref:typename:FT_ListRec
family	.\\include\\curl\\curl.h	/^  int family;$/;"	m	struct:curl_sockaddr	typeref:typename:int
family_blues	.\\include\\freetype\\t1tables.h	/^    FT_Short   family_blues      [14];$/;"	m	struct:PS_PrivateRec_	typeref:typename:FT_Short[14]
family_name	.\\include\\freetype\\freetype.h	/^    FT_String*        family_name;$/;"	m	struct:FT_FaceRec_	typeref:typename:FT_String *
family_name	.\\include\\freetype\\t1tables.h	/^    FT_String*  family_name;$/;"	m	struct:PS_FontInfoRec_	typeref:typename:FT_String *
family_other_blues	.\\include\\freetype\\t1tables.h	/^    FT_Short   family_other_blues[10];$/;"	m	struct:PS_PrivateRec_	typeref:typename:FT_Short[10]
fd	.\\include\\curl\\multi.h	/^  curl_socket_t fd;$/;"	m	struct:curl_waitfd	typeref:typename:curl_socket_t
fd_bytes	.\\include\\freetype\\t1tables.h	/^    FT_Int          fd_bytes;$/;"	m	struct:CID_FaceInfoRec_	typeref:typename:FT_Int
features	.\\include\\curl\\curl.h	/^  int features;             \/* bitmask, see defines below *\/$/;"	m	struct:__anon529bf04d1d08	typeref:typename:int
file_size	.\\include\\freetype\\ftwinfnt.h	/^    FT_ULong   file_size;$/;"	m	struct:FT_WinFNT_HeaderRec_	typeref:typename:FT_ULong
file_type	.\\include\\freetype\\ftwinfnt.h	/^    FT_UShort  file_type;$/;"	m	struct:FT_WinFNT_HeaderRec_	typeref:typename:FT_UShort
filename	.\\include\\curl\\curl.h	/^  char *filename;$/;"	m	struct:curl_fileinfo	typeref:typename:char *
filetype	.\\include\\curl\\curl.h	/^  curlfiletype filetype;$/;"	m	struct:curl_fileinfo	typeref:typename:curlfiletype
finalizer	.\\include\\freetype\\fttypes.h	/^    FT_Generic_Finalizer  finalizer;$/;"	m	struct:FT_Generic_	typeref:typename:FT_Generic_Finalizer
findBoss	.\\src\\Window.cpp	/^char* findBoss(char* jsonData, size_t jsonDataSize){$/;"	f	typeref:typename:char *
first_char	.\\include\\freetype\\ftwinfnt.h	/^    FT_Byte    first_char;$/;"	m	struct:FT_WinFNT_HeaderRec_	typeref:typename:FT_Byte
first_glyph	.\\include\\freetype\\internal\\tttypes.h	/^    FT_UShort           first_glyph;$/;"	m	struct:TT_SBit_RangeRec_	typeref:typename:FT_UShort
first_point	.\\include\\freetype\\internal\\tttypes.h	/^    FT_UShort   first_point; \/* offset of first (#0) point  *\/$/;"	m	struct:TT_GlyphZoneRec_	typeref:typename:FT_UShort
flags	.\\include\\curl\\curl.h	/^  long flags;                       \/* as defined below *\/$/;"	m	struct:curl_httppost	typeref:typename:long
flags	.\\include\\curl\\curl.h	/^  unsigned int flags;$/;"	m	struct:curl_fileinfo	typeref:typename:unsigned int
flags	.\\include\\freetype\\freetype.h	/^    FT_UInt         flags;$/;"	m	struct:FT_Open_Args_	typeref:typename:FT_UInt
flags	.\\include\\freetype\\ftcache.h	/^    FT_Int32    flags;$/;"	m	struct:FTC_ImageTypeRec_	typeref:typename:FT_Int32
flags	.\\include\\freetype\\ftimage.h	/^    int                     flags;$/;"	m	struct:FT_Raster_Params_	typeref:typename:int
flags	.\\include\\freetype\\ftimage.h	/^    int         flags;           \/* outline masks                      *\/$/;"	m	struct:FT_Outline_	typeref:typename:int
flags	.\\include\\freetype\\ftwinfnt.h	/^    FT_ULong   flags;$/;"	m	struct:FT_WinFNT_HeaderRec_	typeref:typename:FT_ULong
flags	.\\include\\freetype\\internal\\ftgloadr.h	/^    FT_UShort  flags;$/;"	m	struct:FT_SubGlyphRec_	typeref:typename:FT_UShort
flags	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_UInt         flags;$/;"	m	struct:FT_Slot_InternalRec_	typeref:typename:FT_UInt
flags	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Char                 flags;$/;"	m	struct:TT_SBit_StrikeRec_	typeref:typename:FT_Char
flattenStringArray	.\\src\\Window.cpp	/^static char* flattenStringArray(const char** strArray,$/;"	f	typeref:typename:char *	file:
flavor	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ULong   flavor;$/;"	m	struct:WOFF_HeaderRec_	typeref:typename:FT_ULong
flex_state	.\\include\\freetype\\internal\\psaux.h	/^    FT_Int               flex_state;$/;"	m	struct:T1_DecoderRec_	typeref:typename:FT_Int
flex_vectors	.\\include\\freetype\\internal\\psaux.h	/^    FT_Vector            flex_vectors[7];$/;"	m	struct:T1_DecoderRec_	typeref:typename:FT_Vector[7]
fontNames	.\\src\\Window.cpp	/^static const char *fontNames[] = {"PTS55F.ttf", "PTS75F.ttf"};$/;"	v	typeref:typename:const char * []	file:
fontSizes	.\\src\\Window.cpp	/^int fontSizes[] = {36, 18, 16, 15, 14};$/;"	v	typeref:typename:int[]
font_bbox	.\\include\\freetype\\internal\\t1types.h	/^    FT_BBox          font_bbox;$/;"	m	struct:T1_FontRec_	typeref:typename:FT_BBox
font_bbox	.\\include\\freetype\\t1tables.h	/^    FT_BBox         font_bbox;$/;"	m	struct:CID_FaceInfoRec_	typeref:typename:FT_BBox
font_dicts	.\\include\\freetype\\t1tables.h	/^    CID_FaceDict    font_dicts;$/;"	m	struct:CID_FaceInfoRec_	typeref:typename:CID_FaceDict
font_extra	.\\include\\freetype\\internal\\t1types.h	/^    PS_FontExtraRec  font_extra;        \/* font info extra fields *\/$/;"	m	struct:T1_FontRec_	typeref:typename:PS_FontExtraRec
font_extra	.\\include\\freetype\\internal\\t1types.h	/^    PS_FontExtraRec  font_extra;$/;"	m	struct:CID_FaceRec_	typeref:typename:PS_FontExtraRec
font_id	.\\include\\freetype\\internal\\t1types.h	/^    FT_Long          font_id;$/;"	m	struct:T1_FontRec_	typeref:typename:FT_Long
font_info	.\\include\\freetype\\internal\\t1types.h	/^    PS_FontInfoRec   font_info;         \/* font info dictionary   *\/$/;"	m	struct:T1_FontRec_	typeref:typename:PS_FontInfoRec
font_info	.\\include\\freetype\\t1tables.h	/^    PS_FontInfoRec  font_info;$/;"	m	struct:CID_FaceInfoRec_	typeref:typename:PS_FontInfoRec
font_infos	.\\include\\freetype\\t1tables.h	/^    PS_FontInfo      font_infos[T1_MAX_MM_DESIGNS + 1];$/;"	m	struct:PS_BlendRec_	typeref:typename:PS_FontInfo[]
font_matrix	.\\include\\freetype\\internal\\psaux.h	/^    FT_Matrix            font_matrix;$/;"	m	struct:T1_DecoderRec_	typeref:typename:FT_Matrix
font_matrix	.\\include\\freetype\\internal\\t1types.h	/^    FT_Matrix        font_matrix;$/;"	m	struct:T1_FontRec_	typeref:typename:FT_Matrix
font_matrix	.\\include\\freetype\\t1tables.h	/^    FT_Matrix      font_matrix;$/;"	m	struct:CID_FaceDictRec_	typeref:typename:FT_Matrix
font_name	.\\include\\freetype\\internal\\t1types.h	/^    FT_String*       font_name;         \/* top-level dictionary   *\/$/;"	m	struct:T1_FontRec_	typeref:typename:FT_String *
font_offset	.\\include\\freetype\\internal\\psaux.h	/^    FT_Vector            font_offset;$/;"	m	struct:T1_DecoderRec_	typeref:typename:FT_Vector
font_offset	.\\include\\freetype\\internal\\t1types.h	/^    FT_Vector        font_offset;$/;"	m	struct:T1_FontRec_	typeref:typename:FT_Vector
font_offset	.\\include\\freetype\\t1tables.h	/^    FT_Vector      font_offset;$/;"	m	struct:CID_FaceDictRec_	typeref:typename:FT_Vector
font_program	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Byte*              font_program;$/;"	m	struct:TT_FaceRec_	typeref:typename:FT_Byte *
font_program_size	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ULong              font_program_size;$/;"	m	struct:TT_FaceRec_	typeref:typename:FT_ULong
font_type	.\\include\\freetype\\internal\\t1types.h	/^    FT_Byte          font_type;$/;"	m	struct:T1_FontRec_	typeref:typename:FT_Byte
font_type	.\\include\\freetype\\t1tables.h	/^    FT_Byte        font_type;$/;"	m	struct:CID_FaceDictRec_	typeref:typename:FT_Byte
force_bold	.\\include\\freetype\\t1tables.h	/^    FT_Bool    force_bold;$/;"	m	struct:PS_PrivateRec_	typeref:typename:FT_Bool
forcebold_threshold	.\\include\\freetype\\t1tables.h	/^    FT_Fixed       forcebold_threshold;$/;"	m	struct:CID_FaceDictRec_	typeref:typename:FT_Fixed
forget_glyph_frame	.\\include\\freetype\\internal\\tttypes.h	/^    TT_Loader_EndGlyphFunc    forget_glyph_frame;$/;"	m	struct:TT_FaceRec_	typeref:typename:TT_Loader_EndGlyphFunc
format	.\\include\\freetype\\freetype.h	/^    FT_Glyph_Format   format;$/;"	m	struct:FT_GlyphSlotRec_	typeref:typename:FT_Glyph_Format
format	.\\include\\freetype\\ftcache.h	/^    FT_Byte   format;$/;"	m	struct:FTC_SBitRec_	typeref:typename:FT_Byte
format	.\\include\\freetype\\ftglyph.h	/^    FT_Glyph_Format        format;$/;"	m	struct:FT_GlyphRec_	typeref:typename:FT_Glyph_Format
format	.\\include\\freetype\\internal\\services\\svttcmap.h	/^    FT_Long   format;$/;"	m	struct:TT_CMapInfo_	typeref:typename:FT_Long
format	.\\include\\freetype\\internal\\tttypes.h	/^    FT_UShort         format;$/;"	m	struct:TT_NameTableRec_	typeref:typename:FT_UShort
format_20	.\\include\\freetype\\internal\\tttypes.h	/^      TT_Post_20Rec  format_20;$/;"	m	union:TT_Post_NamesRec_::__anon5c6118fb010a	typeref:typename:TT_Post_20Rec
format_25	.\\include\\freetype\\internal\\tttypes.h	/^      TT_Post_25Rec  format_25;$/;"	m	union:TT_Post_NamesRec_::__anon5c6118fb010a	typeref:typename:TT_Post_25Rec
format_tag	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ULong              format_tag;$/;"	m	struct:TT_FaceRec_	typeref:typename:FT_ULong
format_tag	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ULong   format_tag;$/;"	m	struct:SFNT_HeaderRec_	typeref:typename:FT_ULong
formattedText	.\\include\\Window.h	/^    char *formattedText; \/\/ Formatted in main thread$/;"	m	struct:raidBuffer	typeref:typename:char *
fragShdr	.\\src\\Window.cpp	/^const GLchar* fragShdr =$/;"	v	typeref:typename:const GLchar *
free	.\\include\\freetype\\ftsystem.h	/^    FT_Free_Func     free;$/;"	m	struct:FT_MemoryRec_	typeref:typename:FT_Free_Func
free_eblc	.\\include\\freetype\\internal\\sfnt.h	/^    TT_Free_Table_Func           free_eblc;$/;"	m	struct:SFNT_Interface_	typeref:typename:TT_Free_Table_Func
free_glyph_data	.\\include\\freetype\\ftincrem.h	/^    FT_Incremental_FreeGlyphDataFunc    free_glyph_data;$/;"	m	struct:FT_Incremental_FuncsRec_	typeref:typename:FT_Incremental_FreeGlyphDataFunc
free_name	.\\include\\freetype\\internal\\sfnt.h	/^    TT_Free_Table_Func           free_name;$/;"	m	struct:SFNT_Interface_	typeref:typename:TT_Free_Table_Func
free_psnames	.\\include\\freetype\\internal\\sfnt.h	/^    TT_Free_Table_Func           free_psnames;$/;"	m	struct:SFNT_Interface_	typeref:typename:TT_Free_Table_Func
fsSelection	.\\include\\freetype\\tttables.h	/^    FT_UShort  fsSelection;$/;"	m	struct:TT_OS2_	typeref:typename:FT_UShort
fsType	.\\include\\freetype\\tttables.h	/^    FT_UShort  fsType;$/;"	m	struct:TT_OS2_	typeref:typename:FT_UShort
fs_type	.\\include\\freetype\\internal\\t1types.h	/^    FT_UShort  fs_type;$/;"	m	struct:PS_FontExtraRec_	typeref:typename:FT_UShort
ft_atol	.\\include\\freetype\\config\\ftstdlib.h	/^#define ft_atol /;"	d
ft_encoding_adobe_custom	.\\include\\freetype\\freetype.h	/^#define ft_encoding_adobe_custom /;"	d
ft_encoding_adobe_expert	.\\include\\freetype\\freetype.h	/^#define ft_encoding_adobe_expert /;"	d
ft_encoding_adobe_standard	.\\include\\freetype\\freetype.h	/^#define ft_encoding_adobe_standard /;"	d
ft_encoding_apple_roman	.\\include\\freetype\\freetype.h	/^#define ft_encoding_apple_roman /;"	d
ft_encoding_big5	.\\include\\freetype\\freetype.h	/^#define ft_encoding_big5 /;"	d
ft_encoding_gb2312	.\\include\\freetype\\freetype.h	/^#define ft_encoding_gb2312 /;"	d
ft_encoding_johab	.\\include\\freetype\\freetype.h	/^#define ft_encoding_johab /;"	d
ft_encoding_latin_1	.\\include\\freetype\\freetype.h	/^#define ft_encoding_latin_1 /;"	d
ft_encoding_latin_2	.\\include\\freetype\\freetype.h	/^#define ft_encoding_latin_2 /;"	d
ft_encoding_none	.\\include\\freetype\\freetype.h	/^#define ft_encoding_none /;"	d
ft_encoding_sjis	.\\include\\freetype\\freetype.h	/^#define ft_encoding_sjis /;"	d
ft_encoding_symbol	.\\include\\freetype\\freetype.h	/^#define ft_encoding_symbol /;"	d
ft_encoding_unicode	.\\include\\freetype\\freetype.h	/^#define ft_encoding_unicode /;"	d
ft_encoding_wansung	.\\include\\freetype\\freetype.h	/^#define ft_encoding_wansung /;"	d
ft_fclose	.\\include\\freetype\\config\\ftstdlib.h	/^#define ft_fclose /;"	d
ft_fopen	.\\include\\freetype\\config\\ftstdlib.h	/^#define ft_fopen /;"	d
ft_frame_byte	.\\include\\freetype\\internal\\ftstream.h	/^    ft_frame_byte      = FT_MAKE_FRAME_OP( FT_FRAME_OP_BYTE,  0, 0 ),$/;"	e	enum:FT_Frame_Op_
ft_frame_bytes	.\\include\\freetype\\internal\\ftstream.h	/^    ft_frame_bytes     = FT_MAKE_FRAME_OP( FT_FRAME_OP_BYTES, 0, 0 ),$/;"	e	enum:FT_Frame_Op_
ft_frame_end	.\\include\\freetype\\internal\\ftstream.h	/^    ft_frame_end       = 0,$/;"	e	enum:FT_Frame_Op_
ft_frame_long_be	.\\include\\freetype\\internal\\ftstream.h	/^    ft_frame_long_be   = FT_MAKE_FRAME_OP( FT_FRAME_OP_LONG, 0, 1 ),$/;"	e	enum:FT_Frame_Op_
ft_frame_long_le	.\\include\\freetype\\internal\\ftstream.h	/^    ft_frame_long_le   = FT_MAKE_FRAME_OP( FT_FRAME_OP_LONG, 1, 1 ),$/;"	e	enum:FT_Frame_Op_
ft_frame_off3_be	.\\include\\freetype\\internal\\ftstream.h	/^    ft_frame_off3_be   = FT_MAKE_FRAME_OP( FT_FRAME_OP_OFF3, 0, 1 ),$/;"	e	enum:FT_Frame_Op_
ft_frame_off3_le	.\\include\\freetype\\internal\\ftstream.h	/^    ft_frame_off3_le   = FT_MAKE_FRAME_OP( FT_FRAME_OP_OFF3, 1, 1 ),$/;"	e	enum:FT_Frame_Op_
ft_frame_schar	.\\include\\freetype\\internal\\ftstream.h	/^    ft_frame_schar     = FT_MAKE_FRAME_OP( FT_FRAME_OP_BYTE,  0, 1 ),$/;"	e	enum:FT_Frame_Op_
ft_frame_short_be	.\\include\\freetype\\internal\\ftstream.h	/^    ft_frame_short_be  = FT_MAKE_FRAME_OP( FT_FRAME_OP_SHORT, 0, 1 ),$/;"	e	enum:FT_Frame_Op_
ft_frame_short_le	.\\include\\freetype\\internal\\ftstream.h	/^    ft_frame_short_le  = FT_MAKE_FRAME_OP( FT_FRAME_OP_SHORT, 1, 1 ),$/;"	e	enum:FT_Frame_Op_
ft_frame_skip	.\\include\\freetype\\internal\\ftstream.h	/^    ft_frame_skip      = FT_MAKE_FRAME_OP( FT_FRAME_OP_BYTES, 0, 1 )$/;"	e	enum:FT_Frame_Op_
ft_frame_start	.\\include\\freetype\\internal\\ftstream.h	/^    ft_frame_start     = FT_MAKE_FRAME_OP( FT_FRAME_OP_START, 0, 0 ),$/;"	e	enum:FT_Frame_Op_
ft_frame_ulong_be	.\\include\\freetype\\internal\\ftstream.h	/^    ft_frame_ulong_be  = FT_MAKE_FRAME_OP( FT_FRAME_OP_LONG, 0, 0 ),$/;"	e	enum:FT_Frame_Op_
ft_frame_ulong_le	.\\include\\freetype\\internal\\ftstream.h	/^    ft_frame_ulong_le  = FT_MAKE_FRAME_OP( FT_FRAME_OP_LONG, 1, 0 ),$/;"	e	enum:FT_Frame_Op_
ft_frame_uoff3_be	.\\include\\freetype\\internal\\ftstream.h	/^    ft_frame_uoff3_be  = FT_MAKE_FRAME_OP( FT_FRAME_OP_OFF3, 0, 0 ),$/;"	e	enum:FT_Frame_Op_
ft_frame_uoff3_le	.\\include\\freetype\\internal\\ftstream.h	/^    ft_frame_uoff3_le  = FT_MAKE_FRAME_OP( FT_FRAME_OP_OFF3, 1, 0 ),$/;"	e	enum:FT_Frame_Op_
ft_frame_ushort_be	.\\include\\freetype\\internal\\ftstream.h	/^    ft_frame_ushort_be = FT_MAKE_FRAME_OP( FT_FRAME_OP_SHORT, 0, 0 ),$/;"	e	enum:FT_Frame_Op_
ft_frame_ushort_le	.\\include\\freetype\\internal\\ftstream.h	/^    ft_frame_ushort_le = FT_MAKE_FRAME_OP( FT_FRAME_OP_SHORT, 1, 0 ),$/;"	e	enum:FT_Frame_Op_
ft_fread	.\\include\\freetype\\config\\ftstdlib.h	/^#define ft_fread /;"	d
ft_fseek	.\\include\\freetype\\config\\ftstdlib.h	/^#define ft_fseek /;"	d
ft_ftell	.\\include\\freetype\\config\\ftstdlib.h	/^#define ft_ftell /;"	d
ft_glyph_bbox_gridfit	.\\include\\freetype\\ftglyph.h	/^#define ft_glyph_bbox_gridfit /;"	d
ft_glyph_bbox_pixels	.\\include\\freetype\\ftglyph.h	/^#define ft_glyph_bbox_pixels /;"	d
ft_glyph_bbox_subpixels	.\\include\\freetype\\ftglyph.h	/^#define ft_glyph_bbox_subpixels /;"	d
ft_glyph_bbox_truncate	.\\include\\freetype\\ftglyph.h	/^#define ft_glyph_bbox_truncate /;"	d
ft_glyph_bbox_unscaled	.\\include\\freetype\\ftglyph.h	/^#define ft_glyph_bbox_unscaled /;"	d
ft_glyph_format_bitmap	.\\include\\freetype\\ftimage.h	/^#define ft_glyph_format_bitmap /;"	d
ft_glyph_format_composite	.\\include\\freetype\\ftimage.h	/^#define ft_glyph_format_composite /;"	d
ft_glyph_format_none	.\\include\\freetype\\ftimage.h	/^#define ft_glyph_format_none /;"	d
ft_glyph_format_outline	.\\include\\freetype\\ftimage.h	/^#define ft_glyph_format_outline /;"	d
ft_glyph_format_plotter	.\\include\\freetype\\ftimage.h	/^#define ft_glyph_format_plotter /;"	d
ft_hash_num_free	.\\include\\freetype\\internal\\fthash.h	/^#define ft_hash_num_free /;"	d
ft_isalnum	.\\include\\freetype\\internal\\ftobjs.h	/^#define  ft_isalnum(/;"	d
ft_isalpha	.\\include\\freetype\\internal\\ftobjs.h	/^#define  ft_isalpha(/;"	d
ft_isdigit	.\\include\\freetype\\internal\\ftobjs.h	/^#define  ft_isdigit(/;"	d
ft_islower	.\\include\\freetype\\internal\\ftobjs.h	/^#define  ft_islower(/;"	d
ft_isupper	.\\include\\freetype\\internal\\ftobjs.h	/^#define  ft_isupper(/;"	d
ft_isxdigit	.\\include\\freetype\\internal\\ftobjs.h	/^#define  ft_isxdigit(/;"	d
ft_jmp_buf	.\\include\\freetype\\config\\ftstdlib.h	/^#define ft_jmp_buf /;"	d
ft_kerning_default	.\\include\\freetype\\freetype.h	/^#define ft_kerning_default /;"	d
ft_kerning_unfitted	.\\include\\freetype\\freetype.h	/^#define ft_kerning_unfitted /;"	d
ft_kerning_unscaled	.\\include\\freetype\\freetype.h	/^#define ft_kerning_unscaled /;"	d
ft_longjmp	.\\include\\freetype\\config\\ftstdlib.h	/^#define ft_longjmp /;"	d
ft_memchr	.\\include\\freetype\\config\\ftstdlib.h	/^#define ft_memchr /;"	d
ft_memcmp	.\\include\\freetype\\config\\ftstdlib.h	/^#define ft_memcmp /;"	d
ft_memcpy	.\\include\\freetype\\config\\ftstdlib.h	/^#define ft_memcpy /;"	d
ft_memmove	.\\include\\freetype\\config\\ftstdlib.h	/^#define ft_memmove /;"	d
ft_memset	.\\include\\freetype\\config\\ftstdlib.h	/^#define ft_memset /;"	d
ft_module_driver_has_hinter	.\\include\\freetype\\ftmodapi.h	/^#define ft_module_driver_has_hinter /;"	d
ft_module_driver_hints_lightly	.\\include\\freetype\\ftmodapi.h	/^#define ft_module_driver_hints_lightly /;"	d
ft_module_driver_no_outlines	.\\include\\freetype\\ftmodapi.h	/^#define ft_module_driver_no_outlines /;"	d
ft_module_driver_scalable	.\\include\\freetype\\ftmodapi.h	/^#define ft_module_driver_scalable /;"	d
ft_module_font_driver	.\\include\\freetype\\ftmodapi.h	/^#define ft_module_font_driver /;"	d
ft_module_hinter	.\\include\\freetype\\ftmodapi.h	/^#define ft_module_hinter /;"	d
ft_module_renderer	.\\include\\freetype\\ftmodapi.h	/^#define ft_module_renderer /;"	d
ft_module_styler	.\\include\\freetype\\ftmodapi.h	/^#define ft_module_styler /;"	d
ft_open_driver	.\\include\\freetype\\freetype.h	/^#define ft_open_driver /;"	d
ft_open_memory	.\\include\\freetype\\freetype.h	/^#define ft_open_memory /;"	d
ft_open_params	.\\include\\freetype\\freetype.h	/^#define ft_open_params /;"	d
ft_open_pathname	.\\include\\freetype\\freetype.h	/^#define ft_open_pathname /;"	d
ft_open_stream	.\\include\\freetype\\freetype.h	/^#define ft_open_stream /;"	d
ft_outline_even_odd_fill	.\\include\\freetype\\ftimage.h	/^#define ft_outline_even_odd_fill /;"	d
ft_outline_high_precision	.\\include\\freetype\\ftimage.h	/^#define ft_outline_high_precision /;"	d
ft_outline_ignore_dropouts	.\\include\\freetype\\ftimage.h	/^#define ft_outline_ignore_dropouts /;"	d
ft_outline_none	.\\include\\freetype\\ftimage.h	/^#define ft_outline_none /;"	d
ft_outline_owner	.\\include\\freetype\\ftimage.h	/^#define ft_outline_owner /;"	d
ft_outline_reverse_fill	.\\include\\freetype\\ftimage.h	/^#define ft_outline_reverse_fill /;"	d
ft_outline_single_pass	.\\include\\freetype\\ftimage.h	/^#define ft_outline_single_pass /;"	d
ft_pixel_mode_grays	.\\include\\freetype\\ftimage.h	/^#define ft_pixel_mode_grays /;"	d
ft_pixel_mode_mono	.\\include\\freetype\\ftimage.h	/^#define ft_pixel_mode_mono /;"	d
ft_pixel_mode_none	.\\include\\freetype\\ftimage.h	/^#define ft_pixel_mode_none /;"	d
ft_pixel_mode_pal2	.\\include\\freetype\\ftimage.h	/^#define ft_pixel_mode_pal2 /;"	d
ft_pixel_mode_pal4	.\\include\\freetype\\ftimage.h	/^#define ft_pixel_mode_pal4 /;"	d
ft_ptrdiff_t	.\\include\\freetype\\config\\ftstdlib.h	/^#define ft_ptrdiff_t /;"	d
ft_qsort	.\\include\\freetype\\config\\ftstdlib.h	/^#define ft_qsort /;"	d
ft_raccess_guess_func	.\\include\\freetype\\internal\\ftrfork.h	/^  (*ft_raccess_guess_func)( FT_Library  library,$/;"	t	typeref:typename:FT_Error (*)(FT_Library library,FT_Stream stream,char * base_file_name,char ** result_file_name,FT_Long * result_offset)
ft_raccess_guess_rec	.\\include\\freetype\\internal\\ftrfork.h	/^  } ft_raccess_guess_rec;$/;"	t	typeref:struct:ft_raccess_guess_rec_
ft_raccess_guess_rec_	.\\include\\freetype\\internal\\ftrfork.h	/^  typedef struct ft_raccess_guess_rec_ {$/;"	s
ft_raster_flag_aa	.\\include\\freetype\\ftimage.h	/^#define ft_raster_flag_aa /;"	d
ft_raster_flag_clip	.\\include\\freetype\\ftimage.h	/^#define ft_raster_flag_clip /;"	d
ft_raster_flag_default	.\\include\\freetype\\ftimage.h	/^#define ft_raster_flag_default /;"	d
ft_raster_flag_direct	.\\include\\freetype\\ftimage.h	/^#define ft_raster_flag_direct /;"	d
ft_render_mode_mono	.\\include\\freetype\\freetype.h	/^#define ft_render_mode_mono /;"	d
ft_render_mode_normal	.\\include\\freetype\\freetype.h	/^#define ft_render_mode_normal /;"	d
ft_scalloc	.\\include\\freetype\\config\\ftstdlib.h	/^#define ft_scalloc /;"	d
ft_setjmp	.\\include\\freetype\\config\\ftstdlib.h	/^#define ft_setjmp(/;"	d
ft_sfnt_head	.\\include\\freetype\\tttables.h	/^#define ft_sfnt_head /;"	d
ft_sfnt_hhea	.\\include\\freetype\\tttables.h	/^#define ft_sfnt_hhea /;"	d
ft_sfnt_maxp	.\\include\\freetype\\tttables.h	/^#define ft_sfnt_maxp /;"	d
ft_sfnt_os2	.\\include\\freetype\\tttables.h	/^#define ft_sfnt_os2 /;"	d
ft_sfnt_pclt	.\\include\\freetype\\tttables.h	/^#define ft_sfnt_pclt /;"	d
ft_sfnt_post	.\\include\\freetype\\tttables.h	/^#define ft_sfnt_post /;"	d
ft_sfnt_vhea	.\\include\\freetype\\tttables.h	/^#define ft_sfnt_vhea /;"	d
ft_sfree	.\\include\\freetype\\config\\ftstdlib.h	/^#define ft_sfree /;"	d
ft_smalloc	.\\include\\freetype\\config\\ftstdlib.h	/^#define ft_smalloc /;"	d
ft_sprintf	.\\include\\freetype\\config\\ftstdlib.h	/^#define ft_sprintf /;"	d
ft_srealloc	.\\include\\freetype\\config\\ftstdlib.h	/^#define ft_srealloc /;"	d
ft_strcat	.\\include\\freetype\\config\\ftstdlib.h	/^#define ft_strcat /;"	d
ft_strcmp	.\\include\\freetype\\config\\ftstdlib.h	/^#define ft_strcmp /;"	d
ft_strcpy	.\\include\\freetype\\config\\ftstdlib.h	/^#define ft_strcpy /;"	d
ft_strlen	.\\include\\freetype\\config\\ftstdlib.h	/^#define ft_strlen /;"	d
ft_strncmp	.\\include\\freetype\\config\\ftstdlib.h	/^#define ft_strncmp /;"	d
ft_strncpy	.\\include\\freetype\\config\\ftstdlib.h	/^#define ft_strncpy /;"	d
ft_strrchr	.\\include\\freetype\\config\\ftstdlib.h	/^#define ft_strrchr /;"	d
ft_strstr	.\\include\\freetype\\config\\ftstdlib.h	/^#define ft_strstr /;"	d
full_name	.\\include\\freetype\\t1tables.h	/^    FT_String*  full_name;$/;"	m	struct:PS_FontInfoRec_	typeref:typename:FT_String *
func	.\\include\\freetype\\internal\\ftrfork.h	/^    ft_raccess_guess_func  func;$/;"	m	struct:ft_raccess_guess_rec_	typeref:typename:ft_raccess_guess_func
funcs	.\\include\\freetype\\ftincrem.h	/^    const FT_Incremental_FuncsRec*  funcs;$/;"	m	struct:FT_Incremental_InterfaceRec_	typeref:typename:const FT_Incremental_FuncsRec *
funcs	.\\include\\freetype\\internal\\psaux.h	/^    PS_Parser_FuncsRec  funcs;$/;"	m	struct:PS_ParserRec_	typeref:typename:PS_Parser_FuncsRec
funcs	.\\include\\freetype\\internal\\psaux.h	/^    PS_Table_FuncsRec  funcs;$/;"	m	struct:PS_TableRec_	typeref:typename:PS_Table_FuncsRec
funcs	.\\include\\freetype\\internal\\psaux.h	/^    T1_Builder_FuncsRec  funcs;$/;"	m	struct:T1_BuilderRec_	typeref:typename:T1_Builder_FuncsRec
funcs	.\\include\\freetype\\internal\\psaux.h	/^    T1_Decoder_FuncsRec  funcs;$/;"	m	struct:T1_DecoderRec_	typeref:typename:T1_Decoder_FuncsRec
g_mappingTable	.\\src\\gl_core_3_3.cpp	/^static ogl_MapTable g_mappingTable[3] = $/;"	v	typeref:typename:ogl_MapTable[3]	file:
gasp	.\\include\\freetype\\internal\\tttypes.h	/^    TT_GaspRec            gasp;                 \/* the `gasp' table *\/$/;"	m	struct:TT_FaceRec_	typeref:typename:TT_GaspRec
gaspFlag	.\\include\\freetype\\internal\\tttypes.h	/^    FT_UShort  gaspFlag;$/;"	m	struct:TT_GaspRangeRec_	typeref:typename:FT_UShort
gaspRanges	.\\include\\freetype\\internal\\tttypes.h	/^    TT_GaspRange  gaspRanges;$/;"	m	struct:TT_Gasp_	typeref:typename:TT_GaspRange
gd_bytes	.\\include\\freetype\\t1tables.h	/^    FT_Int          gd_bytes;$/;"	m	struct:CID_FaceInfoRec_	typeref:typename:FT_Int
genFontTextures	.\\src\\Window.cpp	/^static int genFontTextures(){$/;"	f	typeref:typename:int	file:
generic	.\\include\\freetype\\freetype.h	/^    FT_Generic        generic;   \/* generic pointer for client uses *\/$/;"	m	struct:FT_SizeRec_	typeref:typename:FT_Generic
generic	.\\include\\freetype\\freetype.h	/^    FT_Generic        generic;$/;"	m	struct:FT_FaceRec_	typeref:typename:FT_Generic
generic	.\\include\\freetype\\freetype.h	/^    FT_Generic        generic;$/;"	m	struct:FT_GlyphSlotRec_	typeref:typename:FT_Generic
get_advances	.\\include\\freetype\\internal\\ftdriver.h	/^    FT_Face_GetAdvancesFunc  get_advances;$/;"	m	struct:FT_Driver_ClassRec_	typeref:typename:FT_Face_GetAdvancesFunc
get_global_hints	.\\include\\freetype\\internal\\autohint.h	/^    FT_AutoHinter_GlobalGetFunc    get_global_hints;$/;"	m	struct:FT_AutoHinter_InterfaceRec_	typeref:typename:FT_AutoHinter_GlobalGetFunc
get_globals_funcs	.\\include\\freetype\\internal\\pshints.h	/^    PSH_Globals_Funcs  (*get_globals_funcs)( FT_Module  module );$/;"	m	struct:PSHinter_Interface_	typeref:typename:PSH_Globals_Funcs (*)(FT_Module module)
get_glyph_cbox	.\\include\\freetype\\ftrender.h	/^    FT_Renderer_GetCBoxFunc    get_glyph_cbox;$/;"	m	struct:FT_Renderer_Class_	typeref:typename:FT_Renderer_GetCBoxFunc
get_glyph_data	.\\include\\freetype\\ftincrem.h	/^    FT_Incremental_GetGlyphDataFunc     get_glyph_data;$/;"	m	struct:FT_Incremental_FuncsRec_	typeref:typename:FT_Incremental_GetGlyphDataFunc
get_glyph_metrics	.\\include\\freetype\\ftincrem.h	/^    FT_Incremental_GetGlyphMetricsFunc  get_glyph_metrics;$/;"	m	struct:FT_Incremental_FuncsRec_	typeref:typename:FT_Incremental_GetGlyphMetricsFunc
get_index	.\\include\\freetype\\internal\\psaux.h	/^    (*get_index)( const char*  name,$/;"	m	struct:AFM_ParserRec_	typeref:typename:FT_Int (*)(const char * name,FT_Offset len,void * user_data)
get_interface	.\\include\\freetype\\ftmodapi.h	/^    FT_Module_Requester    get_interface;$/;"	m	struct:FT_Module_Class_	typeref:typename:FT_Module_Requester
get_interface	.\\include\\freetype\\internal\\sfnt.h	/^    FT_Module_Requester          get_interface;$/;"	m	struct:SFNT_Interface_	typeref:typename:FT_Module_Requester
get_kerning	.\\include\\freetype\\internal\\ftdriver.h	/^    FT_Face_GetKerningFunc   get_kerning;$/;"	m	struct:FT_Driver_ClassRec_	typeref:typename:FT_Face_GetKerningFunc
get_kerning	.\\include\\freetype\\internal\\sfnt.h	/^    TT_Face_GetKerningFunc       get_kerning;$/;"	m	struct:SFNT_Interface_	typeref:typename:TT_Face_GetKerningFunc
get_metrics	.\\include\\freetype\\internal\\sfnt.h	/^    TT_Get_Metrics_Func          get_metrics;$/;"	m	struct:SFNT_Interface_	typeref:typename:TT_Get_Metrics_Func
get_name	.\\include\\freetype\\internal\\sfnt.h	/^    TT_Get_Name_Func             get_name;$/;"	m	struct:SFNT_Interface_	typeref:typename:TT_Get_Name_Func
get_psname	.\\include\\freetype\\internal\\sfnt.h	/^    TT_Get_PS_Name_Func          get_psname;$/;"	m	struct:SFNT_Interface_	typeref:typename:TT_Get_PS_Name_Func
get_t1_funcs	.\\include\\freetype\\internal\\pshints.h	/^    T1_Hints_Funcs     (*get_t1_funcs)     ( FT_Module  module );$/;"	m	struct:PSHinter_Interface_	typeref:typename:T1_Hints_Funcs (*)(FT_Module module)
get_t2_funcs	.\\include\\freetype\\internal\\pshints.h	/^    T2_Hints_Funcs     (*get_t2_funcs)     ( FT_Module  module );$/;"	m	struct:PSHinter_Interface_	typeref:typename:T2_Hints_Funcs (*)(FT_Module module)
gid	.\\include\\curl\\curl.h	/^  int gid;$/;"	m	struct:curl_fileinfo	typeref:typename:int
glActiveTexture	.\\include\\gl_core_3_3.h	/^		#define glActiveTexture /;"	d
glAttachShader	.\\include\\gl_core_3_3.h	/^		#define glAttachShader /;"	d
glBeginConditionalRender	.\\include\\gl_core_3_3.h	/^		#define glBeginConditionalRender /;"	d
glBeginQuery	.\\include\\gl_core_3_3.h	/^		#define glBeginQuery /;"	d
glBeginTransformFeedback	.\\include\\gl_core_3_3.h	/^		#define glBeginTransformFeedback /;"	d
glBindAttribLocation	.\\include\\gl_core_3_3.h	/^		#define glBindAttribLocation /;"	d
glBindBuffer	.\\include\\gl_core_3_3.h	/^		#define glBindBuffer /;"	d
glBindBufferBase	.\\include\\gl_core_3_3.h	/^		#define glBindBufferBase /;"	d
glBindBufferRange	.\\include\\gl_core_3_3.h	/^		#define glBindBufferRange /;"	d
glBindFragDataLocation	.\\include\\gl_core_3_3.h	/^		#define glBindFragDataLocation /;"	d
glBindFragDataLocationIndexed	.\\include\\gl_core_3_3.h	/^		#define glBindFragDataLocationIndexed /;"	d
glBindFramebuffer	.\\include\\gl_core_3_3.h	/^		#define glBindFramebuffer /;"	d
glBindRenderbuffer	.\\include\\gl_core_3_3.h	/^		#define glBindRenderbuffer /;"	d
glBindSampler	.\\include\\gl_core_3_3.h	/^		#define glBindSampler /;"	d
glBindTexture	.\\include\\gl_core_3_3.h	/^		#define glBindTexture /;"	d
glBindVertexArray	.\\include\\gl_core_3_3.h	/^		#define glBindVertexArray /;"	d
glBlendColor	.\\include\\gl_core_3_3.h	/^		#define glBlendColor /;"	d
glBlendEquation	.\\include\\gl_core_3_3.h	/^		#define glBlendEquation /;"	d
glBlendEquationSeparate	.\\include\\gl_core_3_3.h	/^		#define glBlendEquationSeparate /;"	d
glBlendFunc	.\\include\\gl_core_3_3.h	/^		#define glBlendFunc /;"	d
glBlendFuncSeparate	.\\include\\gl_core_3_3.h	/^		#define glBlendFuncSeparate /;"	d
glBlitFramebuffer	.\\include\\gl_core_3_3.h	/^		#define glBlitFramebuffer /;"	d
glBufferData	.\\include\\gl_core_3_3.h	/^		#define glBufferData /;"	d
glBufferSubData	.\\include\\gl_core_3_3.h	/^		#define glBufferSubData /;"	d
glCheckFramebufferStatus	.\\include\\gl_core_3_3.h	/^		#define glCheckFramebufferStatus /;"	d
glClampColor	.\\include\\gl_core_3_3.h	/^		#define glClampColor /;"	d
glClear	.\\include\\gl_core_3_3.h	/^		#define glClear /;"	d
glClearBufferfi	.\\include\\gl_core_3_3.h	/^		#define glClearBufferfi /;"	d
glClearBufferfv	.\\include\\gl_core_3_3.h	/^		#define glClearBufferfv /;"	d
glClearBufferiv	.\\include\\gl_core_3_3.h	/^		#define glClearBufferiv /;"	d
glClearBufferuiv	.\\include\\gl_core_3_3.h	/^		#define glClearBufferuiv /;"	d
glClearColor	.\\include\\gl_core_3_3.h	/^		#define glClearColor /;"	d
glClearDepth	.\\include\\gl_core_3_3.h	/^		#define glClearDepth /;"	d
glClearStencil	.\\include\\gl_core_3_3.h	/^		#define glClearStencil /;"	d
glClientWaitSync	.\\include\\gl_core_3_3.h	/^		#define glClientWaitSync /;"	d
glColorMask	.\\include\\gl_core_3_3.h	/^		#define glColorMask /;"	d
glColorMaski	.\\include\\gl_core_3_3.h	/^		#define glColorMaski /;"	d
glCompileShader	.\\include\\gl_core_3_3.h	/^		#define glCompileShader /;"	d
glCompressedTexImage1D	.\\include\\gl_core_3_3.h	/^		#define glCompressedTexImage1D /;"	d
glCompressedTexImage2D	.\\include\\gl_core_3_3.h	/^		#define glCompressedTexImage2D /;"	d
glCompressedTexImage3D	.\\include\\gl_core_3_3.h	/^		#define glCompressedTexImage3D /;"	d
glCompressedTexSubImage1D	.\\include\\gl_core_3_3.h	/^		#define glCompressedTexSubImage1D /;"	d
glCompressedTexSubImage2D	.\\include\\gl_core_3_3.h	/^		#define glCompressedTexSubImage2D /;"	d
glCompressedTexSubImage3D	.\\include\\gl_core_3_3.h	/^		#define glCompressedTexSubImage3D /;"	d
glCopyBufferSubData	.\\include\\gl_core_3_3.h	/^		#define glCopyBufferSubData /;"	d
glCopyTexImage1D	.\\include\\gl_core_3_3.h	/^		#define glCopyTexImage1D /;"	d
glCopyTexImage2D	.\\include\\gl_core_3_3.h	/^		#define glCopyTexImage2D /;"	d
glCopyTexSubImage1D	.\\include\\gl_core_3_3.h	/^		#define glCopyTexSubImage1D /;"	d
glCopyTexSubImage2D	.\\include\\gl_core_3_3.h	/^		#define glCopyTexSubImage2D /;"	d
glCopyTexSubImage3D	.\\include\\gl_core_3_3.h	/^		#define glCopyTexSubImage3D /;"	d
glCreateProgram	.\\include\\gl_core_3_3.h	/^		#define glCreateProgram /;"	d
glCreateShader	.\\include\\gl_core_3_3.h	/^		#define glCreateShader /;"	d
glCullFace	.\\include\\gl_core_3_3.h	/^		#define glCullFace /;"	d
glDeleteBuffers	.\\include\\gl_core_3_3.h	/^		#define glDeleteBuffers /;"	d
glDeleteFramebuffers	.\\include\\gl_core_3_3.h	/^		#define glDeleteFramebuffers /;"	d
glDeleteProgram	.\\include\\gl_core_3_3.h	/^		#define glDeleteProgram /;"	d
glDeleteQueries	.\\include\\gl_core_3_3.h	/^		#define glDeleteQueries /;"	d
glDeleteRenderbuffers	.\\include\\gl_core_3_3.h	/^		#define glDeleteRenderbuffers /;"	d
glDeleteSamplers	.\\include\\gl_core_3_3.h	/^		#define glDeleteSamplers /;"	d
glDeleteShader	.\\include\\gl_core_3_3.h	/^		#define glDeleteShader /;"	d
glDeleteSync	.\\include\\gl_core_3_3.h	/^		#define glDeleteSync /;"	d
glDeleteTextures	.\\include\\gl_core_3_3.h	/^		#define glDeleteTextures /;"	d
glDeleteVertexArrays	.\\include\\gl_core_3_3.h	/^		#define glDeleteVertexArrays /;"	d
glDepthFunc	.\\include\\gl_core_3_3.h	/^		#define glDepthFunc /;"	d
glDepthMask	.\\include\\gl_core_3_3.h	/^		#define glDepthMask /;"	d
glDepthRange	.\\include\\gl_core_3_3.h	/^		#define glDepthRange /;"	d
glDetachShader	.\\include\\gl_core_3_3.h	/^		#define glDetachShader /;"	d
glDisable	.\\include\\gl_core_3_3.h	/^		#define glDisable /;"	d
glDisableVertexAttribArray	.\\include\\gl_core_3_3.h	/^		#define glDisableVertexAttribArray /;"	d
glDisablei	.\\include\\gl_core_3_3.h	/^		#define glDisablei /;"	d
glDrawArrays	.\\include\\gl_core_3_3.h	/^		#define glDrawArrays /;"	d
glDrawArraysInstanced	.\\include\\gl_core_3_3.h	/^		#define glDrawArraysInstanced /;"	d
glDrawBuffer	.\\include\\gl_core_3_3.h	/^		#define glDrawBuffer /;"	d
glDrawBuffers	.\\include\\gl_core_3_3.h	/^		#define glDrawBuffers /;"	d
glDrawElements	.\\include\\gl_core_3_3.h	/^		#define glDrawElements /;"	d
glDrawElementsBaseVertex	.\\include\\gl_core_3_3.h	/^		#define glDrawElementsBaseVertex /;"	d
glDrawElementsInstanced	.\\include\\gl_core_3_3.h	/^		#define glDrawElementsInstanced /;"	d
glDrawElementsInstancedBaseVertex	.\\include\\gl_core_3_3.h	/^		#define glDrawElementsInstancedBaseVertex /;"	d
glDrawRangeElements	.\\include\\gl_core_3_3.h	/^		#define glDrawRangeElements /;"	d
glDrawRangeElementsBaseVertex	.\\include\\gl_core_3_3.h	/^		#define glDrawRangeElementsBaseVertex /;"	d
glEnable	.\\include\\gl_core_3_3.h	/^		#define glEnable /;"	d
glEnableVertexAttribArray	.\\include\\gl_core_3_3.h	/^		#define glEnableVertexAttribArray /;"	d
glEnablei	.\\include\\gl_core_3_3.h	/^		#define glEnablei /;"	d
glEndConditionalRender	.\\include\\gl_core_3_3.h	/^		#define glEndConditionalRender /;"	d
glEndQuery	.\\include\\gl_core_3_3.h	/^		#define glEndQuery /;"	d
glEndTransformFeedback	.\\include\\gl_core_3_3.h	/^		#define glEndTransformFeedback /;"	d
glFenceSync	.\\include\\gl_core_3_3.h	/^		#define glFenceSync /;"	d
glFinish	.\\include\\gl_core_3_3.h	/^		#define glFinish /;"	d
glFlush	.\\include\\gl_core_3_3.h	/^		#define glFlush /;"	d
glFlushMappedBufferRange	.\\include\\gl_core_3_3.h	/^		#define glFlushMappedBufferRange /;"	d
glFramebufferRenderbuffer	.\\include\\gl_core_3_3.h	/^		#define glFramebufferRenderbuffer /;"	d
glFramebufferTexture	.\\include\\gl_core_3_3.h	/^		#define glFramebufferTexture /;"	d
glFramebufferTexture1D	.\\include\\gl_core_3_3.h	/^		#define glFramebufferTexture1D /;"	d
glFramebufferTexture2D	.\\include\\gl_core_3_3.h	/^		#define glFramebufferTexture2D /;"	d
glFramebufferTexture3D	.\\include\\gl_core_3_3.h	/^		#define glFramebufferTexture3D /;"	d
glFramebufferTextureLayer	.\\include\\gl_core_3_3.h	/^		#define glFramebufferTextureLayer /;"	d
glFrontFace	.\\include\\gl_core_3_3.h	/^		#define glFrontFace /;"	d
glGenBuffers	.\\include\\gl_core_3_3.h	/^		#define glGenBuffers /;"	d
glGenFramebuffers	.\\include\\gl_core_3_3.h	/^		#define glGenFramebuffers /;"	d
glGenQueries	.\\include\\gl_core_3_3.h	/^		#define glGenQueries /;"	d
glGenRenderbuffers	.\\include\\gl_core_3_3.h	/^		#define glGenRenderbuffers /;"	d
glGenSamplers	.\\include\\gl_core_3_3.h	/^		#define glGenSamplers /;"	d
glGenTextures	.\\include\\gl_core_3_3.h	/^		#define glGenTextures /;"	d
glGenVertexArrays	.\\include\\gl_core_3_3.h	/^		#define glGenVertexArrays /;"	d
glGenerateMipmap	.\\include\\gl_core_3_3.h	/^		#define glGenerateMipmap /;"	d
glGetActiveAttrib	.\\include\\gl_core_3_3.h	/^		#define glGetActiveAttrib /;"	d
glGetActiveUniform	.\\include\\gl_core_3_3.h	/^		#define glGetActiveUniform /;"	d
glGetActiveUniformBlockName	.\\include\\gl_core_3_3.h	/^		#define glGetActiveUniformBlockName /;"	d
glGetActiveUniformBlockiv	.\\include\\gl_core_3_3.h	/^		#define glGetActiveUniformBlockiv /;"	d
glGetActiveUniformName	.\\include\\gl_core_3_3.h	/^		#define glGetActiveUniformName /;"	d
glGetActiveUniformsiv	.\\include\\gl_core_3_3.h	/^		#define glGetActiveUniformsiv /;"	d
glGetAttachedShaders	.\\include\\gl_core_3_3.h	/^		#define glGetAttachedShaders /;"	d
glGetAttribLocation	.\\include\\gl_core_3_3.h	/^		#define glGetAttribLocation /;"	d
glGetBooleani_v	.\\include\\gl_core_3_3.h	/^		#define glGetBooleani_v /;"	d
glGetBooleanv	.\\include\\gl_core_3_3.h	/^		#define glGetBooleanv /;"	d
glGetBufferParameteri64v	.\\include\\gl_core_3_3.h	/^		#define glGetBufferParameteri64v /;"	d
glGetBufferParameteriv	.\\include\\gl_core_3_3.h	/^		#define glGetBufferParameteriv /;"	d
glGetBufferPointerv	.\\include\\gl_core_3_3.h	/^		#define glGetBufferPointerv /;"	d
glGetBufferSubData	.\\include\\gl_core_3_3.h	/^		#define glGetBufferSubData /;"	d
glGetCompressedTexImage	.\\include\\gl_core_3_3.h	/^		#define glGetCompressedTexImage /;"	d
glGetDoublev	.\\include\\gl_core_3_3.h	/^		#define glGetDoublev /;"	d
glGetError	.\\include\\gl_core_3_3.h	/^		#define glGetError /;"	d
glGetFloatv	.\\include\\gl_core_3_3.h	/^		#define glGetFloatv /;"	d
glGetFragDataIndex	.\\include\\gl_core_3_3.h	/^		#define glGetFragDataIndex /;"	d
glGetFragDataLocation	.\\include\\gl_core_3_3.h	/^		#define glGetFragDataLocation /;"	d
glGetFramebufferAttachmentParameteriv	.\\include\\gl_core_3_3.h	/^		#define glGetFramebufferAttachmentParameteriv /;"	d
glGetInteger64i_v	.\\include\\gl_core_3_3.h	/^		#define glGetInteger64i_v /;"	d
glGetInteger64v	.\\include\\gl_core_3_3.h	/^		#define glGetInteger64v /;"	d
glGetIntegeri_v	.\\include\\gl_core_3_3.h	/^		#define glGetIntegeri_v /;"	d
glGetIntegerv	.\\include\\gl_core_3_3.h	/^		#define glGetIntegerv /;"	d
glGetMultisamplefv	.\\include\\gl_core_3_3.h	/^		#define glGetMultisamplefv /;"	d
glGetProgramInfoLog	.\\include\\gl_core_3_3.h	/^		#define glGetProgramInfoLog /;"	d
glGetProgramiv	.\\include\\gl_core_3_3.h	/^		#define glGetProgramiv /;"	d
glGetQueryObjecti64v	.\\include\\gl_core_3_3.h	/^		#define glGetQueryObjecti64v /;"	d
glGetQueryObjectiv	.\\include\\gl_core_3_3.h	/^		#define glGetQueryObjectiv /;"	d
glGetQueryObjectui64v	.\\include\\gl_core_3_3.h	/^		#define glGetQueryObjectui64v /;"	d
glGetQueryObjectuiv	.\\include\\gl_core_3_3.h	/^		#define glGetQueryObjectuiv /;"	d
glGetQueryiv	.\\include\\gl_core_3_3.h	/^		#define glGetQueryiv /;"	d
glGetRenderbufferParameteriv	.\\include\\gl_core_3_3.h	/^		#define glGetRenderbufferParameteriv /;"	d
glGetSamplerParameterIiv	.\\include\\gl_core_3_3.h	/^		#define glGetSamplerParameterIiv /;"	d
glGetSamplerParameterIuiv	.\\include\\gl_core_3_3.h	/^		#define glGetSamplerParameterIuiv /;"	d
glGetSamplerParameterfv	.\\include\\gl_core_3_3.h	/^		#define glGetSamplerParameterfv /;"	d
glGetSamplerParameteriv	.\\include\\gl_core_3_3.h	/^		#define glGetSamplerParameteriv /;"	d
glGetShaderInfoLog	.\\include\\gl_core_3_3.h	/^		#define glGetShaderInfoLog /;"	d
glGetShaderSource	.\\include\\gl_core_3_3.h	/^		#define glGetShaderSource /;"	d
glGetShaderiv	.\\include\\gl_core_3_3.h	/^		#define glGetShaderiv /;"	d
glGetString	.\\include\\gl_core_3_3.h	/^		#define glGetString /;"	d
glGetStringi	.\\include\\gl_core_3_3.h	/^		#define glGetStringi /;"	d
glGetSynciv	.\\include\\gl_core_3_3.h	/^		#define glGetSynciv /;"	d
glGetTexImage	.\\include\\gl_core_3_3.h	/^		#define glGetTexImage /;"	d
glGetTexLevelParameterfv	.\\include\\gl_core_3_3.h	/^		#define glGetTexLevelParameterfv /;"	d
glGetTexLevelParameteriv	.\\include\\gl_core_3_3.h	/^		#define glGetTexLevelParameteriv /;"	d
glGetTexParameterIiv	.\\include\\gl_core_3_3.h	/^		#define glGetTexParameterIiv /;"	d
glGetTexParameterIuiv	.\\include\\gl_core_3_3.h	/^		#define glGetTexParameterIuiv /;"	d
glGetTexParameterfv	.\\include\\gl_core_3_3.h	/^		#define glGetTexParameterfv /;"	d
glGetTexParameteriv	.\\include\\gl_core_3_3.h	/^		#define glGetTexParameteriv /;"	d
glGetTransformFeedbackVarying	.\\include\\gl_core_3_3.h	/^		#define glGetTransformFeedbackVarying /;"	d
glGetUniformBlockIndex	.\\include\\gl_core_3_3.h	/^		#define glGetUniformBlockIndex /;"	d
glGetUniformIndices	.\\include\\gl_core_3_3.h	/^		#define glGetUniformIndices /;"	d
glGetUniformLocation	.\\include\\gl_core_3_3.h	/^		#define glGetUniformLocation /;"	d
glGetUniformfv	.\\include\\gl_core_3_3.h	/^		#define glGetUniformfv /;"	d
glGetUniformiv	.\\include\\gl_core_3_3.h	/^		#define glGetUniformiv /;"	d
glGetUniformuiv	.\\include\\gl_core_3_3.h	/^		#define glGetUniformuiv /;"	d
glGetVertexAttribIiv	.\\include\\gl_core_3_3.h	/^		#define glGetVertexAttribIiv /;"	d
glGetVertexAttribIuiv	.\\include\\gl_core_3_3.h	/^		#define glGetVertexAttribIuiv /;"	d
glGetVertexAttribPointerv	.\\include\\gl_core_3_3.h	/^		#define glGetVertexAttribPointerv /;"	d
glGetVertexAttribdv	.\\include\\gl_core_3_3.h	/^		#define glGetVertexAttribdv /;"	d
glGetVertexAttribfv	.\\include\\gl_core_3_3.h	/^		#define glGetVertexAttribfv /;"	d
glGetVertexAttribiv	.\\include\\gl_core_3_3.h	/^		#define glGetVertexAttribiv /;"	d
glHint	.\\include\\gl_core_3_3.h	/^		#define glHint /;"	d
glIsBuffer	.\\include\\gl_core_3_3.h	/^		#define glIsBuffer /;"	d
glIsEnabled	.\\include\\gl_core_3_3.h	/^		#define glIsEnabled /;"	d
glIsEnabledi	.\\include\\gl_core_3_3.h	/^		#define glIsEnabledi /;"	d
glIsFramebuffer	.\\include\\gl_core_3_3.h	/^		#define glIsFramebuffer /;"	d
glIsProgram	.\\include\\gl_core_3_3.h	/^		#define glIsProgram /;"	d
glIsQuery	.\\include\\gl_core_3_3.h	/^		#define glIsQuery /;"	d
glIsRenderbuffer	.\\include\\gl_core_3_3.h	/^		#define glIsRenderbuffer /;"	d
glIsSampler	.\\include\\gl_core_3_3.h	/^		#define glIsSampler /;"	d
glIsShader	.\\include\\gl_core_3_3.h	/^		#define glIsShader /;"	d
glIsSync	.\\include\\gl_core_3_3.h	/^		#define glIsSync /;"	d
glIsTexture	.\\include\\gl_core_3_3.h	/^		#define glIsTexture /;"	d
glIsVertexArray	.\\include\\gl_core_3_3.h	/^		#define glIsVertexArray /;"	d
glLineWidth	.\\include\\gl_core_3_3.h	/^		#define glLineWidth /;"	d
glLinkProgram	.\\include\\gl_core_3_3.h	/^		#define glLinkProgram /;"	d
glLogicOp	.\\include\\gl_core_3_3.h	/^		#define glLogicOp /;"	d
glMapBuffer	.\\include\\gl_core_3_3.h	/^		#define glMapBuffer /;"	d
glMapBufferRange	.\\include\\gl_core_3_3.h	/^		#define glMapBufferRange /;"	d
glMultiDrawArrays	.\\include\\gl_core_3_3.h	/^		#define glMultiDrawArrays /;"	d
glMultiDrawElements	.\\include\\gl_core_3_3.h	/^		#define glMultiDrawElements /;"	d
glMultiDrawElementsBaseVertex	.\\include\\gl_core_3_3.h	/^		#define glMultiDrawElementsBaseVertex /;"	d
glPixelStoref	.\\include\\gl_core_3_3.h	/^		#define glPixelStoref /;"	d
glPixelStorei	.\\include\\gl_core_3_3.h	/^		#define glPixelStorei /;"	d
glPointParameterf	.\\include\\gl_core_3_3.h	/^		#define glPointParameterf /;"	d
glPointParameterfv	.\\include\\gl_core_3_3.h	/^		#define glPointParameterfv /;"	d
glPointParameteri	.\\include\\gl_core_3_3.h	/^		#define glPointParameteri /;"	d
glPointParameteriv	.\\include\\gl_core_3_3.h	/^		#define glPointParameteriv /;"	d
glPointSize	.\\include\\gl_core_3_3.h	/^		#define glPointSize /;"	d
glPolygonMode	.\\include\\gl_core_3_3.h	/^		#define glPolygonMode /;"	d
glPolygonOffset	.\\include\\gl_core_3_3.h	/^		#define glPolygonOffset /;"	d
glPrimitiveRestartIndex	.\\include\\gl_core_3_3.h	/^		#define glPrimitiveRestartIndex /;"	d
glPrintError	.\\src\\Window.cpp	/^void glPrintError(GLenum error){$/;"	f	typeref:typename:void
glProvokingVertex	.\\include\\gl_core_3_3.h	/^		#define glProvokingVertex /;"	d
glQueryCounter	.\\include\\gl_core_3_3.h	/^		#define glQueryCounter /;"	d
glReadBuffer	.\\include\\gl_core_3_3.h	/^		#define glReadBuffer /;"	d
glReadPixels	.\\include\\gl_core_3_3.h	/^		#define glReadPixels /;"	d
glRenderbufferStorage	.\\include\\gl_core_3_3.h	/^		#define glRenderbufferStorage /;"	d
glRenderbufferStorageMultisample	.\\include\\gl_core_3_3.h	/^		#define glRenderbufferStorageMultisample /;"	d
glSampleCoverage	.\\include\\gl_core_3_3.h	/^		#define glSampleCoverage /;"	d
glSampleMaski	.\\include\\gl_core_3_3.h	/^		#define glSampleMaski /;"	d
glSamplerParameterIiv	.\\include\\gl_core_3_3.h	/^		#define glSamplerParameterIiv /;"	d
glSamplerParameterIuiv	.\\include\\gl_core_3_3.h	/^		#define glSamplerParameterIuiv /;"	d
glSamplerParameterf	.\\include\\gl_core_3_3.h	/^		#define glSamplerParameterf /;"	d
glSamplerParameterfv	.\\include\\gl_core_3_3.h	/^		#define glSamplerParameterfv /;"	d
glSamplerParameteri	.\\include\\gl_core_3_3.h	/^		#define glSamplerParameteri /;"	d
glSamplerParameteriv	.\\include\\gl_core_3_3.h	/^		#define glSamplerParameteriv /;"	d
glScissor	.\\include\\gl_core_3_3.h	/^		#define glScissor /;"	d
glShaderSource	.\\include\\gl_core_3_3.h	/^		#define glShaderSource /;"	d
glStencilFunc	.\\include\\gl_core_3_3.h	/^		#define glStencilFunc /;"	d
glStencilFuncSeparate	.\\include\\gl_core_3_3.h	/^		#define glStencilFuncSeparate /;"	d
glStencilMask	.\\include\\gl_core_3_3.h	/^		#define glStencilMask /;"	d
glStencilMaskSeparate	.\\include\\gl_core_3_3.h	/^		#define glStencilMaskSeparate /;"	d
glStencilOp	.\\include\\gl_core_3_3.h	/^		#define glStencilOp /;"	d
glStencilOpSeparate	.\\include\\gl_core_3_3.h	/^		#define glStencilOpSeparate /;"	d
glTexBuffer	.\\include\\gl_core_3_3.h	/^		#define glTexBuffer /;"	d
glTexImage1D	.\\include\\gl_core_3_3.h	/^		#define glTexImage1D /;"	d
glTexImage2D	.\\include\\gl_core_3_3.h	/^		#define glTexImage2D /;"	d
glTexImage2DMultisample	.\\include\\gl_core_3_3.h	/^		#define glTexImage2DMultisample /;"	d
glTexImage3D	.\\include\\gl_core_3_3.h	/^		#define glTexImage3D /;"	d
glTexImage3DMultisample	.\\include\\gl_core_3_3.h	/^		#define glTexImage3DMultisample /;"	d
glTexParameterIiv	.\\include\\gl_core_3_3.h	/^		#define glTexParameterIiv /;"	d
glTexParameterIuiv	.\\include\\gl_core_3_3.h	/^		#define glTexParameterIuiv /;"	d
glTexParameterf	.\\include\\gl_core_3_3.h	/^		#define glTexParameterf /;"	d
glTexParameterfv	.\\include\\gl_core_3_3.h	/^		#define glTexParameterfv /;"	d
glTexParameteri	.\\include\\gl_core_3_3.h	/^		#define glTexParameteri /;"	d
glTexParameteriv	.\\include\\gl_core_3_3.h	/^		#define glTexParameteriv /;"	d
glTexSubImage1D	.\\include\\gl_core_3_3.h	/^		#define glTexSubImage1D /;"	d
glTexSubImage2D	.\\include\\gl_core_3_3.h	/^		#define glTexSubImage2D /;"	d
glTexSubImage3D	.\\include\\gl_core_3_3.h	/^		#define glTexSubImage3D /;"	d
glTransformFeedbackVaryings	.\\include\\gl_core_3_3.h	/^		#define glTransformFeedbackVaryings /;"	d
glUniform1f	.\\include\\gl_core_3_3.h	/^		#define glUniform1f /;"	d
glUniform1fv	.\\include\\gl_core_3_3.h	/^		#define glUniform1fv /;"	d
glUniform1i	.\\include\\gl_core_3_3.h	/^		#define glUniform1i /;"	d
glUniform1iv	.\\include\\gl_core_3_3.h	/^		#define glUniform1iv /;"	d
glUniform1ui	.\\include\\gl_core_3_3.h	/^		#define glUniform1ui /;"	d
glUniform1uiv	.\\include\\gl_core_3_3.h	/^		#define glUniform1uiv /;"	d
glUniform2f	.\\include\\gl_core_3_3.h	/^		#define glUniform2f /;"	d
glUniform2fv	.\\include\\gl_core_3_3.h	/^		#define glUniform2fv /;"	d
glUniform2i	.\\include\\gl_core_3_3.h	/^		#define glUniform2i /;"	d
glUniform2iv	.\\include\\gl_core_3_3.h	/^		#define glUniform2iv /;"	d
glUniform2ui	.\\include\\gl_core_3_3.h	/^		#define glUniform2ui /;"	d
glUniform2uiv	.\\include\\gl_core_3_3.h	/^		#define glUniform2uiv /;"	d
glUniform3f	.\\include\\gl_core_3_3.h	/^		#define glUniform3f /;"	d
glUniform3fv	.\\include\\gl_core_3_3.h	/^		#define glUniform3fv /;"	d
glUniform3i	.\\include\\gl_core_3_3.h	/^		#define glUniform3i /;"	d
glUniform3iv	.\\include\\gl_core_3_3.h	/^		#define glUniform3iv /;"	d
glUniform3ui	.\\include\\gl_core_3_3.h	/^		#define glUniform3ui /;"	d
glUniform3uiv	.\\include\\gl_core_3_3.h	/^		#define glUniform3uiv /;"	d
glUniform4f	.\\include\\gl_core_3_3.h	/^		#define glUniform4f /;"	d
glUniform4fv	.\\include\\gl_core_3_3.h	/^		#define glUniform4fv /;"	d
glUniform4i	.\\include\\gl_core_3_3.h	/^		#define glUniform4i /;"	d
glUniform4iv	.\\include\\gl_core_3_3.h	/^		#define glUniform4iv /;"	d
glUniform4ui	.\\include\\gl_core_3_3.h	/^		#define glUniform4ui /;"	d
glUniform4uiv	.\\include\\gl_core_3_3.h	/^		#define glUniform4uiv /;"	d
glUniformBlockBinding	.\\include\\gl_core_3_3.h	/^		#define glUniformBlockBinding /;"	d
glUniformMatrix2fv	.\\include\\gl_core_3_3.h	/^		#define glUniformMatrix2fv /;"	d
glUniformMatrix2x3fv	.\\include\\gl_core_3_3.h	/^		#define glUniformMatrix2x3fv /;"	d
glUniformMatrix2x4fv	.\\include\\gl_core_3_3.h	/^		#define glUniformMatrix2x4fv /;"	d
glUniformMatrix3fv	.\\include\\gl_core_3_3.h	/^		#define glUniformMatrix3fv /;"	d
glUniformMatrix3x2fv	.\\include\\gl_core_3_3.h	/^		#define glUniformMatrix3x2fv /;"	d
glUniformMatrix3x4fv	.\\include\\gl_core_3_3.h	/^		#define glUniformMatrix3x4fv /;"	d
glUniformMatrix4fv	.\\include\\gl_core_3_3.h	/^		#define glUniformMatrix4fv /;"	d
glUniformMatrix4x2fv	.\\include\\gl_core_3_3.h	/^		#define glUniformMatrix4x2fv /;"	d
glUniformMatrix4x3fv	.\\include\\gl_core_3_3.h	/^		#define glUniformMatrix4x3fv /;"	d
glUnmapBuffer	.\\include\\gl_core_3_3.h	/^		#define glUnmapBuffer /;"	d
glUseProgram	.\\include\\gl_core_3_3.h	/^		#define glUseProgram /;"	d
glValidateProgram	.\\include\\gl_core_3_3.h	/^		#define glValidateProgram /;"	d
glVertexAttrib1d	.\\include\\gl_core_3_3.h	/^		#define glVertexAttrib1d /;"	d
glVertexAttrib1dv	.\\include\\gl_core_3_3.h	/^		#define glVertexAttrib1dv /;"	d
glVertexAttrib1f	.\\include\\gl_core_3_3.h	/^		#define glVertexAttrib1f /;"	d
glVertexAttrib1fv	.\\include\\gl_core_3_3.h	/^		#define glVertexAttrib1fv /;"	d
glVertexAttrib1s	.\\include\\gl_core_3_3.h	/^		#define glVertexAttrib1s /;"	d
glVertexAttrib1sv	.\\include\\gl_core_3_3.h	/^		#define glVertexAttrib1sv /;"	d
glVertexAttrib2d	.\\include\\gl_core_3_3.h	/^		#define glVertexAttrib2d /;"	d
glVertexAttrib2dv	.\\include\\gl_core_3_3.h	/^		#define glVertexAttrib2dv /;"	d
glVertexAttrib2f	.\\include\\gl_core_3_3.h	/^		#define glVertexAttrib2f /;"	d
glVertexAttrib2fv	.\\include\\gl_core_3_3.h	/^		#define glVertexAttrib2fv /;"	d
glVertexAttrib2s	.\\include\\gl_core_3_3.h	/^		#define glVertexAttrib2s /;"	d
glVertexAttrib2sv	.\\include\\gl_core_3_3.h	/^		#define glVertexAttrib2sv /;"	d
glVertexAttrib3d	.\\include\\gl_core_3_3.h	/^		#define glVertexAttrib3d /;"	d
glVertexAttrib3dv	.\\include\\gl_core_3_3.h	/^		#define glVertexAttrib3dv /;"	d
glVertexAttrib3f	.\\include\\gl_core_3_3.h	/^		#define glVertexAttrib3f /;"	d
glVertexAttrib3fv	.\\include\\gl_core_3_3.h	/^		#define glVertexAttrib3fv /;"	d
glVertexAttrib3s	.\\include\\gl_core_3_3.h	/^		#define glVertexAttrib3s /;"	d
glVertexAttrib3sv	.\\include\\gl_core_3_3.h	/^		#define glVertexAttrib3sv /;"	d
glVertexAttrib4Nbv	.\\include\\gl_core_3_3.h	/^		#define glVertexAttrib4Nbv /;"	d
glVertexAttrib4Niv	.\\include\\gl_core_3_3.h	/^		#define glVertexAttrib4Niv /;"	d
glVertexAttrib4Nsv	.\\include\\gl_core_3_3.h	/^		#define glVertexAttrib4Nsv /;"	d
glVertexAttrib4Nub	.\\include\\gl_core_3_3.h	/^		#define glVertexAttrib4Nub /;"	d
glVertexAttrib4Nubv	.\\include\\gl_core_3_3.h	/^		#define glVertexAttrib4Nubv /;"	d
glVertexAttrib4Nuiv	.\\include\\gl_core_3_3.h	/^		#define glVertexAttrib4Nuiv /;"	d
glVertexAttrib4Nusv	.\\include\\gl_core_3_3.h	/^		#define glVertexAttrib4Nusv /;"	d
glVertexAttrib4bv	.\\include\\gl_core_3_3.h	/^		#define glVertexAttrib4bv /;"	d
glVertexAttrib4d	.\\include\\gl_core_3_3.h	/^		#define glVertexAttrib4d /;"	d
glVertexAttrib4dv	.\\include\\gl_core_3_3.h	/^		#define glVertexAttrib4dv /;"	d
glVertexAttrib4f	.\\include\\gl_core_3_3.h	/^		#define glVertexAttrib4f /;"	d
glVertexAttrib4fv	.\\include\\gl_core_3_3.h	/^		#define glVertexAttrib4fv /;"	d
glVertexAttrib4iv	.\\include\\gl_core_3_3.h	/^		#define glVertexAttrib4iv /;"	d
glVertexAttrib4s	.\\include\\gl_core_3_3.h	/^		#define glVertexAttrib4s /;"	d
glVertexAttrib4sv	.\\include\\gl_core_3_3.h	/^		#define glVertexAttrib4sv /;"	d
glVertexAttrib4ubv	.\\include\\gl_core_3_3.h	/^		#define glVertexAttrib4ubv /;"	d
glVertexAttrib4uiv	.\\include\\gl_core_3_3.h	/^		#define glVertexAttrib4uiv /;"	d
glVertexAttrib4usv	.\\include\\gl_core_3_3.h	/^		#define glVertexAttrib4usv /;"	d
glVertexAttribDivisor	.\\include\\gl_core_3_3.h	/^		#define glVertexAttribDivisor /;"	d
glVertexAttribI1i	.\\include\\gl_core_3_3.h	/^		#define glVertexAttribI1i /;"	d
glVertexAttribI1iv	.\\include\\gl_core_3_3.h	/^		#define glVertexAttribI1iv /;"	d
glVertexAttribI1ui	.\\include\\gl_core_3_3.h	/^		#define glVertexAttribI1ui /;"	d
glVertexAttribI1uiv	.\\include\\gl_core_3_3.h	/^		#define glVertexAttribI1uiv /;"	d
glVertexAttribI2i	.\\include\\gl_core_3_3.h	/^		#define glVertexAttribI2i /;"	d
glVertexAttribI2iv	.\\include\\gl_core_3_3.h	/^		#define glVertexAttribI2iv /;"	d
glVertexAttribI2ui	.\\include\\gl_core_3_3.h	/^		#define glVertexAttribI2ui /;"	d
glVertexAttribI2uiv	.\\include\\gl_core_3_3.h	/^		#define glVertexAttribI2uiv /;"	d
glVertexAttribI3i	.\\include\\gl_core_3_3.h	/^		#define glVertexAttribI3i /;"	d
glVertexAttribI3iv	.\\include\\gl_core_3_3.h	/^		#define glVertexAttribI3iv /;"	d
glVertexAttribI3ui	.\\include\\gl_core_3_3.h	/^		#define glVertexAttribI3ui /;"	d
glVertexAttribI3uiv	.\\include\\gl_core_3_3.h	/^		#define glVertexAttribI3uiv /;"	d
glVertexAttribI4bv	.\\include\\gl_core_3_3.h	/^		#define glVertexAttribI4bv /;"	d
glVertexAttribI4i	.\\include\\gl_core_3_3.h	/^		#define glVertexAttribI4i /;"	d
glVertexAttribI4iv	.\\include\\gl_core_3_3.h	/^		#define glVertexAttribI4iv /;"	d
glVertexAttribI4sv	.\\include\\gl_core_3_3.h	/^		#define glVertexAttribI4sv /;"	d
glVertexAttribI4ubv	.\\include\\gl_core_3_3.h	/^		#define glVertexAttribI4ubv /;"	d
glVertexAttribI4ui	.\\include\\gl_core_3_3.h	/^		#define glVertexAttribI4ui /;"	d
glVertexAttribI4uiv	.\\include\\gl_core_3_3.h	/^		#define glVertexAttribI4uiv /;"	d
glVertexAttribI4usv	.\\include\\gl_core_3_3.h	/^		#define glVertexAttribI4usv /;"	d
glVertexAttribIPointer	.\\include\\gl_core_3_3.h	/^		#define glVertexAttribIPointer /;"	d
glVertexAttribP1ui	.\\include\\gl_core_3_3.h	/^		#define glVertexAttribP1ui /;"	d
glVertexAttribP1uiv	.\\include\\gl_core_3_3.h	/^		#define glVertexAttribP1uiv /;"	d
glVertexAttribP2ui	.\\include\\gl_core_3_3.h	/^		#define glVertexAttribP2ui /;"	d
glVertexAttribP2uiv	.\\include\\gl_core_3_3.h	/^		#define glVertexAttribP2uiv /;"	d
glVertexAttribP3ui	.\\include\\gl_core_3_3.h	/^		#define glVertexAttribP3ui /;"	d
glVertexAttribP3uiv	.\\include\\gl_core_3_3.h	/^		#define glVertexAttribP3uiv /;"	d
glVertexAttribP4ui	.\\include\\gl_core_3_3.h	/^		#define glVertexAttribP4ui /;"	d
glVertexAttribP4uiv	.\\include\\gl_core_3_3.h	/^		#define glVertexAttribP4uiv /;"	d
glVertexAttribPointer	.\\include\\gl_core_3_3.h	/^		#define glVertexAttribPointer /;"	d
glViewport	.\\include\\gl_core_3_3.h	/^		#define glViewport /;"	d
glWaitSync	.\\include\\gl_core_3_3.h	/^		#define glWaitSync /;"	d
gloader	.\\include\\freetype\\internal\\tttypes.h	/^    FT_GlyphLoader   gloader;$/;"	m	struct:TT_LoaderRec_	typeref:typename:FT_GlyphLoader
glyf_len	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ULong              glyf_len;$/;"	m	struct:TT_FaceRec_	typeref:typename:FT_ULong
glyf_offset	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ULong         glyf_offset;$/;"	m	struct:TT_LoaderRec_	typeref:typename:FT_ULong
glyph	.\\include\\freetype\\freetype.h	/^    FT_GlyphSlot      glyph;$/;"	m	struct:FT_FaceRec_	typeref:typename:FT_GlyphSlot
glyph	.\\include\\freetype\\internal\\psaux.h	/^    FT_GlyphSlot    glyph;$/;"	m	struct:T1_BuilderRec_	typeref:typename:FT_GlyphSlot
glyph	.\\include\\freetype\\internal\\tttypes.h	/^    FT_GlyphSlot     glyph;$/;"	m	struct:TT_LoaderRec_	typeref:typename:FT_GlyphSlot
glyph_bbox	.\\include\\freetype\\ftrender.h	/^    FT_Glyph_GetBBoxFunc    glyph_bbox;$/;"	m	struct:FT_Glyph_Class_	typeref:typename:FT_Glyph_GetBBoxFunc
glyph_class	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_Glyph_Class          glyph_class;$/;"	m	struct:FT_RendererRec_	typeref:typename:FT_Glyph_Class
glyph_code	.\\include\\freetype\\internal\\tttypes.h	/^    FT_UShort  glyph_code;$/;"	m	struct:TT_SBit_ComponentRec_	typeref:typename:FT_UShort
glyph_codes	.\\include\\freetype\\internal\\tttypes.h	/^    FT_UShort*          glyph_codes;$/;"	m	struct:TT_SBit_RangeRec_	typeref:typename:FT_UShort *
glyph_copy	.\\include\\freetype\\ftrender.h	/^    FT_Glyph_CopyFunc       glyph_copy;$/;"	m	struct:FT_Glyph_Class_	typeref:typename:FT_Glyph_CopyFunc
glyph_delta	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_Vector       glyph_delta;$/;"	m	struct:FT_Slot_InternalRec_	typeref:typename:FT_Vector
glyph_done	.\\include\\freetype\\ftrender.h	/^    FT_Glyph_DoneFunc       glyph_done;$/;"	m	struct:FT_Glyph_Class_	typeref:typename:FT_Glyph_DoneFunc
glyph_format	.\\include\\freetype\\ftimage.h	/^    FT_Glyph_Format        glyph_format;$/;"	m	struct:FT_Raster_Funcs_	typeref:typename:FT_Glyph_Format
glyph_format	.\\include\\freetype\\ftrender.h	/^    FT_Glyph_Format            glyph_format;$/;"	m	struct:FT_Renderer_Class_	typeref:typename:FT_Glyph_Format
glyph_format	.\\include\\freetype\\ftrender.h	/^    FT_Glyph_Format         glyph_format;$/;"	m	struct:FT_Glyph_Class_	typeref:typename:FT_Glyph_Format
glyph_format	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_Glyph_Format         glyph_format;$/;"	m	struct:FT_RendererRec_	typeref:typename:FT_Glyph_Format
glyph_hints	.\\include\\freetype\\internal\\ftobjs.h	/^    void*           glyph_hints;$/;"	m	struct:FT_Slot_InternalRec_	typeref:typename:void *
glyph_index	.\\include\\freetype\\internal\\services\\svpscmap.h	/^    FT_UInt    glyph_index;$/;"	m	struct:PS_UniMap_	typeref:typename:FT_UInt
glyph_index	.\\include\\freetype\\internal\\tttypes.h	/^    FT_UInt          glyph_index;$/;"	m	struct:TT_LoaderRec_	typeref:typename:FT_UInt
glyph_indices	.\\include\\freetype\\internal\\tttypes.h	/^    FT_UShort*  glyph_indices;$/;"	m	struct:TT_Post_20Rec_	typeref:typename:FT_UShort *
glyph_init	.\\include\\freetype\\ftrender.h	/^    FT_Glyph_InitFunc       glyph_init;$/;"	m	struct:FT_Glyph_Class_	typeref:typename:FT_Glyph_InitFunc
glyph_loader	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_GlyphLoader   glyph_loader;$/;"	m	struct:FT_DriverRec_	typeref:typename:FT_GlyphLoader
glyph_locations	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Byte*              glyph_locations;$/;"	m	struct:TT_FaceRec_	typeref:typename:FT_Byte *
glyph_matrix	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_Matrix       glyph_matrix;$/;"	m	struct:FT_Slot_InternalRec_	typeref:typename:FT_Matrix
glyph_names	.\\include\\freetype\\internal\\psaux.h	/^    FT_Byte**            glyph_names;$/;"	m	struct:T1_DecoderRec_	typeref:typename:FT_Byte **
glyph_names	.\\include\\freetype\\internal\\t1types.h	/^    FT_String**      glyph_names;       \/* array of glyph names       *\/$/;"	m	struct:T1_FontRec_	typeref:typename:FT_String **
glyph_names	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Char**   glyph_names;$/;"	m	struct:TT_Post_20Rec_	typeref:typename:FT_Char **
glyph_names_block	.\\include\\freetype\\internal\\t1types.h	/^    FT_Byte*         glyph_names_block;$/;"	m	struct:T1_FontRec_	typeref:typename:FT_Byte *
glyph_offsets	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ULong*           glyph_offsets;$/;"	m	struct:TT_SBit_RangeRec_	typeref:typename:FT_ULong *
glyph_prepare	.\\include\\freetype\\ftrender.h	/^    FT_Glyph_PrepareFunc    glyph_prepare;$/;"	m	struct:FT_Glyph_Class_	typeref:typename:FT_Glyph_PrepareFunc
glyph_size	.\\include\\freetype\\ftrender.h	/^    FT_Long                 glyph_size;$/;"	m	struct:FT_Glyph_Class_	typeref:typename:FT_Long
glyph_transform	.\\include\\freetype\\ftrender.h	/^    FT_Glyph_TransformFunc  glyph_transform;$/;"	m	struct:FT_Glyph_Class_	typeref:typename:FT_Glyph_TransformFunc
glyph_transformed	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_Bool         glyph_transformed;$/;"	m	struct:FT_Slot_InternalRec_	typeref:typename:FT_Bool
goto_table	.\\include\\freetype\\internal\\sfnt.h	/^    TT_Loader_GotoTableFunc      goto_table;$/;"	m	struct:SFNT_Interface_	typeref:typename:TT_Loader_GotoTableFunc
goto_table	.\\include\\freetype\\internal\\tttypes.h	/^    TT_Loader_GotoTableFunc   goto_table;$/;"	m	struct:TT_FaceRec_	typeref:typename:TT_Loader_GotoTableFunc
gray_spans	.\\include\\freetype\\ftimage.h	/^    FT_SpanFunc             gray_spans;$/;"	m	struct:FT_Raster_Params_	typeref:typename:FT_SpanFunc
green	.\\include\\GLFW\\glfw3.h	/^    unsigned short* green;$/;"	m	struct:GLFWgammaramp	typeref:typename:unsigned short *
greenBits	.\\include\\GLFW\\glfw3.h	/^    int greenBits;$/;"	m	struct:GLFWvidmode	typeref:typename:int
group	.\\include\\curl\\curl.h	/^    char *group;$/;"	m	struct:curl_fileinfo::__anon529bf04d0208	typeref:typename:char *
gxv_validate_func	.\\include\\freetype\\internal\\services\\svgxval.h	/^  (*gxv_validate_func)( FT_Face   face,$/;"	t	typeref:typename:FT_Error (*)(FT_Face face,FT_UInt gx_flags,FT_Bytes tables[FT_VALIDATE_GX_LENGTH],FT_UInt table_length)
hardlinks	.\\include\\curl\\curl.h	/^  long int hardlinks;$/;"	m	struct:curl_fileinfo	typeref:typename:long int
hdmx_record_count	.\\include\\freetype\\internal\\tttypes.h	/^    FT_UInt               hdmx_record_count;$/;"	m	struct:TT_FaceRec_	typeref:typename:FT_UInt
hdmx_record_size	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ULong              hdmx_record_size;$/;"	m	struct:TT_FaceRec_	typeref:typename:FT_ULong
hdmx_record_sizes	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Byte*              hdmx_record_sizes;$/;"	m	struct:TT_FaceRec_	typeref:typename:FT_Byte *
hdmx_table	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Byte*              hdmx_table;$/;"	m	struct:TT_FaceRec_	typeref:typename:FT_Byte *
hdmx_table_size	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ULong              hdmx_table_size;$/;"	m	struct:TT_FaceRec_	typeref:typename:FT_ULong
head	.\\include\\freetype\\fttypes.h	/^    FT_ListNode  head;$/;"	m	struct:FT_ListRec_	typeref:typename:FT_ListNode
header	.\\include\\freetype\\internal\\tttypes.h	/^    TT_Header             header;       \/* TrueType header table          *\/$/;"	m	struct:TT_FaceRec_	typeref:typename:TT_Header
height	.\\include\\GLFW\\glfw3.h	/^    int height;$/;"	m	struct:GLFWimage	typeref:typename:int
height	.\\include\\GLFW\\glfw3.h	/^    int height;$/;"	m	struct:GLFWvidmode	typeref:typename:int
height	.\\include\\freetype\\freetype.h	/^    FT_Long               height;$/;"	m	struct:FT_Size_RequestRec_	typeref:typename:FT_Long
height	.\\include\\freetype\\freetype.h	/^    FT_Pos     height;      \/* text height in 26.6 frac. pixels       *\/$/;"	m	struct:FT_Size_Metrics_	typeref:typename:FT_Pos
height	.\\include\\freetype\\freetype.h	/^    FT_Pos  height;$/;"	m	struct:FT_Glyph_Metrics_	typeref:typename:FT_Pos
height	.\\include\\freetype\\freetype.h	/^    FT_Short          height;$/;"	m	struct:FT_FaceRec_	typeref:typename:FT_Short
height	.\\include\\freetype\\freetype.h	/^    FT_Short  height;$/;"	m	struct:FT_Bitmap_Size_	typeref:typename:FT_Short
height	.\\include\\freetype\\ftcache.h	/^    FT_Byte   height;$/;"	m	struct:FTC_SBitRec_	typeref:typename:FT_Byte
height	.\\include\\freetype\\ftcache.h	/^    FT_UInt     height;$/;"	m	struct:FTC_ImageTypeRec_	typeref:typename:FT_UInt
height	.\\include\\freetype\\ftcache.h	/^    FT_UInt     height;$/;"	m	struct:FTC_ScalerRec_	typeref:typename:FT_UInt
height	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Byte  height;$/;"	m	struct:TT_SBit_Small_Metrics_	typeref:typename:FT_Byte
height	.\\include\\freetype\\internal\\tttypes.h	/^    FT_UShort  height;$/;"	m	struct:TT_SBit_MetricsRec_	typeref:typename:FT_UShort
hint_mode	.\\include\\freetype\\internal\\psaux.h	/^    FT_Render_Mode       hint_mode;$/;"	m	struct:T1_DecoderRec_	typeref:typename:FT_Render_Mode
hintmask	.\\include\\freetype\\internal\\pshints.h	/^    T2_Hints_MaskFunc     hintmask;$/;"	m	struct:T2_Hints_FuncsRec_	typeref:typename:T2_Hints_MaskFunc
hints	.\\include\\freetype\\internal\\pshints.h	/^    T1_Hints               hints;$/;"	m	struct:T1_Hints_FuncsRec_	typeref:typename:T1_Hints
hints	.\\include\\freetype\\internal\\pshints.h	/^    T2_Hints              hints;$/;"	m	struct:T2_Hints_FuncsRec_	typeref:typename:T2_Hints
hints_funcs	.\\include\\freetype\\internal\\psaux.h	/^    void*           hints_funcs;    \/* hinter-specific *\/$/;"	m	struct:T1_BuilderRec_	typeref:typename:void *
hints_globals	.\\include\\freetype\\internal\\psaux.h	/^    void*           hints_globals;  \/* hinter-specific *\/$/;"	m	struct:T1_BuilderRec_	typeref:typename:void *
hori	.\\include\\freetype\\internal\\tttypes.h	/^    TT_SBit_LineMetricsRec  hori;$/;"	m	struct:TT_SBit_ScaleRec_	typeref:typename:TT_SBit_LineMetricsRec
hori	.\\include\\freetype\\internal\\tttypes.h	/^    TT_SBit_LineMetricsRec  hori;$/;"	m	struct:TT_SBit_StrikeRec_	typeref:typename:TT_SBit_LineMetricsRec
horiAdvance	.\\include\\freetype\\freetype.h	/^    FT_Pos  horiAdvance;$/;"	m	struct:FT_Glyph_Metrics_	typeref:typename:FT_Pos
horiAdvance	.\\include\\freetype\\internal\\tttypes.h	/^    FT_UShort  horiAdvance;$/;"	m	struct:TT_SBit_MetricsRec_	typeref:typename:FT_UShort
horiBearingX	.\\include\\freetype\\freetype.h	/^    FT_Pos  horiBearingX;$/;"	m	struct:FT_Glyph_Metrics_	typeref:typename:FT_Pos
horiBearingX	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Short   horiBearingX;$/;"	m	struct:TT_SBit_MetricsRec_	typeref:typename:FT_Short
horiBearingY	.\\include\\freetype\\freetype.h	/^    FT_Pos  horiBearingY;$/;"	m	struct:FT_Glyph_Metrics_	typeref:typename:FT_Pos
horiBearingY	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Short   horiBearingY;$/;"	m	struct:TT_SBit_MetricsRec_	typeref:typename:FT_Short
horiResolution	.\\include\\freetype\\freetype.h	/^    FT_UInt               horiResolution;$/;"	m	struct:FT_Size_RequestRec_	typeref:typename:FT_UInt
horizontal	.\\include\\freetype\\internal\\tttypes.h	/^    TT_HoriHeader         horizontal;   \/* TrueType horizontal header     *\/$/;"	m	struct:TT_FaceRec_	typeref:typename:TT_HoriHeader
horizontal_resolution	.\\include\\freetype\\ftwinfnt.h	/^    FT_UShort  horizontal_resolution;$/;"	m	struct:FT_WinFNT_HeaderRec_	typeref:typename:FT_UShort
horz_metrics	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Byte*              horz_metrics;$/;"	m	struct:TT_FaceRec_	typeref:typename:FT_Byte *
horz_metrics_offset	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ULong              horz_metrics_offset;$/;"	m	struct:TT_FaceRec_	typeref:typename:FT_ULong
horz_metrics_size	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ULong              horz_metrics_size;$/;"	m	struct:TT_FaceRec_	typeref:typename:FT_ULong
host	.\\include\\curl\\curl.h	/^  const char *host;         \/* OS\/host\/cpu\/machine when configured *\/$/;"	m	struct:__anon529bf04d1d08	typeref:typename:const char *
iconv_ver_num	.\\include\\curl\\curl.h	/^  int iconv_ver_num;$/;"	m	struct:__anon529bf04d1d08	typeref:typename:int
id	.\\include\\prog.rc	/^id ICON "include\/ParticleT.ico"$/;"	i
ident	.\\include\\freetype\\internal\\psaux.h	/^    const char*         ident;        \/* field identifier               *\/$/;"	m	struct:T1_FieldRec_	typeref:typename:const char *
image_format	.\\include\\freetype\\internal\\tttypes.h	/^    FT_UShort           image_format;$/;"	m	struct:TT_SBit_RangeRec_	typeref:typename:FT_UShort
image_offset	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ULong            image_offset;$/;"	m	struct:TT_SBit_RangeRec_	typeref:typename:FT_ULong
image_size	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ULong            image_size;$/;"	m	struct:TT_SBit_RangeRec_	typeref:typename:FT_ULong
incremental_interface	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_Incremental_InterfaceRec*  incremental_interface;$/;"	m	struct:FT_Face_InternalRec_	typeref:typename:FT_Incremental_InterfaceRec *
index	.\\include\\freetype\\internal\\ftgloadr.h	/^    FT_Int     index;$/;"	m	struct:FT_SubGlyphRec_	typeref:typename:FT_Int
index1	.\\include\\freetype\\internal\\t1types.h	/^    FT_UInt  index1;$/;"	m	struct:AFM_KernPairRec_	typeref:typename:FT_UInt
index2	.\\include\\freetype\\internal\\t1types.h	/^    FT_UInt  index2;$/;"	m	struct:AFM_KernPairRec_	typeref:typename:FT_UInt
index_format	.\\include\\freetype\\internal\\tttypes.h	/^    FT_UShort           index_format;$/;"	m	struct:TT_SBit_RangeRec_	typeref:typename:FT_UShort
init	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_CMap_InitFunc       init;$/;"	m	struct:FT_CMap_ClassRec_	typeref:typename:FT_CMap_InitFunc
init	.\\include\\freetype\\internal\\psaux.h	/^    (*init)( AFM_Parser  parser,$/;"	m	struct:AFM_Parser_FuncsRec_	typeref:typename:FT_Error (*)(AFM_Parser parser,FT_Memory memory,FT_Byte * base,FT_Byte * limit)
init	.\\include\\freetype\\internal\\psaux.h	/^    (*init)( PS_Parser  parser,$/;"	m	struct:PS_Parser_FuncsRec_	typeref:typename:void (*)(PS_Parser parser,FT_Byte * base,FT_Byte * limit,FT_Memory memory)
init	.\\include\\freetype\\internal\\psaux.h	/^    (*init)( PS_Table   table,$/;"	m	struct:PS_Table_FuncsRec_	typeref:typename:FT_Error (*)(PS_Table table,FT_Int count,FT_Memory memory)
init	.\\include\\freetype\\internal\\psaux.h	/^    (*init)( T1_Builder    builder,$/;"	m	struct:T1_Builder_FuncsRec_	typeref:typename:void (*)(T1_Builder builder,FT_Face face,FT_Size size,FT_GlyphSlot slot,FT_Bool hinting)
init	.\\include\\freetype\\internal\\psaux.h	/^    (*init)( T1_Decoder           decoder,$/;"	m	struct:T1_Decoder_FuncsRec_	typeref:typename:FT_Error (*)(T1_Decoder decoder,FT_Face face,FT_Size size,FT_GlyphSlot slot,FT_Byte ** glyph_names,PS_Blend blend,FT_Bool hinting,FT_Render_Mode hint_mode,T1_Decoder_Callback callback)
init	.\\include\\freetype\\internal\\psaux.h	/^    FT_ULong           init;$/;"	m	struct:PS_TableRec_	typeref:typename:FT_ULong
initTwitterConnection	.\\src\\Window.cpp	/^static void *initTwitterConnection(void *arguments){$/;"	f	typeref:typename:void *	file:
init_face	.\\include\\freetype\\internal\\ftdriver.h	/^    FT_Face_InitFunc         init_face;$/;"	m	struct:FT_Driver_ClassRec_	typeref:typename:FT_Face_InitFunc
init_face	.\\include\\freetype\\internal\\sfnt.h	/^    TT_Init_Face_Func            init_face;$/;"	m	struct:SFNT_Interface_	typeref:typename:TT_Init_Face_Func
init_size	.\\include\\freetype\\internal\\ftdriver.h	/^    FT_Size_InitFunc         init_size;$/;"	m	struct:FT_Driver_ClassRec_	typeref:typename:FT_Size_InitFunc
init_slot	.\\include\\freetype\\internal\\ftdriver.h	/^    FT_Slot_InitFunc         init_slot;$/;"	m	struct:FT_Driver_ClassRec_	typeref:typename:FT_Slot_InitFunc
ins_pos	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ULong         ins_pos;$/;"	m	struct:TT_LoaderRec_	typeref:typename:FT_ULong
instructions	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Byte*         instructions;$/;"	m	struct:TT_LoaderRec_	typeref:typename:FT_Byte *
int32_t	.\\include\\gl_core_3_3.h	/^typedef __int32 int32_t;$/;"	t	typeref:typename:__int32
int32_t	.\\include\\gl_core_3_3.h	/^typedef long int int32_t;$/;"	t	typeref:typename:long int
int64_t	.\\include\\gl_core_3_3.h	/^typedef __int64 int64_t;$/;"	t	typeref:typename:__int64
int64_t	.\\include\\gl_core_3_3.h	/^typedef long int int64_t;$/;"	t	typeref:typename:long int
int64_t	.\\include\\gl_core_3_3.h	/^typedef long long int int64_t;$/;"	t	typeref:typename:long long int
integer	.\\include\\freetype\\ftbdf.h	/^      FT_Int32        integer;$/;"	m	union:BDF_PropertyRec_::__anon0621b64b010a	typeref:typename:FT_Int32
internal	.\\include\\freetype\\freetype.h	/^    FT_Face_Internal  internal;$/;"	m	struct:FT_FaceRec_	typeref:typename:FT_Face_Internal
internal	.\\include\\freetype\\freetype.h	/^    FT_Size_Internal  internal;$/;"	m	struct:FT_SizeRec_	typeref:typename:FT_Size_Internal
internal	.\\include\\freetype\\freetype.h	/^    FT_Slot_Internal  internal;$/;"	m	struct:FT_GlyphSlotRec_	typeref:typename:FT_Slot_Internal
internal_leading	.\\include\\freetype\\ftwinfnt.h	/^    FT_UShort  internal_leading;$/;"	m	struct:FT_WinFNT_HeaderRec_	typeref:typename:FT_UShort
internals	.\\include\\curl\\curl.h	/^  void *internals;$/;"	m	struct:curl_tlssessioninfo	typeref:typename:void *
interpreter	.\\include\\freetype\\internal\\tttypes.h	/^    TT_Interpreter        interpreter;$/;"	m	struct:TT_FaceRec_	typeref:typename:TT_Interpreter
isFixedPitch	.\\include\\freetype\\tttables.h	/^    FT_ULong  isFixedPitch;$/;"	m	struct:TT_Postscript_	typeref:typename:FT_ULong
is_fixed_pitch	.\\include\\freetype\\t1tables.h	/^    FT_Bool     is_fixed_pitch;$/;"	m	struct:PS_FontInfoRec_	typeref:typename:FT_Bool
italic	.\\include\\freetype\\ftwinfnt.h	/^    FT_Byte    italic;$/;"	m	struct:FT_WinFNT_HeaderRec_	typeref:typename:FT_Byte
italicAngle	.\\include\\freetype\\tttables.h	/^    FT_Fixed  italicAngle;$/;"	m	struct:TT_Postscript_	typeref:typename:FT_Fixed
italic_angle	.\\include\\freetype\\t1tables.h	/^    FT_Long     italic_angle;$/;"	m	struct:PS_FontInfoRec_	typeref:typename:FT_Long
jump_buffer	.\\include\\freetype\\internal\\ftvalid.h	/^    ft_jmp_buf          jump_buffer; \/* used for exception handling      *\/$/;"	m	struct:FT_ValidatorRec_	typeref:typename:ft_jmp_buf
kern_avail_bits	.\\include\\freetype\\internal\\tttypes.h	/^    FT_UInt32             kern_avail_bits;$/;"	m	struct:TT_FaceRec_	typeref:typename:FT_UInt32
kern_order_bits	.\\include\\freetype\\internal\\tttypes.h	/^    FT_UInt32             kern_order_bits;$/;"	m	struct:TT_FaceRec_	typeref:typename:FT_UInt32
kern_table	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Byte*              kern_table;$/;"	m	struct:TT_FaceRec_	typeref:typename:FT_Byte *
kern_table_size	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ULong              kern_table_size;$/;"	m	struct:TT_FaceRec_	typeref:typename:FT_ULong
key	.\\include\\curl\\curl.h	/^  const char *key; \/* points to a zero-terminated string encoded with base64$/;"	m	struct:curl_khkey	typeref:typename:const char *
key	.\\include\\freetype\\internal\\fthash.h	/^    FT_Hashkey  key;$/;"	m	struct:FT_HashnodeRec_	typeref:typename:FT_Hashkey
key_pressed	.\\src\\Window.cpp	/^static void key_pressed(GLFWwindow* window, int key, int scancode,$/;"	f	typeref:typename:void	file:
keytype	.\\include\\curl\\curl.h	/^  enum curl_khtype keytype;$/;"	m	struct:curl_khkey	typeref:enum:curl_khtype
language	.\\include\\freetype\\internal\\services\\svttcmap.h	/^    FT_ULong  language;$/;"	m	struct:TT_CMapInfo_	typeref:typename:FT_ULong
languageID	.\\include\\freetype\\internal\\tttypes.h	/^    FT_UShort  languageID;$/;"	m	struct:TT_NameEntryRec_	typeref:typename:FT_UShort
language_group	.\\include\\freetype\\t1tables.h	/^    FT_Long    language_group;$/;"	m	struct:PS_PrivateRec_	typeref:typename:FT_Long
language_id	.\\include\\freetype\\ftsnames.h	/^    FT_UShort  language_id;$/;"	m	struct:FT_SfntName_	typeref:typename:FT_UShort
last_char	.\\include\\freetype\\ftwinfnt.h	/^    FT_Byte    last_char;$/;"	m	struct:FT_WinFNT_HeaderRec_	typeref:typename:FT_Byte
last_glyph	.\\include\\freetype\\internal\\tttypes.h	/^    FT_UShort           last_glyph;$/;"	m	struct:TT_SBit_RangeRec_	typeref:typename:FT_UShort
lcd_extra	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_Int                   lcd_extra;        \/* number of extra pixels *\/$/;"	m	struct:FT_LibraryRec_	typeref:typename:FT_Int
lcd_filter	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_LcdFilter             lcd_filter;$/;"	m	struct:FT_LibraryRec_	typeref:typename:FT_LcdFilter
lcd_filter_func	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_Bitmap_LcdFilterFunc  lcd_filter_func;  \/* filtering callback     *\/$/;"	m	struct:FT_LibraryRec_	typeref:typename:FT_Bitmap_LcdFilterFunc
lcd_weights	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_Byte                  lcd_weights[7];   \/* filter weights, if any *\/$/;"	m	struct:FT_LibraryRec_	typeref:typename:FT_Byte[7]
left	.\\include\\freetype\\ftcache.h	/^    FT_Char   left;$/;"	m	struct:FTC_SBitRec_	typeref:typename:FT_Char
left	.\\include\\freetype\\ftglyph.h	/^    FT_Int       left;$/;"	m	struct:FT_BitmapGlyphRec_	typeref:typename:FT_Int
left_bearing	.\\include\\freetype\\internal\\psaux.h	/^    FT_Vector       left_bearing;$/;"	m	struct:T1_BuilderRec_	typeref:typename:FT_Vector
left_bearing	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Int           left_bearing;$/;"	m	struct:TT_LoaderRec_	typeref:typename:FT_Int
len	.\\include\\curl\\curl.h	/^  size_t len;$/;"	m	struct:curl_khkey	typeref:typename:size_t
len	.\\include\\freetype\\ftimage.h	/^    unsigned short  len;$/;"	m	struct:FT_Span_	typeref:typename:unsigned short
lenIV	.\\include\\freetype\\internal\\psaux.h	/^    FT_Int               lenIV;        \/* internal for sub routine calls *\/$/;"	m	struct:T1_DecoderRec_	typeref:typename:FT_Int
lenIV	.\\include\\freetype\\t1tables.h	/^    FT_Int     lenIV;$/;"	m	struct:PS_PrivateRec_	typeref:typename:FT_Int
len_buildchar	.\\include\\freetype\\internal\\psaux.h	/^    FT_UInt              len_buildchar;$/;"	m	struct:T1_DecoderRec_	typeref:typename:FT_UInt
len_buildchar	.\\include\\freetype\\internal\\t1types.h	/^    FT_UInt          len_buildchar;$/;"	m	struct:T1_FaceRec_	typeref:typename:FT_UInt
len_buildchar	.\\include\\freetype\\t1tables.h	/^    FT_UInt        len_buildchar;$/;"	m	struct:CID_FaceDictRec_	typeref:typename:FT_UInt
length	.\\include\\freetype\\fttypes.h	/^    FT_Int          length;$/;"	m	struct:FT_Data_	typeref:typename:FT_Int
length	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ULong   length;$/;"	m	struct:WOFF_HeaderRec_	typeref:typename:FT_ULong
lengths	.\\include\\freetype\\internal\\psaux.h	/^    FT_UInt*           lengths;        \/* lengths of table elements   *\/$/;"	m	struct:PS_TableRec_	typeref:typename:FT_UInt *
level	.\\include\\freetype\\internal\\ftvalid.h	/^    FT_ValidationLevel  level;       \/* validation level                 *\/$/;"	m	struct:FT_ValidatorRec_	typeref:typename:FT_ValidationLevel
libidn	.\\include\\curl\\curl.h	/^  const char *libidn;$/;"	m	struct:__anon529bf04d1d08	typeref:typename:const char *
library	.\\include\\freetype\\freetype.h	/^    FT_Library        library;$/;"	m	struct:FT_GlyphSlotRec_	typeref:typename:FT_Library
library	.\\include\\freetype\\ftglyph.h	/^    FT_Library             library;$/;"	m	struct:FT_GlyphRec_	typeref:typename:FT_Library
library	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_Library        library;$/;"	m	struct:FT_ModuleRec_	typeref:typename:FT_Library
libssh_version	.\\include\\curl\\curl.h	/^  const char *libssh_version; \/* human readable string *\/$/;"	m	struct:__anon529bf04d1d08	typeref:typename:const char *
libz_version	.\\include\\curl\\curl.h	/^  const char *libz_version; \/* human readable string *\/$/;"	m	struct:__anon529bf04d1d08	typeref:typename:const char *
limit	.\\include\\freetype\\ftautoh.h	/^    FT_UInt  limit;$/;"	m	struct:FT_Prop_IncreaseXHeight_	typeref:typename:FT_UInt
limit	.\\include\\freetype\\ftsystem.h	/^    unsigned char*       limit;$/;"	m	struct:FT_StreamRec_	typeref:typename:unsigned char *
limit	.\\include\\freetype\\internal\\fthash.h	/^    FT_UInt  limit;$/;"	m	struct:FT_HashRec_	typeref:typename:FT_UInt
limit	.\\include\\freetype\\internal\\ftvalid.h	/^    const FT_Byte*      limit;       \/* `base' + sizeof(table) in memory *\/$/;"	m	struct:FT_ValidatorRec_	typeref:typename:const FT_Byte *
limit	.\\include\\freetype\\internal\\psaux.h	/^    FT_Byte*      limit;   \/* first character after the token          *\/$/;"	m	struct:T1_TokenRec_	typeref:typename:FT_Byte *
limit	.\\include\\freetype\\internal\\psaux.h	/^    FT_Byte*   limit;$/;"	m	struct:PS_ParserRec_	typeref:typename:FT_Byte *
limit	.\\include\\freetype\\internal\\psaux.h	/^    FT_Byte*  limit;$/;"	m	struct:T1_Decoder_ZoneRec_	typeref:typename:FT_Byte *
limit	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Byte*         limit;$/;"	m	struct:TT_LoaderRec_	typeref:typename:FT_Byte *
line_to	.\\include\\freetype\\ftimage.h	/^    FT_Outline_LineToFunc   line_to;$/;"	m	struct:FT_Outline_Funcs_	typeref:typename:FT_Outline_LineToFunc
linear	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Int           linear;$/;"	m	struct:TT_LoaderRec_	typeref:typename:FT_Int
linearHoriAdvance	.\\include\\freetype\\freetype.h	/^    FT_Fixed          linearHoriAdvance;$/;"	m	struct:FT_GlyphSlotRec_	typeref:typename:FT_Fixed
linearVertAdvance	.\\include\\freetype\\freetype.h	/^    FT_Fixed          linearVertAdvance;$/;"	m	struct:FT_GlyphSlotRec_	typeref:typename:FT_Fixed
linear_def	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Bool          linear_def;$/;"	m	struct:TT_LoaderRec_	typeref:typename:FT_Bool
load_any	.\\include\\freetype\\internal\\sfnt.h	/^    TT_Load_Any_Func             load_any;$/;"	m	struct:SFNT_Interface_	typeref:typename:TT_Load_Any_Func
load_bhed	.\\include\\freetype\\internal\\sfnt.h	/^    TT_Load_Table_Func           load_bhed;$/;"	m	struct:SFNT_Interface_	typeref:typename:TT_Load_Table_Func
load_cmap	.\\include\\freetype\\internal\\sfnt.h	/^    TT_Load_Table_Func           load_cmap;$/;"	m	struct:SFNT_Interface_	typeref:typename:TT_Load_Table_Func
load_eblc	.\\include\\freetype\\internal\\sfnt.h	/^    TT_Load_Table_Func           load_eblc;$/;"	m	struct:SFNT_Interface_	typeref:typename:TT_Load_Table_Func
load_face	.\\include\\freetype\\internal\\sfnt.h	/^    TT_Load_Face_Func            load_face;$/;"	m	struct:SFNT_Interface_	typeref:typename:TT_Load_Face_Func
load_field	.\\include\\freetype\\internal\\psaux.h	/^    (*load_field)( PS_Parser       parser,$/;"	m	struct:PS_Parser_FuncsRec_	typeref:typename:FT_Error (*)(PS_Parser parser,const T1_Field field,void ** objects,FT_UInt max_objects,FT_ULong * pflags)
load_field_table	.\\include\\freetype\\internal\\psaux.h	/^    (*load_field_table)( PS_Parser       parser,$/;"	m	struct:PS_Parser_FuncsRec_	typeref:typename:FT_Error (*)(PS_Parser parser,const T1_Field field,void ** objects,FT_UInt max_objects,FT_ULong * pflags)
load_flags	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ULong         load_flags;$/;"	m	struct:TT_LoaderRec_	typeref:typename:FT_ULong
load_font_dir	.\\include\\freetype\\internal\\sfnt.h	/^    TT_Load_Table_Func           load_font_dir;$/;"	m	struct:SFNT_Interface_	typeref:typename:TT_Load_Table_Func
load_gasp	.\\include\\freetype\\internal\\sfnt.h	/^    TT_Load_Table_Func           load_gasp;$/;"	m	struct:SFNT_Interface_	typeref:typename:TT_Load_Table_Func
load_glyph	.\\include\\freetype\\internal\\autohint.h	/^    FT_AutoHinter_GlyphLoadFunc    load_glyph;$/;"	m	struct:FT_AutoHinter_InterfaceRec_	typeref:typename:FT_AutoHinter_GlyphLoadFunc
load_glyph	.\\include\\freetype\\internal\\ftdriver.h	/^    FT_Slot_LoadFunc         load_glyph;$/;"	m	struct:FT_Driver_ClassRec_	typeref:typename:FT_Slot_LoadFunc
load_head	.\\include\\freetype\\internal\\sfnt.h	/^    TT_Load_Table_Func           load_head;$/;"	m	struct:SFNT_Interface_	typeref:typename:TT_Load_Table_Func
load_hhea	.\\include\\freetype\\internal\\sfnt.h	/^    TT_Load_Metrics_Func         load_hhea;$/;"	m	struct:SFNT_Interface_	typeref:typename:TT_Load_Metrics_Func
load_hmtx	.\\include\\freetype\\internal\\sfnt.h	/^    TT_Load_Metrics_Func         load_hmtx;$/;"	m	struct:SFNT_Interface_	typeref:typename:TT_Load_Metrics_Func
load_kern	.\\include\\freetype\\internal\\sfnt.h	/^    TT_Load_Table_Func           load_kern;$/;"	m	struct:SFNT_Interface_	typeref:typename:TT_Load_Table_Func
load_maxp	.\\include\\freetype\\internal\\sfnt.h	/^    TT_Load_Table_Func           load_maxp;$/;"	m	struct:SFNT_Interface_	typeref:typename:TT_Load_Table_Func
load_name	.\\include\\freetype\\internal\\sfnt.h	/^    TT_Load_Table_Func           load_name;$/;"	m	struct:SFNT_Interface_	typeref:typename:TT_Load_Table_Func
load_os2	.\\include\\freetype\\internal\\sfnt.h	/^    TT_Load_Table_Func           load_os2;$/;"	m	struct:SFNT_Interface_	typeref:typename:TT_Load_Table_Func
load_pclt	.\\include\\freetype\\internal\\sfnt.h	/^    TT_Load_Table_Func           load_pclt;$/;"	m	struct:SFNT_Interface_	typeref:typename:TT_Load_Table_Func
load_points	.\\include\\freetype\\internal\\psaux.h	/^    FT_Bool         load_points;$/;"	m	struct:T1_BuilderRec_	typeref:typename:FT_Bool
load_post	.\\include\\freetype\\internal\\sfnt.h	/^    TT_Load_Table_Func           load_post;$/;"	m	struct:SFNT_Interface_	typeref:typename:TT_Load_Table_Func
load_sbit_image	.\\include\\freetype\\internal\\sfnt.h	/^    TT_Load_SBit_Image_Func      load_sbit_image;$/;"	m	struct:SFNT_Interface_	typeref:typename:TT_Load_SBit_Image_Func
load_strike_metrics	.\\include\\freetype\\internal\\sfnt.h	/^    TT_Load_Strike_Metrics_Func  load_strike_metrics;$/;"	m	struct:SFNT_Interface_	typeref:typename:TT_Load_Strike_Metrics_Func
loaded	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Bool    loaded;$/;"	m	struct:TT_BDFRec_	typeref:typename:FT_Bool
loaded	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Bool  loaded;$/;"	m	struct:TT_Post_NamesRec_	typeref:typename:FT_Bool
loader	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_GlyphLoader  loader;$/;"	m	struct:FT_Slot_InternalRec_	typeref:typename:FT_GlyphLoader
loader	.\\include\\freetype\\internal\\psaux.h	/^    FT_GlyphLoader  loader;$/;"	m	struct:T1_BuilderRec_	typeref:typename:FT_GlyphLoader
location	.\\include\\freetype\\internal\\psaux.h	/^    T1_FieldLocation    location;$/;"	m	struct:T1_FieldRec_	typeref:typename:T1_FieldLocation
long_metrics	.\\include\\freetype\\tttables.h	/^    void*      long_metrics;$/;"	m	struct:TT_HoriHeader_	typeref:typename:void *
long_metrics	.\\include\\freetype\\tttables.h	/^    void*      long_metrics;$/;"	m	struct:TT_VertHeader_	typeref:typename:void *
lookup	.\\include\\freetype\\internal\\fthash.h	/^    FT_Hash_LookupFunc   lookup;$/;"	m	struct:FT_HashRec_	typeref:typename:FT_Hash_LookupFunc
lsb_delta	.\\include\\freetype\\freetype.h	/^    FT_Pos            lsb_delta;$/;"	m	struct:FT_GlyphSlotRec_	typeref:typename:FT_Pos
main	.\\src\\Window.cpp	/^int main(void){$/;"	f	typeref:typename:int
majorVersion	.\\include\\freetype\\internal\\tttypes.h	/^    FT_UShort  majorVersion;$/;"	m	struct:WOFF_HeaderRec_	typeref:typename:FT_UShort
map	.\\include\\freetype\\ftautoh.h	/^    FT_UShort*  map;$/;"	m	struct:FT_Prop_GlyphToScriptMap_	typeref:typename:FT_UShort *
maps	.\\include\\freetype\\internal\\services\\svpscmap.h	/^    PS_UniMap*  maps;$/;"	m	struct:PS_UnicodesRec_	typeref:typename:PS_UniMap *
maxComponentDepth	.\\include\\freetype\\tttables.h	/^    FT_UShort  maxComponentDepth;$/;"	m	struct:TT_MaxProfile_	typeref:typename:FT_UShort
maxComponentElements	.\\include\\freetype\\tttables.h	/^    FT_UShort  maxComponentElements;$/;"	m	struct:TT_MaxProfile_	typeref:typename:FT_UShort
maxCompositeContours	.\\include\\freetype\\tttables.h	/^    FT_UShort  maxCompositeContours;$/;"	m	struct:TT_MaxProfile_	typeref:typename:FT_UShort
maxCompositePoints	.\\include\\freetype\\tttables.h	/^    FT_UShort  maxCompositePoints;$/;"	m	struct:TT_MaxProfile_	typeref:typename:FT_UShort
maxContours	.\\include\\freetype\\tttables.h	/^    FT_UShort  maxContours;$/;"	m	struct:TT_MaxProfile_	typeref:typename:FT_UShort
maxFunctionDefs	.\\include\\freetype\\tttables.h	/^    FT_UShort  maxFunctionDefs;$/;"	m	struct:TT_MaxProfile_	typeref:typename:FT_UShort
maxInstructionDefs	.\\include\\freetype\\tttables.h	/^    FT_UShort  maxInstructionDefs;$/;"	m	struct:TT_MaxProfile_	typeref:typename:FT_UShort
maxMemType1	.\\include\\freetype\\tttables.h	/^    FT_ULong  maxMemType1;$/;"	m	struct:TT_Postscript_	typeref:typename:FT_ULong
maxMemType42	.\\include\\freetype\\tttables.h	/^    FT_ULong  maxMemType42;$/;"	m	struct:TT_Postscript_	typeref:typename:FT_ULong
maxPPEM	.\\include\\freetype\\internal\\tttypes.h	/^    FT_UShort  maxPPEM;$/;"	m	struct:TT_GaspRangeRec_	typeref:typename:FT_UShort
maxPoints	.\\include\\freetype\\tttables.h	/^    FT_UShort  maxPoints;$/;"	m	struct:TT_MaxProfile_	typeref:typename:FT_UShort
maxSizeOfInstructions	.\\include\\freetype\\tttables.h	/^    FT_UShort  maxSizeOfInstructions;$/;"	m	struct:TT_MaxProfile_	typeref:typename:FT_UShort
maxStackElements	.\\include\\freetype\\tttables.h	/^    FT_UShort  maxStackElements;$/;"	m	struct:TT_MaxProfile_	typeref:typename:FT_UShort
maxStorage	.\\include\\freetype\\tttables.h	/^    FT_UShort  maxStorage;$/;"	m	struct:TT_MaxProfile_	typeref:typename:FT_UShort
maxTwilightPoints	.\\include\\freetype\\tttables.h	/^    FT_UShort  maxTwilightPoints;$/;"	m	struct:TT_MaxProfile_	typeref:typename:FT_UShort
maxZones	.\\include\\freetype\\tttables.h	/^    FT_UShort  maxZones;$/;"	m	struct:TT_MaxProfile_	typeref:typename:FT_UShort
max_advance	.\\include\\freetype\\freetype.h	/^    FT_Pos     max_advance; \/* max horizontal advance, in 26.6 pixels *\/$/;"	m	struct:FT_Size_Metrics_	typeref:typename:FT_Pos
max_advance_height	.\\include\\freetype\\freetype.h	/^    FT_Short          max_advance_height;$/;"	m	struct:FT_FaceRec_	typeref:typename:FT_Short
max_advance_width	.\\include\\freetype\\freetype.h	/^    FT_Short          max_advance_width;$/;"	m	struct:FT_FaceRec_	typeref:typename:FT_Short
max_before_BL	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Char  max_before_BL;$/;"	m	struct:TT_SBit_LineMetricsRec_	typeref:typename:FT_Char
max_contours	.\\include\\freetype\\internal\\ftgloadr.h	/^    FT_UInt          max_contours;$/;"	m	struct:FT_GlyphLoaderRec_	typeref:typename:FT_UInt
max_contours	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Short    max_contours;$/;"	m	struct:TT_GlyphZoneRec_	typeref:typename:FT_Short
max_elems	.\\include\\freetype\\internal\\psaux.h	/^    FT_Int             max_elems;$/;"	m	struct:PS_TableRec_	typeref:typename:FT_Int
max_grays	.\\include\\freetype\\ftcache.h	/^    FT_Byte   max_grays;$/;"	m	struct:FTC_SBitRec_	typeref:typename:FT_Byte
max_kern	.\\include\\freetype\\internal\\t1types.h	/^    FT_Fixed  max_kern;$/;"	m	struct:AFM_TrackKernRec_	typeref:typename:FT_Fixed
max_points	.\\include\\freetype\\internal\\ftgloadr.h	/^    FT_UInt          max_points;$/;"	m	struct:FT_GlyphLoaderRec_	typeref:typename:FT_UInt
max_points	.\\include\\freetype\\internal\\tttypes.h	/^    FT_UShort   max_points;$/;"	m	struct:TT_GlyphZoneRec_	typeref:typename:FT_UShort
max_profile	.\\include\\freetype\\internal\\tttypes.h	/^    TT_MaxProfile         max_profile;$/;"	m	struct:TT_FaceRec_	typeref:typename:TT_MaxProfile
max_ptsize	.\\include\\freetype\\internal\\t1types.h	/^    FT_Fixed  max_ptsize;$/;"	m	struct:AFM_TrackKernRec_	typeref:typename:FT_Fixed
max_subglyphs	.\\include\\freetype\\internal\\ftgloadr.h	/^    FT_UInt          max_subglyphs;$/;"	m	struct:FT_GlyphLoaderRec_	typeref:typename:FT_UInt
max_width	.\\include\\freetype\\ftwinfnt.h	/^    FT_UShort  max_width;$/;"	m	struct:FT_WinFNT_HeaderRec_	typeref:typename:FT_UShort
max_width	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Byte  max_width;$/;"	m	struct:TT_SBit_LineMetricsRec_	typeref:typename:FT_Byte
maximum	.\\include\\freetype\\ftmm.h	/^    FT_Fixed    maximum;$/;"	m	struct:FT_Var_Axis_	typeref:typename:FT_Fixed
maximum	.\\include\\freetype\\ftmm.h	/^    FT_Long     maximum;$/;"	m	struct:FT_MM_Axis_	typeref:typename:FT_Long
memory	.\\include\\freetype\\freetype.h	/^    FT_Memory         memory;$/;"	m	struct:FT_FaceRec_	typeref:typename:FT_Memory
memory	.\\include\\freetype\\ftsystem.h	/^    FT_Memory            memory;$/;"	m	struct:FT_StreamRec_	typeref:typename:FT_Memory
memory	.\\include\\freetype\\internal\\ftgloadr.h	/^    FT_Memory        memory;$/;"	m	struct:FT_GlyphLoaderRec_	typeref:typename:FT_Memory
memory	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_Memory          memory;           \/* library's memory manager *\/$/;"	m	struct:FT_LibraryRec_	typeref:typename:FT_Memory
memory	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_Memory         memory;$/;"	m	struct:FT_ModuleRec_	typeref:typename:FT_Memory
memory	.\\include\\freetype\\internal\\psaux.h	/^    FT_Memory          memory;$/;"	m	struct:PS_TableRec_	typeref:typename:FT_Memory
memory	.\\include\\freetype\\internal\\psaux.h	/^    FT_Memory       memory;$/;"	m	struct:T1_BuilderRec_	typeref:typename:FT_Memory
memory	.\\include\\freetype\\internal\\psaux.h	/^    FT_Memory     memory;$/;"	m	struct:AFM_ParserRec_	typeref:typename:FT_Memory
memory	.\\include\\freetype\\internal\\psaux.h	/^    FT_Memory  memory;$/;"	m	struct:PS_ParserRec_	typeref:typename:FT_Memory
memory	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Memory   memory;$/;"	m	struct:TT_GlyphZoneRec_	typeref:typename:FT_Memory
memory_base	.\\include\\freetype\\freetype.h	/^    const FT_Byte*  memory_base;$/;"	m	struct:FT_Open_Args_	typeref:typename:const FT_Byte *
memory_size	.\\include\\freetype\\freetype.h	/^    FT_Long         memory_size;$/;"	m	struct:FT_Open_Args_	typeref:typename:FT_Long
metaLength	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ULong   metaLength;$/;"	m	struct:WOFF_HeaderRec_	typeref:typename:FT_ULong
metaOffset	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ULong   metaOffset;$/;"	m	struct:WOFF_HeaderRec_	typeref:typename:FT_ULong
metaOrigLength	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ULong   metaOrigLength;$/;"	m	struct:WOFF_HeaderRec_	typeref:typename:FT_ULong
metric_Data_Format	.\\include\\freetype\\tttables.h	/^    FT_Short   metric_Data_Format;$/;"	m	struct:TT_HoriHeader_	typeref:typename:FT_Short
metric_Data_Format	.\\include\\freetype\\tttables.h	/^    FT_Short   metric_Data_Format;$/;"	m	struct:TT_VertHeader_	typeref:typename:FT_Short
metrics	.\\include\\freetype\\freetype.h	/^    FT_Glyph_Metrics  metrics;$/;"	m	struct:FT_GlyphSlotRec_	typeref:typename:FT_Glyph_Metrics
metrics	.\\include\\freetype\\freetype.h	/^    FT_Size_Metrics   metrics;   \/* size metrics                    *\/$/;"	m	struct:FT_SizeRec_	typeref:typename:FT_Size_Metrics
metrics	.\\include\\freetype\\internal\\tttypes.h	/^    TT_SBit_MetricsRec  metrics;$/;"	m	struct:TT_SBit_RangeRec_	typeref:typename:TT_SBit_MetricsRec
metrics_only	.\\include\\freetype\\internal\\psaux.h	/^    FT_Bool         metrics_only;$/;"	m	struct:T1_BuilderRec_	typeref:typename:FT_Bool
minMemType1	.\\include\\freetype\\tttables.h	/^    FT_ULong  minMemType1;$/;"	m	struct:TT_Postscript_	typeref:typename:FT_ULong
minMemType42	.\\include\\freetype\\tttables.h	/^    FT_ULong  minMemType42;$/;"	m	struct:TT_Postscript_	typeref:typename:FT_ULong
min_Bottom_Side_Bearing	.\\include\\freetype\\tttables.h	/^    FT_Short   min_Bottom_Side_Bearing; \/* minimum right-sb or bottom-sb   *\/$/;"	m	struct:TT_VertHeader_	typeref:typename:FT_Short
min_Left_Side_Bearing	.\\include\\freetype\\tttables.h	/^    FT_Short   min_Left_Side_Bearing;  \/* minimum left-sb       *\/$/;"	m	struct:TT_HoriHeader_	typeref:typename:FT_Short
min_Right_Side_Bearing	.\\include\\freetype\\tttables.h	/^    FT_Short   min_Right_Side_Bearing; \/* minimum right-sb      *\/$/;"	m	struct:TT_HoriHeader_	typeref:typename:FT_Short
min_Top_Side_Bearing	.\\include\\freetype\\tttables.h	/^    FT_Short   min_Top_Side_Bearing;    \/* minimum left-sb or top-sb       *\/$/;"	m	struct:TT_VertHeader_	typeref:typename:FT_Short
min_advance_SB	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Char  min_advance_SB;$/;"	m	struct:TT_SBit_LineMetricsRec_	typeref:typename:FT_Char
min_after_BL	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Char  min_after_BL;$/;"	m	struct:TT_SBit_LineMetricsRec_	typeref:typename:FT_Char
min_feature	.\\include\\freetype\\t1tables.h	/^    FT_Short   min_feature[2];$/;"	m	struct:PS_PrivateRec_	typeref:typename:FT_Short[2]
min_kern	.\\include\\freetype\\internal\\t1types.h	/^    FT_Fixed  min_kern;$/;"	m	struct:AFM_TrackKernRec_	typeref:typename:FT_Fixed
min_origin_SB	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Char  min_origin_SB;$/;"	m	struct:TT_SBit_LineMetricsRec_	typeref:typename:FT_Char
min_ptsize	.\\include\\freetype\\internal\\t1types.h	/^    FT_Fixed  min_ptsize;$/;"	m	struct:AFM_TrackKernRec_	typeref:typename:FT_Fixed
minimum	.\\include\\freetype\\ftmm.h	/^    FT_Fixed    minimum;$/;"	m	struct:FT_Var_Axis_	typeref:typename:FT_Fixed
minimum	.\\include\\freetype\\ftmm.h	/^    FT_Long     minimum;$/;"	m	struct:FT_MM_Axis_	typeref:typename:FT_Long
minorVersion	.\\include\\freetype\\internal\\tttypes.h	/^    FT_UShort  minorVersion;$/;"	m	struct:WOFF_HeaderRec_	typeref:typename:FT_UShort
module_done	.\\include\\freetype\\ftmodapi.h	/^    FT_Module_Destructor   module_done;$/;"	m	struct:FT_Module_Class_	typeref:typename:FT_Module_Destructor
module_flags	.\\include\\freetype\\ftmodapi.h	/^    FT_ULong               module_flags;$/;"	m	struct:FT_Module_Class_	typeref:typename:FT_ULong
module_init	.\\include\\freetype\\ftmodapi.h	/^    FT_Module_Constructor  module_init;$/;"	m	struct:FT_Module_Class_	typeref:typename:FT_Module_Constructor
module_interface	.\\include\\freetype\\ftmodapi.h	/^    const void*            module_interface;$/;"	m	struct:FT_Module_Class_	typeref:typename:const void *
module_name	.\\include\\freetype\\ftmodapi.h	/^    const FT_String*       module_name;$/;"	m	struct:FT_Module_Class_	typeref:typename:const FT_String *
module_requires	.\\include\\freetype\\ftmodapi.h	/^    FT_Fixed               module_requires;$/;"	m	struct:FT_Module_Class_	typeref:typename:FT_Fixed
module_size	.\\include\\freetype\\ftmodapi.h	/^    FT_Long                module_size;$/;"	m	struct:FT_Module_Class_	typeref:typename:FT_Long
module_version	.\\include\\freetype\\ftmodapi.h	/^    FT_Fixed               module_version;$/;"	m	struct:FT_Module_Class_	typeref:typename:FT_Fixed
modules	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_Module          modules[FT_MAX_MODULES];  \/* module objects  *\/$/;"	m	struct:FT_LibraryRec_	typeref:typename:FT_Module[]
more	.\\include\\curl\\curl.h	/^  struct curl_httppost *more;       \/* if one field name has more than one$/;"	m	struct:curl_httppost	typeref:struct:curl_httppost *
move_to	.\\include\\freetype\\ftimage.h	/^    FT_Outline_MoveToFunc   move_to;$/;"	m	struct:FT_Outline_Funcs_	typeref:typename:FT_Outline_MoveToFunc
msg	.\\include\\curl\\multi.h	/^  CURLMSG msg;       \/* what this message means *\/$/;"	m	struct:CURLMsg	typeref:typename:CURLMSG
nFontNames	.\\src\\Window.cpp	/^const int nFontNames = 2;$/;"	v	typeref:typename:const int
n_contours	.\\include\\freetype\\ftimage.h	/^    short       n_contours;      \/* number of contours in glyph        *\/$/;"	m	struct:FT_Outline_	typeref:typename:short
n_contours	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Short         n_contours;$/;"	m	struct:TT_LoaderRec_	typeref:typename:FT_Short
n_contours	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Short    n_contours;  \/* number of contours          *\/$/;"	m	struct:TT_GlyphZoneRec_	typeref:typename:FT_Short
n_points	.\\include\\freetype\\ftimage.h	/^    short       n_points;        \/* number of points in the glyph      *\/$/;"	m	struct:FT_Outline_	typeref:typename:short
n_points	.\\include\\freetype\\internal\\tttypes.h	/^    FT_UShort   n_points;    \/* number of points in zone    *\/$/;"	m	struct:TT_GlyphZoneRec_	typeref:typename:FT_UShort
name	.\\include\\curl\\curl.h	/^  char *name;                       \/* pointer to allocated name *\/$/;"	m	struct:curl_httppost	typeref:typename:char *
name	.\\include\\freetype\\ftmm.h	/^    FT_String*  name;$/;"	m	struct:FT_MM_Axis_	typeref:typename:FT_String *
name	.\\include\\freetype\\ftmm.h	/^    FT_String*  name;$/;"	m	struct:FT_Var_Axis_	typeref:typename:FT_String *
nameID	.\\include\\freetype\\internal\\tttypes.h	/^    FT_UShort  nameID;$/;"	m	struct:TT_NameEntryRec_	typeref:typename:FT_UShort
name_id	.\\include\\freetype\\ftsnames.h	/^    FT_UShort  name_id;$/;"	m	struct:FT_SfntName_	typeref:typename:FT_UShort
name_table	.\\include\\freetype\\internal\\tttypes.h	/^    TT_NameTableRec       name_table;   \/* name table              *\/$/;"	m	struct:TT_FaceRec_	typeref:typename:TT_NameTableRec
namedstyle	.\\include\\freetype\\ftmm.h	/^    FT_Var_Named_Style*  namedstyle;$/;"	m	struct:FT_MM_Var_	typeref:typename:FT_Var_Named_Style *
namelength	.\\include\\curl\\curl.h	/^  long namelength;                  \/* length of name length *\/$/;"	m	struct:curl_httppost	typeref:typename:long
names	.\\include\\freetype\\internal\\tttypes.h	/^    TT_NameEntryRec*  names;$/;"	m	struct:TT_NameTableRec_	typeref:typename:TT_NameEntryRec *
names	.\\include\\freetype\\internal\\tttypes.h	/^    } names;$/;"	m	struct:TT_Post_NamesRec_	typeref:union:TT_Post_NamesRec_::__anon5c6118fb010a
ndv_idx	.\\include\\freetype\\internal\\t1types.h	/^    FT_Int           ndv_idx;$/;"	m	struct:T1_FaceRec_	typeref:typename:FT_Int
next	.\\include\\Window.h	/^    struct raidBuffer *next;$/;"	m	struct:raidBuffer	typeref:struct:raidBuffer *
next	.\\include\\curl\\curl.h	/^  struct curl_httppost *next;       \/* next entry in the list *\/$/;"	m	struct:curl_httppost	typeref:struct:curl_httppost *
next	.\\include\\curl\\curl.h	/^  struct curl_slist *next;$/;"	m	struct:curl_slist	typeref:struct:curl_slist *
next	.\\include\\freetype\\freetype.h	/^    FT_GlyphSlot      next;$/;"	m	struct:FT_GlyphSlotRec_	typeref:typename:FT_GlyphSlot
next	.\\include\\freetype\\fttypes.h	/^    FT_ListNode  next;$/;"	m	struct:FT_ListNodeRec_	typeref:typename:FT_ListNode
no_recurse	.\\include\\freetype\\internal\\psaux.h	/^    FT_Bool         no_recurse;$/;"	m	struct:T1_BuilderRec_	typeref:typename:FT_Bool
nominal_point_size	.\\include\\freetype\\ftwinfnt.h	/^    FT_UShort  nominal_point_size;$/;"	m	struct:FT_WinFNT_HeaderRec_	typeref:typename:FT_UShort
notice	.\\include\\freetype\\t1tables.h	/^    FT_String*  notice;$/;"	m	struct:PS_FontInfoRec_	typeref:typename:FT_String *
num	.\\include\\freetype\\internal\\fthash.h	/^    FT_Int       num;$/;"	m	union:FT_Hashkey_	typeref:typename:FT_Int
numGlyphs	.\\include\\freetype\\tttables.h	/^    FT_UShort  numGlyphs;$/;"	m	struct:TT_MaxProfile_	typeref:typename:FT_UShort
numNameRecords	.\\include\\freetype\\internal\\tttypes.h	/^    FT_UInt           numNameRecords;$/;"	m	struct:TT_NameTableRec_	typeref:typename:FT_UInt
numRanges	.\\include\\freetype\\internal\\tttypes.h	/^    FT_UShort     numRanges;$/;"	m	struct:TT_Gasp_	typeref:typename:FT_UShort
num_axis	.\\include\\freetype\\ftmm.h	/^    FT_UInt              num_axis;$/;"	m	struct:FT_MM_Var_	typeref:typename:FT_UInt
num_axis	.\\include\\freetype\\ftmm.h	/^    FT_UInt     num_axis;$/;"	m	struct:FT_Multi_Master_	typeref:typename:FT_UInt
num_axis	.\\include\\freetype\\t1tables.h	/^    FT_UInt          num_axis;$/;"	m	struct:PS_BlendRec_	typeref:typename:FT_UInt
num_blue_values	.\\include\\freetype\\t1tables.h	/^    FT_Byte    num_blue_values;$/;"	m	struct:PS_PrivateRec_	typeref:typename:FT_Byte
num_charmaps	.\\include\\freetype\\freetype.h	/^    FT_Int            num_charmaps;$/;"	m	struct:FT_FaceRec_	typeref:typename:FT_Int
num_chars	.\\include\\freetype\\internal\\t1types.h	/^    FT_Int       num_chars;$/;"	m	struct:T1_EncodingRecRec_	typeref:typename:FT_Int
num_default_design_vector	.\\include\\freetype\\t1tables.h	/^    FT_UInt          num_default_design_vector;$/;"	m	struct:PS_BlendRec_	typeref:typename:FT_UInt
num_designs	.\\include\\freetype\\ftmm.h	/^    FT_UInt              num_designs;$/;"	m	struct:FT_MM_Var_	typeref:typename:FT_UInt
num_designs	.\\include\\freetype\\ftmm.h	/^    FT_UInt     num_designs;$/;"	m	struct:FT_Multi_Master_	typeref:typename:FT_UInt
num_designs	.\\include\\freetype\\t1tables.h	/^    FT_UInt          num_designs;$/;"	m	struct:PS_BlendRec_	typeref:typename:FT_UInt
num_dicts	.\\include\\freetype\\t1tables.h	/^    FT_Int          num_dicts;$/;"	m	struct:CID_FaceInfoRec_	typeref:typename:FT_Int
num_elems	.\\include\\freetype\\internal\\psaux.h	/^    FT_Int             num_elems;$/;"	m	struct:PS_TableRec_	typeref:typename:FT_Int
num_faces	.\\include\\freetype\\freetype.h	/^    FT_Long           num_faces;$/;"	m	struct:FT_FaceRec_	typeref:typename:FT_Long
num_family_blues	.\\include\\freetype\\t1tables.h	/^    FT_Byte    num_family_blues;$/;"	m	struct:PS_PrivateRec_	typeref:typename:FT_Byte
num_family_other_blues	.\\include\\freetype\\t1tables.h	/^    FT_Byte    num_family_other_blues;$/;"	m	struct:PS_PrivateRec_	typeref:typename:FT_Byte
num_fixed_sizes	.\\include\\freetype\\freetype.h	/^    FT_Int            num_fixed_sizes;$/;"	m	struct:FT_FaceRec_	typeref:typename:FT_Int
num_flex_vectors	.\\include\\freetype\\internal\\psaux.h	/^    FT_Int               num_flex_vectors;$/;"	m	struct:T1_DecoderRec_	typeref:typename:FT_Int
num_glyphs	.\\include\\freetype\\freetype.h	/^    FT_Long           num_glyphs;$/;"	m	struct:FT_FaceRec_	typeref:typename:FT_Long
num_glyphs	.\\include\\freetype\\internal\\psaux.h	/^    FT_UInt              num_glyphs;$/;"	m	struct:T1_DecoderRec_	typeref:typename:FT_UInt
num_glyphs	.\\include\\freetype\\internal\\t1types.h	/^    FT_Int           num_glyphs;$/;"	m	struct:T1_FontRec_	typeref:typename:FT_Int
num_glyphs	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ULong            num_glyphs;$/;"	m	struct:TT_SBit_RangeRec_	typeref:typename:FT_ULong
num_glyphs	.\\include\\freetype\\internal\\tttypes.h	/^    FT_UShort   num_glyphs;$/;"	m	struct:TT_Post_20Rec_	typeref:typename:FT_UShort
num_glyphs	.\\include\\freetype\\internal\\tttypes.h	/^    FT_UShort  num_glyphs;$/;"	m	struct:TT_Post_25_	typeref:typename:FT_UShort
num_grays	.\\include\\freetype\\ftimage.h	/^    unsigned short  num_grays;$/;"	m	struct:FT_Bitmap_	typeref:typename:unsigned short
num_kern_tables	.\\include\\freetype\\internal\\tttypes.h	/^    FT_UInt               num_kern_tables;$/;"	m	struct:TT_FaceRec_	typeref:typename:FT_UInt
num_locations	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ULong              num_locations; \/* in broken TTF, gid > 0xFFFF *\/$/;"	m	struct:TT_FaceRec_	typeref:typename:FT_ULong
num_maps	.\\include\\freetype\\internal\\services\\svpscmap.h	/^    FT_UInt     num_maps;$/;"	m	struct:PS_UnicodesRec_	typeref:typename:FT_UInt
num_modules	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_UInt            num_modules;$/;"	m	struct:FT_LibraryRec_	typeref:typename:FT_UInt
num_namedstyles	.\\include\\freetype\\ftmm.h	/^    FT_UInt              num_namedstyles;$/;"	m	struct:FT_MM_Var_	typeref:typename:FT_UInt
num_names	.\\include\\freetype\\internal\\tttypes.h	/^    FT_UShort             num_names;    \/* number of name records  *\/$/;"	m	struct:TT_FaceRec_	typeref:typename:FT_UShort
num_names	.\\include\\freetype\\internal\\tttypes.h	/^    FT_UShort   num_names;$/;"	m	struct:TT_Post_20Rec_	typeref:typename:FT_UShort
num_of_certs	.\\include\\curl\\curl.h	/^  int num_of_certs;             \/* number of certificates with information *\/$/;"	m	struct:curl_certinfo	typeref:typename:int
num_other_blues	.\\include\\freetype\\t1tables.h	/^    FT_Byte    num_other_blues;$/;"	m	struct:PS_PrivateRec_	typeref:typename:FT_Byte
num_params	.\\include\\freetype\\freetype.h	/^    FT_Int          num_params;$/;"	m	struct:FT_Open_Args_	typeref:typename:FT_Int
num_points	.\\include\\freetype\\t1tables.h	/^    FT_Byte    num_points;$/;"	m	struct:PS_DesignMap_	typeref:typename:FT_Byte
num_ranges	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Int                  num_ranges;$/;"	m	struct:TT_SBit_StrikeRec_	typeref:typename:FT_Int
num_sbit_scales	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ULong              num_sbit_scales;$/;"	m	struct:TT_FaceRec_	typeref:typename:FT_ULong
num_snap_heights	.\\include\\freetype\\t1tables.h	/^    FT_Byte    num_snap_heights;$/;"	m	struct:PS_PrivateRec_	typeref:typename:FT_Byte
num_snap_widths	.\\include\\freetype\\t1tables.h	/^    FT_Byte    num_snap_widths;$/;"	m	struct:PS_PrivateRec_	typeref:typename:FT_Byte
num_strikes	.\\include\\freetype\\internal\\tttypes.h	/^    FT_UInt    num_strikes;$/;"	m	struct:TT_BDFRec_	typeref:typename:FT_UInt
num_subglyphs	.\\include\\freetype\\freetype.h	/^    FT_UInt           num_subglyphs;$/;"	m	struct:FT_GlyphSlotRec_	typeref:typename:FT_UInt
num_subglyphs	.\\include\\freetype\\internal\\ftgloadr.h	/^    FT_UInt      num_subglyphs; \/* number of subglyphs       *\/$/;"	m	struct:FT_GlyphLoadRec_	typeref:typename:FT_UInt
num_subrs	.\\include\\freetype\\internal\\psaux.h	/^    FT_Int               num_subrs;$/;"	m	struct:T1_DecoderRec_	typeref:typename:FT_Int
num_subrs	.\\include\\freetype\\internal\\t1types.h	/^    FT_Int           num_subrs;$/;"	m	struct:T1_FontRec_	typeref:typename:FT_Int
num_subrs	.\\include\\freetype\\internal\\t1types.h	/^    FT_Int     num_subrs;$/;"	m	struct:CID_SubrsRec_	typeref:typename:FT_Int
num_subrs	.\\include\\freetype\\t1tables.h	/^    FT_UInt        num_subrs;$/;"	m	struct:CID_FaceDictRec_	typeref:typename:FT_UInt
num_tables	.\\include\\freetype\\internal\\tttypes.h	/^    FT_UShort             num_tables;$/;"	m	struct:TT_FaceRec_	typeref:typename:FT_UShort
num_tables	.\\include\\freetype\\internal\\tttypes.h	/^    FT_UShort  num_tables;$/;"	m	struct:SFNT_HeaderRec_	typeref:typename:FT_UShort
num_tables	.\\include\\freetype\\internal\\tttypes.h	/^    FT_UShort  num_tables;$/;"	m	struct:WOFF_HeaderRec_	typeref:typename:FT_UShort
num_xuid	.\\include\\freetype\\t1tables.h	/^    FT_Int          num_xuid;$/;"	m	struct:CID_FaceInfoRec_	typeref:typename:FT_Int
number_Of_HMetrics	.\\include\\freetype\\tttables.h	/^    FT_UShort  number_Of_HMetrics;$/;"	m	struct:TT_HoriHeader_	typeref:typename:FT_UShort
number_Of_VMetrics	.\\include\\freetype\\tttables.h	/^    FT_UShort  number_Of_VMetrics;$/;"	m	struct:TT_VertHeader_	typeref:typename:FT_UShort
oauth_add_param_to_array	.\\src\\oauth.cpp	/^void oauth_add_param_to_array(int *argcp, char ***argvp, const char *addparam) {$/;"	f	typeref:typename:void
oauth_add_protocol	.\\src\\oauth.cpp	/^void oauth_add_protocol(int *argcp, char ***argvp, $/;"	f	typeref:typename:void
oauth_b64_decode	.\\src\\oauth.cpp	/^unsigned char oauth_b64_decode(char c) {$/;"	f	typeref:typename:unsigned char
oauth_b64_encode	.\\src\\oauth.cpp	/^char oauth_b64_encode(unsigned char u) {$/;"	f	typeref:typename:char
oauth_b64_is_base64	.\\src\\oauth.cpp	/^int oauth_b64_is_base64(char c) {$/;"	f	typeref:typename:int
oauth_body_hash_data	.\\src\\hash.cpp	/^char *oauth_body_hash_data(size_t length, const char *data) {$/;"	f	typeref:typename:char *
oauth_body_hash_encode	.\\src\\oauth.cpp	/^char *oauth_body_hash_encode(size_t len, unsigned char *digest) {$/;"	f	typeref:typename:char *
oauth_body_hash_file	.\\src\\hash.cpp	/^char *oauth_body_hash_file(char *filename) {$/;"	f	typeref:typename:char *
oauth_catenc	.\\src\\oauth.cpp	/^char *oauth_catenc(int len, ...) {$/;"	f	typeref:typename:char *
oauth_cmpstringp	.\\src\\oauth.cpp	/^int oauth_cmpstringp(const void *p1, const void *p2) {$/;"	f	typeref:typename:int
oauth_decode_base64	.\\src\\oauth.cpp	/^int oauth_decode_base64(unsigned char *dest, const char *src) {$/;"	f	typeref:typename:int
oauth_encode_base64	.\\src\\oauth.cpp	/^char *oauth_encode_base64(int size, const unsigned char *src) {$/;"	f	typeref:typename:char *
oauth_free_array	.\\src\\oauth.cpp	/^void oauth_free_array(int *argcp, char ***argvp) {$/;"	f	typeref:typename:void
oauth_gen_nonce	.\\src\\oauth.cpp	/^char *oauth_gen_nonce() {$/;"	f	typeref:typename:char *
oauth_init_nss	.\\src\\hash.cpp	/^void oauth_init_nss() {$/;"	f	typeref:typename:void
oauth_param_exists	.\\src\\oauth.cpp	/^int oauth_param_exists(char **argv, int argc, const char *key) {$/;"	f	typeref:typename:int
oauth_serialize_url	.\\src\\oauth.cpp	/^char *oauth_serialize_url (int argc, int start, char **argv) {$/;"	f	typeref:typename:char *
oauth_serialize_url_parameters	.\\src\\oauth.cpp	/^char *oauth_serialize_url_parameters (int argc, char **argv) {$/;"	f	typeref:typename:char *
oauth_serialize_url_sep	.\\src\\oauth.cpp	/^char *oauth_serialize_url_sep (int argc, int start, char **argv, const char *sep, int mod) {$/;"	f	typeref:typename:char *
oauth_sign_array	.\\src\\oauth.cpp	/^char *oauth_sign_array (int *argcp, char***argvp,$/;"	f	typeref:typename:char *
oauth_sign_array2	.\\src\\oauth.cpp	/^char *oauth_sign_array2 (int *argcp, char***argvp,$/;"	f	typeref:typename:char *
oauth_sign_array2_process	.\\src\\oauth.cpp	/^void oauth_sign_array2_process (int *argcp, char***argvp,$/;"	f	typeref:typename:void
oauth_sign_hmac_sha1	.\\src\\hash.cpp	/^char *oauth_sign_hmac_sha1 (const char *m, const char *k) {$/;"	f	typeref:typename:char *
oauth_sign_hmac_sha1_raw	.\\src\\hash.cpp	/^char *oauth_sign_hmac_sha1_raw (const char *m, const size_t ml, const char *k, const size_t kl) /;"	f	typeref:typename:char *
oauth_sign_plaintext	.\\src\\oauth.cpp	/^char *oauth_sign_plaintext (const char *m, const char *k) {$/;"	f	typeref:typename:char *
oauth_sign_rsa_sha1	.\\src\\hash.cpp	/^char *oauth_sign_rsa_sha1 (const char *m, const char *k) {$/;"	f	typeref:typename:char *
oauth_sign_url	.\\src\\oauth.cpp	/^char *oauth_sign_url (const char *url, char **postargs, $/;"	f	typeref:typename:char *
oauth_sign_url2	.\\src\\oauth.cpp	/^char *oauth_sign_url2 (const char *url, char **postargs, $/;"	f	typeref:typename:char *
oauth_sign_xmpp	.\\src\\oauth.cpp	/^char *oauth_sign_xmpp (const char *xml,$/;"	f	typeref:typename:char *
oauth_split_post_paramters	.\\src\\oauth.cpp	/^int oauth_split_post_paramters(const char *url, char ***argv, short qesc) {$/;"	f	typeref:typename:int
oauth_split_url_parameters	.\\src\\oauth.cpp	/^int oauth_split_url_parameters(const char *url, char ***argv) {$/;"	f	typeref:typename:int
oauth_strip_pkcs	.\\src\\hash.cpp	/^char *oauth_strip_pkcs(const char *txt, const char *h, const char *t) {$/;"	f	typeref:typename:char *
oauth_time_independent_equals	.\\src\\oauth.cpp	/^int oauth_time_independent_equals(const char* a, const char* b) {$/;"	f	typeref:typename:int
oauth_time_independent_equals_n	.\\src\\oauth.cpp	/^int oauth_time_independent_equals_n(const char* a, const char* b, size_t len_a, size_t len_b) {$/;"	f	typeref:typename:int
oauth_time_indepenent_equals	.\\src\\oauth.cpp	/^int oauth_time_indepenent_equals(const char* a, const char* b) {$/;"	f	typeref:typename:int
oauth_time_indepenent_equals_n	.\\src\\oauth.cpp	/^int oauth_time_indepenent_equals_n(const char* a, const char* b, size_t len_a, size_t len_b) {$/;"	f	typeref:typename:int
oauth_url_escape	.\\src\\oauth.cpp	/^char *oauth_url_escape(const char *string) {$/;"	f	typeref:typename:char *
oauth_url_unescape	.\\src\\oauth.cpp	/^char *oauth_url_unescape(const char *string, size_t *olen) {$/;"	f	typeref:typename:char *
oauth_verify_rsa_sha1	.\\src\\hash.cpp	/^int oauth_verify_rsa_sha1 (const char *m, const char *c, const char *s) {$/;"	f	typeref:typename:int
oauth_verify_rsa_sha1	.\\src\\hash.cpp	/^int oauth_verify_rsa_sha1 (const char *m, const char *c, const char *sig) {$/;"	f	typeref:typename:int
object	.\\include\\freetype\\ftincrem.h	/^    FT_Incremental                  object;$/;"	m	struct:FT_Incremental_InterfaceRec_	typeref:typename:FT_Incremental
offset	.\\include\\freetype\\internal\\ftrfork.h	/^    FT_Long    offset;$/;"	m	struct:FT_RFork_Ref_	typeref:typename:FT_Long
offset	.\\include\\freetype\\internal\\ftstream.h	/^    FT_UShort  offset;$/;"	m	struct:FT_Frame_Field_	typeref:typename:FT_UShort
offset	.\\include\\freetype\\internal\\psaux.h	/^    FT_UInt             offset;       \/* offset of field in object      *\/$/;"	m	struct:T1_FieldRec_	typeref:typename:FT_UInt
offset	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ULong   offset;  \/* not in file *\/$/;"	m	struct:SFNT_HeaderRec_	typeref:typename:FT_ULong
offsets	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Char*   offsets;$/;"	m	struct:TT_Post_25_	typeref:typename:FT_Char *
offsets	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ULong*  offsets;$/;"	m	struct:TTC_HeaderRec_	typeref:typename:FT_ULong *
ogl_CheckExtensions	.\\src\\gl_core_3_3.cpp	/^void ogl_CheckExtensions()$/;"	f	typeref:typename:void
ogl_MapTable	.\\src\\gl_core_3_3.cpp	/^}ogl_MapTable;$/;"	t	typeref:struct:ogl_MapTable_s	file:
ogl_MapTable_s	.\\src\\gl_core_3_3.cpp	/^typedef struct ogl_MapTable_s$/;"	s	file:
ogl_ext_EXT_texture_compression_s3tc	.\\src\\gl_core_3_3.cpp	/^int ogl_ext_EXT_texture_compression_s3tc = 0;$/;"	v	typeref:typename:int
ogl_ext_EXT_texture_filter_anisotropic	.\\src\\gl_core_3_3.cpp	/^int ogl_ext_EXT_texture_filter_anisotropic = 0;$/;"	v	typeref:typename:int
ogl_ext_EXT_texture_sRGB	.\\src\\gl_core_3_3.cpp	/^int ogl_ext_EXT_texture_sRGB = 0;$/;"	v	typeref:typename:int
open	.\\include\\freetype\\internal\\pshints.h	/^    T1_Hints_OpenFunc      open;$/;"	m	struct:T1_Hints_FuncsRec_	typeref:typename:T1_Hints_OpenFunc
open	.\\include\\freetype\\internal\\pshints.h	/^    T2_Hints_OpenFunc     open;$/;"	m	struct:T2_Hints_FuncsRec_	typeref:typename:T2_Hints_OpenFunc
option	.\\include\\curl\\curl.h	/^  CURLformoption option;$/;"	m	struct:curl_forms	typeref:typename:CURLformoption
ordering	.\\include\\freetype\\t1tables.h	/^    FT_String*      ordering;$/;"	m	struct:CID_FaceInfoRec_	typeref:typename:FT_String *
org	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Vector*  org;         \/* original point coordinates  *\/$/;"	m	struct:TT_GlyphZoneRec_	typeref:typename:FT_Vector *
orus	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Vector*  orus;        \/* original (unscaled) point coordinates *\/$/;"	m	struct:TT_GlyphZoneRec_	typeref:typename:FT_Vector *
os2	.\\include\\freetype\\internal\\tttypes.h	/^    TT_OS2                os2;          \/* TrueType OS\/2 table            *\/$/;"	m	struct:TT_FaceRec_	typeref:typename:TT_OS2
other	.\\include\\freetype\\freetype.h	/^    void*             other;$/;"	m	struct:FT_GlyphSlotRec_	typeref:typename:void *
other	.\\include\\freetype\\internal\\ftgloadr.h	/^    void*            other;            \/* for possible future extension? *\/$/;"	m	struct:FT_GlyphLoaderRec_	typeref:typename:void *
other	.\\include\\freetype\\internal\\tttypes.h	/^    void*            other;$/;"	m	struct:TT_LoaderRec_	typeref:typename:void *
other_blues	.\\include\\freetype\\t1tables.h	/^    FT_Short   other_blues[10];$/;"	m	struct:PS_PrivateRec_	typeref:typename:FT_Short[10]
otv_validate_func	.\\include\\freetype\\internal\\services\\svotval.h	/^  (*otv_validate_func)( FT_Face volatile  face,$/;"	t	typeref:typename:FT_Error (*)(FT_Face volatile face,FT_UInt ot_flags,FT_Bytes * base,FT_Bytes * gdef,FT_Bytes * gpos,FT_Bytes * gsub,FT_Bytes * jstf)
outline	.\\include\\freetype\\freetype.h	/^    FT_Outline        outline;$/;"	m	struct:FT_GlyphSlotRec_	typeref:typename:FT_Outline
outline	.\\include\\freetype\\ftglyph.h	/^    FT_Outline   outline;$/;"	m	struct:FT_OutlineGlyphRec_	typeref:typename:FT_Outline
outline	.\\include\\freetype\\internal\\ftgloadr.h	/^    FT_Outline   outline;       \/* outline                   *\/$/;"	m	struct:FT_GlyphLoadRec_	typeref:typename:FT_Outline
pads	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Char  pads[2];$/;"	m	struct:TT_SBit_LineMetricsRec_	typeref:typename:FT_Char[2]
paint_type	.\\include\\freetype\\internal\\t1types.h	/^    FT_Byte          paint_type;$/;"	m	struct:T1_FontRec_	typeref:typename:FT_Byte
paint_type	.\\include\\freetype\\t1tables.h	/^    FT_Byte        paint_type;$/;"	m	struct:CID_FaceDictRec_	typeref:typename:FT_Byte
palette	.\\include\\freetype\\ftimage.h	/^    void*           palette;$/;"	m	struct:FT_Bitmap_	typeref:typename:void *
palette_mode	.\\include\\freetype\\ftimage.h	/^    unsigned char   palette_mode;$/;"	m	struct:FT_Bitmap_	typeref:typename:unsigned char
panose	.\\include\\freetype\\tttables.h	/^    FT_Byte    panose[10];$/;"	m	struct:TT_OS2_	typeref:typename:FT_Byte[10]
params	.\\include\\freetype\\freetype.h	/^    FT_Parameter*   params;$/;"	m	struct:FT_Open_Args_	typeref:typename:FT_Parameter *
parse	.\\include\\freetype\\internal\\psaux.h	/^    (*parse)( AFM_Parser  parser );$/;"	m	struct:AFM_Parser_FuncsRec_	typeref:typename:FT_Error (*)(AFM_Parser parser)
parse_callback	.\\include\\freetype\\internal\\psaux.h	/^    T1_Decoder_Callback  parse_callback;$/;"	m	struct:T1_DecoderRec_	typeref:typename:T1_Decoder_Callback
parse_charstrings	.\\include\\freetype\\internal\\psaux.h	/^    (*parse_charstrings)( T1_Decoder  decoder,$/;"	m	struct:T1_Decoder_FuncsRec_	typeref:typename:FT_Error (*)(T1_Decoder decoder,FT_Byte * base,FT_UInt len)
parse_state	.\\include\\freetype\\internal\\psaux.h	/^    T1_ParseState   parse_state;$/;"	m	struct:T1_BuilderRec_	typeref:typename:T1_ParseState
password	.\\include\\freetype\\t1tables.h	/^    FT_Long    password;$/;"	m	struct:PS_PrivateRec_	typeref:typename:FT_Long
pathname	.\\include\\freetype\\freetype.h	/^    FT_String*      pathname;$/;"	m	struct:FT_Open_Args_	typeref:typename:FT_String *
pathname	.\\include\\freetype\\ftsystem.h	/^    FT_StreamDesc        pathname;$/;"	m	struct:FT_StreamRec_	typeref:typename:FT_StreamDesc
pclt	.\\include\\freetype\\internal\\tttypes.h	/^    TT_PCLT               pclt;$/;"	m	struct:TT_FaceRec_	typeref:typename:TT_PCLT
perm	.\\include\\curl\\curl.h	/^    char *perm;$/;"	m	struct:curl_fileinfo::__anon529bf04d0208	typeref:typename:char *
perm	.\\include\\curl\\curl.h	/^  unsigned int perm;$/;"	m	struct:curl_fileinfo	typeref:typename:unsigned int
pic_container	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_PIC_Container   pic_container;$/;"	m	struct:FT_LibraryRec_	typeref:typename:FT_PIC_Container
pitch	.\\include\\freetype\\ftcache.h	/^    FT_Short  pitch;$/;"	m	struct:FTC_SBitRec_	typeref:typename:FT_Short
pitch	.\\include\\freetype\\ftimage.h	/^    int             pitch;$/;"	m	struct:FT_Bitmap_	typeref:typename:int
pitch_and_family	.\\include\\freetype\\ftwinfnt.h	/^    FT_Byte    pitch_and_family;$/;"	m	struct:FT_WinFNT_HeaderRec_	typeref:typename:FT_Byte
pixel	.\\include\\freetype\\ftcache.h	/^    FT_Int      pixel;$/;"	m	struct:FTC_ScalerRec_	typeref:typename:FT_Int
pixel_height	.\\include\\freetype\\ftwinfnt.h	/^    FT_UShort  pixel_height;$/;"	m	struct:FT_WinFNT_HeaderRec_	typeref:typename:FT_UShort
pixel_mode	.\\include\\freetype\\ftimage.h	/^    unsigned char   pixel_mode;$/;"	m	struct:FT_Bitmap_	typeref:typename:unsigned char
pixel_width	.\\include\\freetype\\ftwinfnt.h	/^    FT_UShort  pixel_width;$/;"	m	struct:FT_WinFNT_HeaderRec_	typeref:typename:FT_UShort
pixels	.\\include\\GLFW\\glfw3.h	/^    unsigned char* pixels;$/;"	m	struct:GLFWimage	typeref:typename:unsigned char *
platformID	.\\include\\freetype\\internal\\tttypes.h	/^    FT_UShort  platformID;$/;"	m	struct:TT_NameEntryRec_	typeref:typename:FT_UShort
platform_id	.\\include\\freetype\\freetype.h	/^    FT_UShort    platform_id;$/;"	m	struct:FT_CharMapRec_	typeref:typename:FT_UShort
platform_id	.\\include\\freetype\\ftsnames.h	/^    FT_UShort  platform_id;$/;"	m	struct:FT_SfntName_	typeref:typename:FT_UShort
pointer	.\\include\\freetype\\ftsystem.h	/^    void*  pointer;$/;"	m	union:FT_StreamDesc_	typeref:typename:void *
pointer	.\\include\\freetype\\fttypes.h	/^    const FT_Byte*  pointer;$/;"	m	struct:FT_Data_	typeref:typename:const FT_Byte *
points	.\\include\\freetype\\ftimage.h	/^    FT_Vector*  points;          \/* the outline's points               *\/$/;"	m	struct:FT_Outline_	typeref:typename:FT_Vector *
pos	.\\include\\freetype\\ftsystem.h	/^    unsigned long        pos;$/;"	m	struct:FT_StreamRec_	typeref:typename:unsigned long
pos_x	.\\include\\freetype\\internal\\psaux.h	/^    FT_Pos          pos_x;$/;"	m	struct:T1_BuilderRec_	typeref:typename:FT_Pos
pos_y	.\\include\\freetype\\internal\\psaux.h	/^    FT_Pos          pos_y;$/;"	m	struct:T1_BuilderRec_	typeref:typename:FT_Pos
postscript	.\\include\\freetype\\internal\\tttypes.h	/^    TT_Postscript         postscript;   \/* TrueType Postscript table      *\/$/;"	m	struct:TT_FaceRec_	typeref:typename:TT_Postscript
postscript_name	.\\include\\freetype\\internal\\tttypes.h	/^    const char*           postscript_name;$/;"	m	struct:TT_FaceRec_	typeref:typename:const char *
postscript_names	.\\include\\freetype\\internal\\tttypes.h	/^    TT_Post_NamesRec      postscript_names;$/;"	m	struct:TT_FaceRec_	typeref:typename:TT_Post_NamesRec
pp1	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Vector        pp1;$/;"	m	struct:TT_LoaderRec_	typeref:typename:FT_Vector
pp2	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Vector        pp2;$/;"	m	struct:TT_LoaderRec_	typeref:typename:FT_Vector
pp3	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Vector        pp3;$/;"	m	struct:TT_LoaderRec_	typeref:typename:FT_Vector
pp4	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Vector        pp4;$/;"	m	struct:TT_LoaderRec_	typeref:typename:FT_Vector
prev	.\\include\\freetype\\fttypes.h	/^    FT_ListNode  prev;$/;"	m	struct:FT_ListNodeRec_	typeref:typename:FT_ListNode
privLength	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ULong   privLength;$/;"	m	struct:WOFF_HeaderRec_	typeref:typename:FT_ULong
privOffset	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ULong   privOffset;$/;"	m	struct:WOFF_HeaderRec_	typeref:typename:FT_ULong
private_dict	.\\include\\freetype\\internal\\t1types.h	/^    PS_PrivateRec    private_dict;      \/* private dictionary     *\/$/;"	m	struct:T1_FontRec_	typeref:typename:PS_PrivateRec
private_dict	.\\include\\freetype\\t1tables.h	/^    PS_PrivateRec  private_dict;$/;"	m	struct:CID_FaceDictRec_	typeref:typename:PS_PrivateRec
privates	.\\include\\freetype\\t1tables.h	/^    PS_Private       privates  [T1_MAX_MM_DESIGNS + 1];$/;"	m	struct:PS_BlendRec_	typeref:typename:PS_Private[]
program	.\\src\\Window.cpp	/^GLuint program;$/;"	v	typeref:typename:GLuint
protocol	.\\include\\curl\\curl.h	/^  int protocol;$/;"	m	struct:curl_sockaddr	typeref:typename:int
protocols	.\\include\\curl\\curl.h	/^  const char * const *protocols;$/;"	m	struct:__anon529bf04d1d08	typeref:typename:const char * const *
ps_parser_funcs	.\\include\\freetype\\internal\\psaux.h	/^    const PS_Parser_FuncsRec*   ps_parser_funcs;$/;"	m	struct:PSAux_ServiceRec_	typeref:typename:const PS_Parser_FuncsRec *
ps_table_funcs	.\\include\\freetype\\internal\\psaux.h	/^    const PS_Table_FuncsRec*    ps_table_funcs;$/;"	m	struct:PSAux_ServiceRec_	typeref:typename:const PS_Table_FuncsRec *
psaux	.\\include\\freetype\\internal\\t1types.h	/^    const void*     psaux;$/;"	m	struct:T1_FaceRec_	typeref:typename:const void *
psaux	.\\include\\freetype\\internal\\t1types.h	/^    void*            psaux;$/;"	m	struct:CID_FaceRec_	typeref:typename:void *
pshinter	.\\include\\freetype\\internal\\ftpic.h	/^    void*  pshinter;$/;"	m	struct:FT_PIC_Container_	typeref:typename:void *
pshinter	.\\include\\freetype\\internal\\t1types.h	/^    const void*     pshinter;$/;"	m	struct:T1_FaceRec_	typeref:typename:const void *
pshinter	.\\include\\freetype\\internal\\t1types.h	/^    void*            pshinter;$/;"	m	struct:CID_FaceRec_	typeref:typename:void *
psnames	.\\include\\freetype\\internal\\ftpic.h	/^    void*  psnames;$/;"	m	struct:FT_PIC_Container_	typeref:typename:void *
psnames	.\\include\\freetype\\internal\\psaux.h	/^    FT_Service_PsCMaps   psnames;      \/* for seac *\/$/;"	m	struct:T1_DecoderRec_	typeref:typename:FT_Service_PsCMaps
psnames	.\\include\\freetype\\internal\\t1types.h	/^    const void*     psnames;$/;"	m	struct:T1_FaceRec_	typeref:typename:const void *
psnames	.\\include\\freetype\\internal\\t1types.h	/^    void*            psnames;$/;"	m	struct:CID_FaceRec_	typeref:typename:void *
psnames	.\\include\\freetype\\internal\\tttypes.h	/^    void*                 psnames;$/;"	m	struct:TT_FaceRec_	typeref:typename:void *
raidBoss	.\\include\\Window.h	/^    char *raidBoss; \/\/ Set on Twitter msg rec$/;"	m	struct:raidBuffer	typeref:typename:char *
raidBuffer	.\\include\\Window.h	/^struct raidBuffer {$/;"	s
raidBufferNode	.\\include\\Window.h	/^} raidBufferNode;$/;"	v	typeref:struct:raidBuffer
raidID	.\\include\\Window.h	/^    char *raidID; \/\/ Set on Twitter msg rec$/;"	m	struct:raidBuffer	typeref:typename:char *
raidNames	.\\include\\Window.h	/^const char* raidNames[] = {$/;"	v	typeref:typename:const char * []
raidNamesLength	.\\include\\Window.h	/^const int raidNamesLength = 14;$/;"	v	typeref:typename:const int
raidNumber	.\\include\\Window.h	/^    unsigned int raidNumber; \/\/ Set on Twitter msg rec$/;"	m	struct:raidBuffer	typeref:typename:unsigned int
raidShortcuts	.\\include\\Window.h	/^const char *raidShortcuts[raidNamesLength] = {$/;"	v	typeref:typename:const char * []
range_shift	.\\include\\freetype\\internal\\tttypes.h	/^    FT_UShort  range_shift;$/;"	m	struct:SFNT_HeaderRec_	typeref:typename:FT_UShort
ranges_offset	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ULong                ranges_offset;$/;"	m	struct:TT_SBit_StrikeRec_	typeref:typename:FT_ULong
raster	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_Raster               raster;$/;"	m	struct:FT_RendererRec_	typeref:typename:FT_Raster
raster	.\\include\\freetype\\internal\\ftpic.h	/^    void*  raster;$/;"	m	struct:FT_PIC_Container_	typeref:typename:void *
raster_class	.\\include\\freetype\\ftrender.h	/^    FT_Raster_Funcs*           raster_class;$/;"	m	struct:FT_Renderer_Class_	typeref:typename:FT_Raster_Funcs *
raster_done	.\\include\\freetype\\ftimage.h	/^    FT_Raster_DoneFunc     raster_done;$/;"	m	struct:FT_Raster_Funcs_	typeref:typename:FT_Raster_DoneFunc
raster_new	.\\include\\freetype\\ftimage.h	/^    FT_Raster_NewFunc      raster_new;$/;"	m	struct:FT_Raster_Funcs_	typeref:typename:FT_Raster_NewFunc
raster_pool	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_Byte*           raster_pool;      \/* scan-line conversion *\/$/;"	m	struct:FT_LibraryRec_	typeref:typename:FT_Byte *
raster_pool_size	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_ULong           raster_pool_size; \/* size of render pool in bytes *\/$/;"	m	struct:FT_LibraryRec_	typeref:typename:FT_ULong
raster_render	.\\include\\freetype\\ftimage.h	/^    FT_Raster_RenderFunc   raster_render;$/;"	m	struct:FT_Raster_Funcs_	typeref:typename:FT_Raster_RenderFunc
raster_render	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_Raster_Render_Func   raster_render;$/;"	m	struct:FT_RendererRec_	typeref:typename:FT_Raster_Render_Func
raster_reset	.\\include\\freetype\\ftimage.h	/^    FT_Raster_ResetFunc    raster_reset;$/;"	m	struct:FT_Raster_Funcs_	typeref:typename:FT_Raster_ResetFunc
raster_set_mode	.\\include\\freetype\\ftimage.h	/^    FT_Raster_SetModeFunc  raster_set_mode;$/;"	m	struct:FT_Raster_Funcs_	typeref:typename:FT_Raster_SetModeFunc
read	.\\include\\freetype\\ftsystem.h	/^    FT_Stream_IoFunc     read;$/;"	m	struct:FT_StreamRec_	typeref:typename:FT_Stream_IoFunc
read_composite_glyph	.\\include\\freetype\\internal\\tttypes.h	/^    TT_Loader_ReadGlyphFunc   read_composite_glyph;$/;"	m	struct:TT_FaceRec_	typeref:typename:TT_Loader_ReadGlyphFunc
read_glyph_header	.\\include\\freetype\\internal\\tttypes.h	/^    TT_Loader_ReadGlyphFunc   read_glyph_header;$/;"	m	struct:TT_FaceRec_	typeref:typename:TT_Loader_ReadGlyphFunc
read_simple_glyph	.\\include\\freetype\\internal\\tttypes.h	/^    TT_Loader_ReadGlyphFunc   read_simple_glyph;$/;"	m	struct:TT_FaceRec_	typeref:typename:TT_Loader_ReadGlyphFunc
reader	.\\include\\freetype\\internal\\psaux.h	/^    T1_Field_ParseFunc  reader;$/;"	m	struct:T1_FieldRec_	typeref:typename:T1_Field_ParseFunc
realloc	.\\include\\freetype\\ftsystem.h	/^    FT_Realloc_Func  realloc;$/;"	m	struct:FT_MemoryRec_	typeref:typename:FT_Realloc_Func
red	.\\include\\GLFW\\glfw3.h	/^    unsigned short* red;$/;"	m	struct:GLFWgammaramp	typeref:typename:unsigned short *
redBits	.\\include\\GLFW\\glfw3.h	/^    int redBits;$/;"	m	struct:GLFWvidmode	typeref:typename:int
refcount	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_Int              refcount;$/;"	m	struct:FT_Face_InternalRec_	typeref:typename:FT_Int
refcount	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_Int             refcount;$/;"	m	struct:FT_LibraryRec_	typeref:typename:FT_Int
refreshRate	.\\include\\GLFW\\glfw3.h	/^    int refreshRate;$/;"	m	struct:GLFWvidmode	typeref:typename:int
registry	.\\include\\freetype\\t1tables.h	/^    FT_String*      registry;$/;"	m	struct:CID_FaceInfoRec_	typeref:typename:FT_String *
release	.\\include\\freetype\\internal\\psaux.h	/^    (*release)( PS_Table  table );$/;"	m	struct:PS_Table_FuncsRec_	typeref:typename:void (*)(PS_Table table)
render	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_Renderer_RenderFunc  render;$/;"	m	struct:FT_RendererRec_	typeref:typename:FT_Renderer_RenderFunc
renderText	.\\src\\Window.cpp	/^void renderText(GLuint* prog, const char* text, GLfloat x, GLfloat y,$/;"	f	typeref:typename:void
render_glyph	.\\include\\freetype\\ftrender.h	/^    FT_Renderer_RenderFunc     render_glyph;$/;"	m	struct:FT_Renderer_Class_	typeref:typename:FT_Renderer_RenderFunc
renderers	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_ListRec         renderers;        \/* list of renderers        *\/$/;"	m	struct:FT_LibraryRec_	typeref:typename:FT_ListRec
request_size	.\\include\\freetype\\internal\\ftdriver.h	/^    FT_Size_RequestFunc      request_size;$/;"	m	struct:FT_Driver_ClassRec_	typeref:typename:FT_Size_RequestFunc
res_id	.\\include\\freetype\\internal\\ftrfork.h	/^    FT_UShort  res_id;$/;"	m	struct:FT_RFork_Ref_	typeref:typename:FT_UShort
reserved	.\\include\\freetype\\freetype.h	/^    FT_UInt           reserved;       \/* retained for binary compatibility *\/$/;"	m	struct:FT_GlyphSlotRec_	typeref:typename:FT_UInt
reserved	.\\include\\freetype\\ftwinfnt.h	/^    FT_Byte    reserved;$/;"	m	struct:FT_WinFNT_HeaderRec_	typeref:typename:FT_Byte
reserved	.\\include\\freetype\\internal\\tttypes.h	/^    FT_UShort  reserved;$/;"	m	struct:WOFF_HeaderRec_	typeref:typename:FT_UShort
reserved1	.\\include\\freetype\\ftwinfnt.h	/^    FT_ULong   reserved1[4];$/;"	m	struct:FT_WinFNT_HeaderRec_	typeref:typename:FT_ULong[4]
reset	.\\include\\freetype\\internal\\pshints.h	/^    T1_Hints_ResetFunc     reset;$/;"	m	struct:T1_Hints_FuncsRec_	typeref:typename:T1_Hints_ResetFunc
reset_face	.\\include\\freetype\\internal\\autohint.h	/^    FT_AutoHinter_GlobalResetFunc  reset_face;$/;"	m	struct:FT_AutoHinter_InterfaceRec_	typeref:typename:FT_AutoHinter_GlobalResetFunc
result	.\\include\\curl\\multi.h	/^    CURLcode result;   \/* return code for transfer *\/$/;"	m	union:CURLMsg::__anona7791d62030a	typeref:typename:CURLcode
revents	.\\include\\curl\\multi.h	/^  short revents; \/* not supported yet *\/$/;"	m	struct:curl_waitfd	typeref:typename:short
root	.\\include\\freetype\\ftglyph.h	/^    FT_GlyphRec  root;$/;"	m	struct:FT_BitmapGlyphRec_	typeref:typename:FT_GlyphRec
root	.\\include\\freetype\\ftglyph.h	/^    FT_GlyphRec  root;$/;"	m	struct:FT_OutlineGlyphRec_	typeref:typename:FT_GlyphRec
root	.\\include\\freetype\\ftrender.h	/^    FT_Module_Class            root;$/;"	m	struct:FT_Renderer_Class_	typeref:typename:FT_Module_Class
root	.\\include\\freetype\\internal\\ftdriver.h	/^    FT_Module_Class          root;$/;"	m	struct:FT_Driver_ClassRec_	typeref:typename:FT_Module_Class
root	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_ModuleRec            root;$/;"	m	struct:FT_RendererRec_	typeref:typename:FT_ModuleRec
root	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_ModuleRec     root;$/;"	m	struct:FT_DriverRec_	typeref:typename:FT_ModuleRec
root	.\\include\\freetype\\internal\\t1types.h	/^    FT_FaceRec       root;$/;"	m	struct:CID_FaceRec_	typeref:typename:FT_FaceRec
root	.\\include\\freetype\\internal\\t1types.h	/^    FT_FaceRec      root;$/;"	m	struct:T1_FaceRec_	typeref:typename:FT_FaceRec
root	.\\include\\freetype\\internal\\tttypes.h	/^    FT_FaceRec            root;$/;"	m	struct:TT_FaceRec_	typeref:typename:FT_FaceRec
round_stem_up	.\\include\\freetype\\t1tables.h	/^    FT_Bool    round_stem_up;$/;"	m	struct:PS_PrivateRec_	typeref:typename:FT_Bool
rows	.\\include\\freetype\\ftimage.h	/^    unsigned int    rows;$/;"	m	struct:FT_Bitmap_	typeref:typename:unsigned int
rsb_delta	.\\include\\freetype\\freetype.h	/^    FT_Pos            rsb_delta;$/;"	m	struct:FT_GlyphSlotRec_	typeref:typename:FT_Pos
sCapHeight	.\\include\\freetype\\tttables.h	/^    FT_Short   sCapHeight;$/;"	m	struct:TT_OS2_	typeref:typename:FT_Short
sFamilyClass	.\\include\\freetype\\tttables.h	/^    FT_Short   sFamilyClass;$/;"	m	struct:TT_OS2_	typeref:typename:FT_Short
sTypoAscender	.\\include\\freetype\\tttables.h	/^    FT_Short   sTypoAscender;$/;"	m	struct:TT_OS2_	typeref:typename:FT_Short
sTypoDescender	.\\include\\freetype\\tttables.h	/^    FT_Short   sTypoDescender;$/;"	m	struct:TT_OS2_	typeref:typename:FT_Short
sTypoLineGap	.\\include\\freetype\\tttables.h	/^    FT_Short   sTypoLineGap;$/;"	m	struct:TT_OS2_	typeref:typename:FT_Short
sbit_num_strikes	.\\include\\freetype\\internal\\tttypes.h	/^    FT_UInt               sbit_num_strikes;$/;"	m	struct:TT_FaceRec_	typeref:typename:FT_UInt
sbit_ranges	.\\include\\freetype\\internal\\tttypes.h	/^    TT_SBit_Range           sbit_ranges;$/;"	m	struct:TT_SBit_StrikeRec_	typeref:typename:TT_SBit_Range
sbit_scales	.\\include\\freetype\\internal\\tttypes.h	/^    TT_SBit_Scale         sbit_scales;$/;"	m	struct:TT_FaceRec_	typeref:typename:TT_SBit_Scale
sbit_table	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Byte*              sbit_table;$/;"	m	struct:TT_FaceRec_	typeref:typename:FT_Byte *
sbit_table_size	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ULong              sbit_table_size;$/;"	m	struct:TT_FaceRec_	typeref:typename:FT_ULong
sbit_table_type	.\\include\\freetype\\internal\\tttypes.h	/^    TT_SbitTableType      sbit_table_type;$/;"	m	struct:TT_FaceRec_	typeref:typename:TT_SbitTableType
sd_bytes	.\\include\\freetype\\t1tables.h	/^    FT_Int         sd_bytes;$/;"	m	struct:CID_FaceDictRec_	typeref:typename:FT_Int
seac	.\\include\\freetype\\internal\\psaux.h	/^    FT_Bool              seac;$/;"	m	struct:T1_DecoderRec_	typeref:typename:FT_Bool
search_range	.\\include\\freetype\\internal\\tttypes.h	/^    FT_UShort  search_range;$/;"	m	struct:SFNT_HeaderRec_	typeref:typename:FT_UShort
select_size	.\\include\\freetype\\internal\\ftdriver.h	/^    FT_Size_SelectFunc       select_size;$/;"	m	struct:FT_Driver_ClassRec_	typeref:typename:FT_Size_SelectFunc
serv_data	.\\include\\freetype\\internal\\ftserv.h	/^    const void*  serv_data;   \/* service pointer\/data *\/$/;"	m	struct:FT_ServiceDescRec_	typeref:typename:const void *
serv_id	.\\include\\freetype\\internal\\ftserv.h	/^    const char*  serv_id;     \/* service name         *\/$/;"	m	struct:FT_ServiceDescRec_	typeref:typename:const char *
service_GLYPH_DICT	.\\include\\freetype\\internal\\ftserv.h	/^    FT_Pointer  service_GLYPH_DICT;$/;"	m	struct:FT_ServiceCacheRec_	typeref:typename:FT_Pointer
service_MULTI_MASTERS	.\\include\\freetype\\internal\\ftserv.h	/^    FT_Pointer  service_MULTI_MASTERS;$/;"	m	struct:FT_ServiceCacheRec_	typeref:typename:FT_Pointer
service_PFR_METRICS	.\\include\\freetype\\internal\\ftserv.h	/^    FT_Pointer  service_PFR_METRICS;$/;"	m	struct:FT_ServiceCacheRec_	typeref:typename:FT_Pointer
service_POSTSCRIPT_FONT_NAME	.\\include\\freetype\\internal\\ftserv.h	/^    FT_Pointer  service_POSTSCRIPT_FONT_NAME;$/;"	m	struct:FT_ServiceCacheRec_	typeref:typename:FT_Pointer
service_WINFNT	.\\include\\freetype\\internal\\ftserv.h	/^    FT_Pointer  service_WINFNT;$/;"	m	struct:FT_ServiceCacheRec_	typeref:typename:FT_Pointer
services	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_ServiceCacheRec  services;$/;"	m	struct:FT_Face_InternalRec_	typeref:typename:FT_ServiceCacheRec
setFontColor	.\\src\\Window.cpp	/^void setFontColor(float* colorVar, int colorChoice){$/;"	f	typeref:typename:void
setProjectionMatrix	.\\src\\Window.cpp	/^void setProjectionMatrix(GLuint *prog, int screen_width, int screen_height){$/;"	f	typeref:typename:void
set_mode	.\\include\\freetype\\ftrender.h	/^    FT_Renderer_SetModeFunc    set_mode;$/;"	m	struct:FT_Renderer_Class_	typeref:typename:FT_Renderer_SetModeFunc
set_sbit_strike	.\\include\\freetype\\internal\\sfnt.h	/^    TT_Set_SBit_Strike_Func      set_sbit_strike;$/;"	m	struct:SFNT_Interface_	typeref:typename:TT_Set_SBit_Strike_Func
set_scale	.\\include\\freetype\\internal\\pshints.h	/^    PSH_Globals_SetScaleFunc  set_scale;$/;"	m	struct:PSH_Globals_FuncsRec_	typeref:typename:PSH_Globals_SetScaleFunc
sfnt	.\\include\\freetype\\internal\\ftpic.h	/^    void*  sfnt;$/;"	m	struct:FT_PIC_Container_	typeref:typename:void *
sfnt	.\\include\\freetype\\internal\\tttypes.h	/^    void*                 sfnt;$/;"	m	struct:TT_FaceRec_	typeref:typename:void *
shift	.\\include\\freetype\\ftimage.h	/^    int                     shift;$/;"	m	struct:FT_Outline_Funcs_	typeref:typename:int
short_metrics	.\\include\\freetype\\tttables.h	/^    void*      short_metrics;$/;"	m	struct:TT_HoriHeader_	typeref:typename:void *
short_metrics	.\\include\\freetype\\tttables.h	/^    void*      short_metrics;$/;"	m	struct:TT_VertHeader_	typeref:typename:void *
showfilename	.\\include\\curl\\curl.h	/^  char *showfilename;               \/* The file name to show. If not set, the$/;"	m	struct:curl_httppost	typeref:typename:char *
signature	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ULong   signature;$/;"	m	struct:WOFF_HeaderRec_	typeref:typename:FT_ULong
size	.\\include\\GLFW\\glfw3.h	/^    unsigned int size;$/;"	m	struct:GLFWgammaramp	typeref:typename:unsigned int
size	.\\include\\curl\\curl.h	/^  curl_off_t size;$/;"	m	struct:curl_fileinfo	typeref:typename:curl_off_t
size	.\\include\\freetype\\freetype.h	/^    FT_Pos    size;$/;"	m	struct:FT_Bitmap_Size_	typeref:typename:FT_Pos
size	.\\include\\freetype\\freetype.h	/^    FT_Size           size;$/;"	m	struct:FT_FaceRec_	typeref:typename:FT_Size
size	.\\include\\freetype\\ftsystem.h	/^    unsigned long        size;$/;"	m	struct:FT_StreamRec_	typeref:typename:unsigned long
size	.\\include\\freetype\\internal\\fthash.h	/^    FT_UInt  size;$/;"	m	struct:FT_HashRec_	typeref:typename:FT_UInt
size	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_ULong               size;$/;"	m	struct:FT_CMap_ClassRec_	typeref:typename:FT_ULong
size	.\\include\\freetype\\internal\\ftstream.h	/^    FT_Byte    size;$/;"	m	struct:FT_Frame_Field_	typeref:typename:FT_Byte
size	.\\include\\freetype\\internal\\psaux.h	/^    FT_Byte             size;         \/* size of field in bytes         *\/$/;"	m	struct:T1_FieldRec_	typeref:typename:FT_Byte
size	.\\include\\freetype\\internal\\tttypes.h	/^    TT_Size          size;$/;"	m	struct:TT_LoaderRec_	typeref:typename:TT_Size
size_object_size	.\\include\\freetype\\internal\\ftdriver.h	/^    FT_Long                  size_object_size;$/;"	m	struct:FT_Driver_ClassRec_	typeref:typename:FT_Long
sizes_list	.\\include\\freetype\\freetype.h	/^    FT_ListRec        sizes_list;$/;"	m	struct:FT_FaceRec_	typeref:typename:FT_ListRec
skip_PS_token	.\\include\\freetype\\internal\\psaux.h	/^    (*skip_PS_token)( PS_Parser  parser );$/;"	m	struct:PS_Parser_FuncsRec_	typeref:typename:void (*)(PS_Parser parser)
skip_spaces	.\\include\\freetype\\internal\\psaux.h	/^    (*skip_spaces)( PS_Parser  parser );$/;"	m	struct:PS_Parser_FuncsRec_	typeref:typename:void (*)(PS_Parser parser)
slot_object_size	.\\include\\freetype\\internal\\ftdriver.h	/^    FT_Long                  slot_object_size;$/;"	m	struct:FT_Driver_ClassRec_	typeref:typename:FT_Long
smooth	.\\include\\freetype\\internal\\ftpic.h	/^    void*  smooth;$/;"	m	struct:FT_PIC_Container_	typeref:typename:void *
snap_heights	.\\include\\freetype\\t1tables.h	/^    FT_Short   snap_heights[13];  \/* including std height *\/$/;"	m	struct:PS_PrivateRec_	typeref:typename:FT_Short[13]
snap_widths	.\\include\\freetype\\t1tables.h	/^    FT_Short   snap_widths [13];  \/* including std width  *\/$/;"	m	struct:PS_PrivateRec_	typeref:typename:FT_Short[13]
snprintf	.\\src\\oauth.cpp	/^#define snprintf /;"	d	file:
socktype	.\\include\\curl\\curl.h	/^  int socktype;$/;"	m	struct:curl_sockaddr	typeref:typename:int
source	.\\include\\freetype\\ftimage.h	/^    const void*             source;$/;"	m	struct:FT_Raster_Params_	typeref:typename:const void *
sph_compatibility_mode	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Bool               sph_compatibility_mode;$/;"	m	struct:TT_FaceRec_	typeref:typename:FT_Bool
sph_found_func_flags	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ULong              sph_found_func_flags; \/* special functions found *\/$/;"	m	struct:TT_FaceRec_	typeref:typename:FT_ULong
ssl_version	.\\include\\curl\\curl.h	/^  const char *ssl_version;  \/* human readable string *\/$/;"	m	struct:__anon529bf04d1d08	typeref:typename:const char *
ssl_version_num	.\\include\\curl\\curl.h	/^  long ssl_version_num;     \/* not used anymore, always 0 *\/$/;"	m	struct:__anon529bf04d1d08	typeref:typename:long
stack	.\\include\\freetype\\internal\\psaux.h	/^    FT_Long              stack[T1_MAX_CHARSTRINGS_OPERANDS];$/;"	m	struct:T1_DecoderRec_	typeref:typename:FT_Long[]
standard	.\\include\\freetype\\internal\\psaux.h	/^    FT_CMap_Class  standard;$/;"	m	struct:T1_CMap_ClassesRec_	typeref:typename:FT_CMap_Class
standard_height	.\\include\\freetype\\t1tables.h	/^    FT_UShort  standard_height[1];$/;"	m	struct:PS_PrivateRec_	typeref:typename:FT_UShort[1]
standard_width	.\\include\\freetype\\t1tables.h	/^    FT_UShort  standard_width[1];$/;"	m	struct:PS_PrivateRec_	typeref:typename:FT_UShort[1]
start	.\\include\\freetype\\internal\\psaux.h	/^    FT_Byte*      start;   \/* first character of token in input stream *\/$/;"	m	struct:T1_TokenRec_	typeref:typename:FT_Byte *
start_glyph	.\\include\\freetype\\internal\\tttypes.h	/^    FT_UShort               start_glyph;$/;"	m	struct:TT_SBit_StrikeRec_	typeref:typename:FT_UShort
start_point	.\\include\\freetype\\internal\\psaux.h	/^    T1_Builder_Start_Point_Func    start_point;$/;"	m	struct:T1_Builder_FuncsRec_	typeref:typename:T1_Builder_Start_Point_Func
stem	.\\include\\freetype\\internal\\pshints.h	/^    T1_Hints_SetStemFunc   stem;$/;"	m	struct:T1_Hints_FuncsRec_	typeref:typename:T1_Hints_SetStemFunc
stem3	.\\include\\freetype\\internal\\pshints.h	/^    T1_Hints_SetStem3Func  stem3;$/;"	m	struct:T1_Hints_FuncsRec_	typeref:typename:T1_Hints_SetStem3Func
stems	.\\include\\freetype\\internal\\pshints.h	/^    T2_Hints_StemsFunc    stems;$/;"	m	struct:T2_Hints_FuncsRec_	typeref:typename:T2_Hints_StemsFunc
storageOffset	.\\include\\freetype\\internal\\tttypes.h	/^    FT_UInt           storageOffset;$/;"	m	struct:TT_NameTableRec_	typeref:typename:FT_UInt
str	.\\include\\freetype\\internal\\fthash.h	/^    const char*  str;$/;"	m	union:FT_Hashkey_	typeref:typename:const char *
stream	.\\include\\freetype\\freetype.h	/^    FT_Stream         stream;$/;"	m	struct:FT_FaceRec_	typeref:typename:FT_Stream
stream	.\\include\\freetype\\freetype.h	/^    FT_Stream       stream;$/;"	m	struct:FT_Open_Args_	typeref:typename:FT_Stream
stream	.\\include\\freetype\\internal\\psaux.h	/^    AFM_Stream    stream;$/;"	m	struct:AFM_ParserRec_	typeref:typename:AFM_Stream
stream	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Stream         stream;$/;"	m	struct:TT_NameTableRec_	typeref:typename:FT_Stream
stream	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Stream        stream;$/;"	m	struct:TT_LoaderRec_	typeref:typename:FT_Stream
strid	.\\include\\freetype\\ftmm.h	/^    FT_UInt     strid;$/;"	m	struct:FT_Var_Axis_	typeref:typename:FT_UInt
strid	.\\include\\freetype\\ftmm.h	/^    FT_UInt    strid;$/;"	m	struct:FT_Var_Named_Style_	typeref:typename:FT_UInt
strike_out	.\\include\\freetype\\ftwinfnt.h	/^    FT_Byte    strike_out;$/;"	m	struct:FT_WinFNT_HeaderRec_	typeref:typename:FT_Byte
string	.\\include\\freetype\\ftsnames.h	/^    FT_Byte*   string;      \/* this string is *not* null-terminated! *\/$/;"	m	struct:FT_SfntName_	typeref:typename:FT_Byte *
string	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Byte*   string;$/;"	m	struct:TT_NameEntryRec_	typeref:typename:FT_Byte *
stringLength	.\\include\\freetype\\internal\\tttypes.h	/^    FT_UShort  stringLength;$/;"	m	struct:TT_NameEntryRec_	typeref:typename:FT_UShort
stringOffset	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ULong   stringOffset;$/;"	m	struct:TT_NameEntryRec_	typeref:typename:FT_ULong
stringSize	.\\src\\Window.cpp	/^static size_t stringSize(const char* ary){$/;"	f	typeref:typename:size_t	file:
string_len	.\\include\\freetype\\ftsnames.h	/^    FT_UInt    string_len;  \/* in bytes *\/$/;"	m	struct:FT_SfntName_	typeref:typename:FT_UInt
strings	.\\include\\curl\\curl.h	/^  } strings;$/;"	m	struct:curl_fileinfo	typeref:struct:curl_fileinfo::__anon529bf04d0208
strings	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Byte*   strings;$/;"	m	struct:TT_BDFRec_	typeref:typename:FT_Byte *
strings_size	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ULong   strings_size;$/;"	m	struct:TT_BDFRec_	typeref:typename:FT_ULong
strncasecmp	.\\src\\oauth.cpp	/^#define strncasecmp /;"	d	file:
stroke_width	.\\include\\freetype\\internal\\t1types.h	/^    FT_Fixed         stroke_width;$/;"	m	struct:T1_FontRec_	typeref:typename:FT_Fixed
stroke_width	.\\include\\freetype\\t1tables.h	/^    FT_Pos         stroke_width;$/;"	m	struct:CID_FaceDictRec_	typeref:typename:FT_Pos
style_flags	.\\include\\freetype\\freetype.h	/^    FT_Long           style_flags;$/;"	m	struct:FT_FaceRec_	typeref:typename:FT_Long
style_name	.\\include\\freetype\\freetype.h	/^    FT_String*        style_name;$/;"	m	struct:FT_FaceRec_	typeref:typename:FT_String *
subglyphs	.\\include\\freetype\\freetype.h	/^    FT_SubGlyph       subglyphs;$/;"	m	struct:FT_GlyphSlotRec_	typeref:typename:FT_SubGlyph
subglyphs	.\\include\\freetype\\internal\\ftgloadr.h	/^    FT_SubGlyph  subglyphs;     \/* subglyphs                 *\/$/;"	m	struct:FT_GlyphLoadRec_	typeref:typename:FT_SubGlyph
subrmap_offset	.\\include\\freetype\\t1tables.h	/^    FT_ULong       subrmap_offset;$/;"	m	struct:CID_FaceDictRec_	typeref:typename:FT_ULong
subrs	.\\include\\freetype\\internal\\psaux.h	/^    FT_Byte**            subrs;$/;"	m	struct:T1_DecoderRec_	typeref:typename:FT_Byte **
subrs	.\\include\\freetype\\internal\\t1types.h	/^    CID_Subrs        subrs;$/;"	m	struct:CID_FaceRec_	typeref:typename:CID_Subrs
subrs	.\\include\\freetype\\internal\\t1types.h	/^    FT_Byte**        subrs;$/;"	m	struct:T1_FontRec_	typeref:typename:FT_Byte **
subrs_block	.\\include\\freetype\\internal\\t1types.h	/^    FT_Byte*         subrs_block;$/;"	m	struct:T1_FontRec_	typeref:typename:FT_Byte *
subrs_hash	.\\include\\freetype\\internal\\psaux.h	/^    FT_Hash              subrs_hash;   \/* used if `num_subrs' was massaged *\/$/;"	m	struct:T1_DecoderRec_	typeref:typename:FT_Hash
subrs_hash	.\\include\\freetype\\internal\\t1types.h	/^    FT_Hash          subrs_hash;$/;"	m	struct:T1_FontRec_	typeref:typename:FT_Hash
subrs_len	.\\include\\freetype\\internal\\psaux.h	/^    FT_UInt*             subrs_len;    \/* array of subrs length (optional) *\/$/;"	m	struct:T1_DecoderRec_	typeref:typename:FT_UInt *
subrs_len	.\\include\\freetype\\internal\\t1types.h	/^    FT_UInt*         subrs_len;$/;"	m	struct:T1_FontRec_	typeref:typename:FT_UInt *
supplement	.\\include\\freetype\\t1tables.h	/^    FT_Int          supplement;$/;"	m	struct:CID_FaceInfoRec_	typeref:typename:FT_Int
sxHeight	.\\include\\freetype\\tttables.h	/^    FT_Short   sxHeight;$/;"	m	struct:TT_OS2_	typeref:typename:FT_Short
t1_blend_blue_scale	.\\include\\freetype\\t1tables.h	/^#define t1_blend_blue_scale /;"	d
t1_blend_blue_shift	.\\include\\freetype\\t1tables.h	/^#define t1_blend_blue_shift /;"	d
t1_blend_blue_values	.\\include\\freetype\\t1tables.h	/^#define t1_blend_blue_values /;"	d
t1_blend_family_blues	.\\include\\freetype\\t1tables.h	/^#define t1_blend_family_blues /;"	d
t1_blend_family_other_blues	.\\include\\freetype\\t1tables.h	/^#define t1_blend_family_other_blues /;"	d
t1_blend_force_bold	.\\include\\freetype\\t1tables.h	/^#define t1_blend_force_bold /;"	d
t1_blend_italic_angle	.\\include\\freetype\\t1tables.h	/^#define t1_blend_italic_angle /;"	d
t1_blend_max	.\\include\\freetype\\t1tables.h	/^#define t1_blend_max /;"	d
t1_blend_other_blues	.\\include\\freetype\\t1tables.h	/^#define t1_blend_other_blues /;"	d
t1_blend_standard_height	.\\include\\freetype\\t1tables.h	/^#define t1_blend_standard_height /;"	d
t1_blend_standard_widths	.\\include\\freetype\\t1tables.h	/^#define t1_blend_standard_widths /;"	d
t1_blend_stem_snap_heights	.\\include\\freetype\\t1tables.h	/^#define t1_blend_stem_snap_heights /;"	d
t1_blend_stem_snap_widths	.\\include\\freetype\\t1tables.h	/^#define t1_blend_stem_snap_widths /;"	d
t1_blend_underline_position	.\\include\\freetype\\t1tables.h	/^#define t1_blend_underline_position /;"	d
t1_blend_underline_thickness	.\\include\\freetype\\t1tables.h	/^#define t1_blend_underline_thickness /;"	d
t1_builder_funcs	.\\include\\freetype\\internal\\psaux.h	/^    const T1_Builder_FuncsRec*  t1_builder_funcs;$/;"	m	struct:PSAux_ServiceRec_	typeref:typename:const T1_Builder_FuncsRec *
t1_cmap_classes	.\\include\\freetype\\internal\\psaux.h	/^    T1_CMap_Classes  t1_cmap_classes;$/;"	m	struct:PSAux_ServiceRec_	typeref:typename:T1_CMap_Classes
t1_decoder_funcs	.\\include\\freetype\\internal\\psaux.h	/^    const T1_Decoder_FuncsRec*  t1_decoder_funcs;$/;"	m	struct:PSAux_ServiceRec_	typeref:typename:const T1_Decoder_FuncsRec *
t1_decrypt	.\\include\\freetype\\internal\\psaux.h	/^    (*t1_decrypt)( FT_Byte*   buffer,$/;"	m	struct:PSAux_ServiceRec_	typeref:typename:void (*)(FT_Byte * buffer,FT_Offset length,FT_UShort seed)
table	.\\include\\freetype\\internal\\fthash.h	/^    FT_Hashnode*  table;$/;"	m	struct:FT_HashRec_	typeref:typename:FT_Hashnode *
table	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Byte*   table;$/;"	m	struct:TT_BDFRec_	typeref:typename:FT_Byte *
table_end	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Byte*   table_end;$/;"	m	struct:TT_BDFRec_	typeref:typename:FT_Byte *
table_offset	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ULong            table_offset;$/;"	m	struct:TT_SBit_RangeRec_	typeref:typename:FT_ULong
tag	.\\include\\freetype\\freetype.h	/^    FT_ULong    tag;$/;"	m	struct:FT_Parameter_	typeref:typename:FT_ULong
tag	.\\include\\freetype\\ftmm.h	/^    FT_ULong    tag;$/;"	m	struct:FT_Var_Axis_	typeref:typename:FT_ULong
tag	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ULong   tag;$/;"	m	struct:TTC_HeaderRec_	typeref:typename:FT_ULong
tags	.\\include\\freetype\\ftimage.h	/^    char*       tags;            \/* the points flags                   *\/$/;"	m	struct:FT_Outline_	typeref:typename:char *
tags	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Byte*    tags;        \/* current touch flags         *\/$/;"	m	struct:TT_GlyphZoneRec_	typeref:typename:FT_Byte *
tail	.\\include\\freetype\\fttypes.h	/^    FT_ListNode  tail;$/;"	m	struct:FT_ListRec_	typeref:typename:FT_ListNode
target	.\\include\\curl\\curl.h	/^    char *target; \/* pointer to the target filename of a symlink *\/$/;"	m	struct:curl_fileinfo::__anon529bf04d0208	typeref:typename:char *
target	.\\include\\freetype\\ftimage.h	/^    const FT_Bitmap*        target;$/;"	m	struct:FT_Raster_Params_	typeref:typename:const FT_Bitmap *
texDump	.\\src\\Window.cpp	/^void texDump(GLuint* texID, int W, int H) {$/;"	f	typeref:typename:void
time	.\\include\\curl\\curl.h	/^    char *time;$/;"	m	struct:curl_fileinfo::__anon529bf04d0208	typeref:typename:char *
time	.\\include\\curl\\curl.h	/^  time_t time;$/;"	m	struct:curl_fileinfo	typeref:typename:time_t
to_bytes	.\\include\\freetype\\internal\\psaux.h	/^    (*to_bytes)( PS_Parser  parser,$/;"	m	struct:PS_Parser_FuncsRec_	typeref:typename:FT_Error (*)(PS_Parser parser,FT_Byte * bytes,FT_Offset max_bytes,FT_ULong * pnum_bytes,FT_Bool delimiters)
to_coord_array	.\\include\\freetype\\internal\\psaux.h	/^    (*to_coord_array)( PS_Parser  parser,$/;"	m	struct:PS_Parser_FuncsRec_	typeref:typename:FT_Int (*)(PS_Parser parser,FT_Int max_coords,FT_Short * coords)
to_fixed	.\\include\\freetype\\internal\\psaux.h	/^    (*to_fixed)( PS_Parser  parser,$/;"	m	struct:PS_Parser_FuncsRec_	typeref:typename:FT_Fixed (*)(PS_Parser parser,FT_Int power_ten)
to_fixed_array	.\\include\\freetype\\internal\\psaux.h	/^    (*to_fixed_array)( PS_Parser  parser,$/;"	m	struct:PS_Parser_FuncsRec_	typeref:typename:FT_Int (*)(PS_Parser parser,FT_Int max_values,FT_Fixed * values,FT_Int power_ten)
to_int	.\\include\\freetype\\internal\\psaux.h	/^    (*to_int)( PS_Parser  parser );$/;"	m	struct:PS_Parser_FuncsRec_	typeref:typename:FT_Long (*)(PS_Parser parser)
to_token	.\\include\\freetype\\internal\\psaux.h	/^    (*to_token)( PS_Parser  parser,$/;"	m	struct:PS_Parser_FuncsRec_	typeref:typename:void (*)(PS_Parser parser,T1_Token token)
to_token_array	.\\include\\freetype\\internal\\psaux.h	/^    (*to_token_array)( PS_Parser  parser,$/;"	m	struct:PS_Parser_FuncsRec_	typeref:typename:void (*)(PS_Parser parser,T1_Token tokens,FT_UInt max_tokens,FT_Int * pnum_tokens)
top	.\\include\\freetype\\ftcache.h	/^    FT_Char   top;$/;"	m	struct:FTC_SBitRec_	typeref:typename:FT_Char
top	.\\include\\freetype\\ftglyph.h	/^    FT_Int       top;$/;"	m	struct:FT_BitmapGlyphRec_	typeref:typename:FT_Int
top	.\\include\\freetype\\internal\\psaux.h	/^    FT_Long*             top;$/;"	m	struct:T1_DecoderRec_	typeref:typename:FT_Long *
top_bearing	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Int           top_bearing;$/;"	m	struct:TT_LoaderRec_	typeref:typename:FT_Int
totalSfntSize	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ULong   totalSfntSize;$/;"	m	struct:WOFF_HeaderRec_	typeref:typename:FT_ULong
trace_count	.\\include\\freetype\\internal\\ftdebug.h	/^    trace_count$/;"	e	enum:FT_Trace_
transform	.\\include\\freetype\\internal\\ftgloadr.h	/^    FT_Matrix  transform;$/;"	m	struct:FT_SubGlyphRec_	typeref:typename:FT_Matrix
transform_delta	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_Vector           transform_delta;$/;"	m	struct:FT_Face_InternalRec_	typeref:typename:FT_Vector
transform_flags	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_Int              transform_flags;$/;"	m	struct:FT_Face_InternalRec_	typeref:typename:FT_Int
transform_glyph	.\\include\\freetype\\ftrender.h	/^    FT_Renderer_TransformFunc  transform_glyph;$/;"	m	struct:FT_Renderer_Class_	typeref:typename:FT_Renderer_TransformFunc
transform_matrix	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_Matrix           transform_matrix;$/;"	m	struct:FT_Face_InternalRec_	typeref:typename:FT_Matrix
truetype	.\\include\\freetype\\internal\\ftpic.h	/^    void*  truetype;$/;"	m	struct:FT_PIC_Container_	typeref:typename:void *
ttc_header	.\\include\\freetype\\internal\\tttypes.h	/^    TTC_HeaderRec         ttc_header;$/;"	m	struct:TT_FaceRec_	typeref:typename:TTC_HeaderRec
ttwytter_request	.\\src\\Window.cpp	/^const char *ttwytter_request(const char *http_method, const char *url,$/;"	f	typeref:typename:const char *
twitConnectionInitialized	.\\src\\Window.cpp	/^volatile sig_atomic_t twitConnectionInitialized = 0;$/;"	v	typeref:typename:volatile sig_atomic_t
twitterNames	.\\include\\Window.h	/^const char* twitterNames[] = {$/;"	v	typeref:typename:const char * []
twitterNamesLength	.\\include\\Window.h	/^const int twitterNamesLength = raidNamesLength*2;$/;"	v	typeref:typename:const int
type	.\\include\\freetype\\freetype.h	/^    FT_Size_Request_Type  type;$/;"	m	struct:FT_Size_RequestRec_	typeref:typename:FT_Size_Request_Type
type	.\\include\\freetype\\ftbdf.h	/^    BDF_PropertyType  type;$/;"	m	struct:BDF_PropertyRec_	typeref:typename:BDF_PropertyType
type	.\\include\\freetype\\internal\\ftrfork.h	/^    FT_RFork_Rule          type;$/;"	m	struct:ft_raccess_guess_rec_	typeref:typename:FT_RFork_Rule
type	.\\include\\freetype\\internal\\psaux.h	/^    T1_FieldType        type;         \/* type of field                  *\/$/;"	m	struct:T1_FieldRec_	typeref:typename:T1_FieldType
type	.\\include\\freetype\\internal\\psaux.h	/^    T1_TokenType  type;    \/* type of token                            *\/$/;"	m	struct:T1_TokenRec_	typeref:typename:T1_TokenType
type1	.\\include\\freetype\\internal\\t1types.h	/^    T1_FontRec      type1;$/;"	m	struct:T1_FaceRec_	typeref:typename:T1_FontRec
u	.\\include\\freetype\\ftbdf.h	/^    } u;$/;"	m	struct:BDF_PropertyRec_	typeref:union:BDF_PropertyRec_::__anon0621b64b010a
uid	.\\include\\curl\\curl.h	/^  int uid;$/;"	m	struct:curl_fileinfo	typeref:typename:int
uid_base	.\\include\\freetype\\t1tables.h	/^    FT_ULong        uid_base;$/;"	m	struct:CID_FaceInfoRec_	typeref:typename:FT_ULong
uint64_t	.\\include\\gl_core_3_3.h	/^typedef unsigned __int64 uint64_t;$/;"	t	typeref:typename:unsigned __int64
uint64_t	.\\include\\gl_core_3_3.h	/^typedef unsigned long int uint64_t;$/;"	t	typeref:typename:unsigned long int
uint64_t	.\\include\\gl_core_3_3.h	/^typedef unsigned long long int uint64_t;$/;"	t	typeref:typename:unsigned long long int
ulCodePageRange1	.\\include\\freetype\\tttables.h	/^    FT_ULong   ulCodePageRange1;       \/* Bits 0-31   *\/$/;"	m	struct:TT_OS2_	typeref:typename:FT_ULong
ulCodePageRange2	.\\include\\freetype\\tttables.h	/^    FT_ULong   ulCodePageRange2;       \/* Bits 32-63  *\/$/;"	m	struct:TT_OS2_	typeref:typename:FT_ULong
ulUnicodeRange1	.\\include\\freetype\\tttables.h	/^    FT_ULong   ulUnicodeRange1;        \/* Bits 0-31   *\/$/;"	m	struct:TT_OS2_	typeref:typename:FT_ULong
ulUnicodeRange2	.\\include\\freetype\\tttables.h	/^    FT_ULong   ulUnicodeRange2;        \/* Bits 32-63  *\/$/;"	m	struct:TT_OS2_	typeref:typename:FT_ULong
ulUnicodeRange3	.\\include\\freetype\\tttables.h	/^    FT_ULong   ulUnicodeRange3;        \/* Bits 64-95  *\/$/;"	m	struct:TT_OS2_	typeref:typename:FT_ULong
ulUnicodeRange4	.\\include\\freetype\\tttables.h	/^    FT_ULong   ulUnicodeRange4;        \/* Bits 96-127 *\/$/;"	m	struct:TT_OS2_	typeref:typename:FT_ULong
underline	.\\include\\freetype\\ftwinfnt.h	/^    FT_Byte    underline;$/;"	m	struct:FT_WinFNT_HeaderRec_	typeref:typename:FT_Byte
underlinePosition	.\\include\\freetype\\tttables.h	/^    FT_Short  underlinePosition;$/;"	m	struct:TT_Postscript_	typeref:typename:FT_Short
underlineThickness	.\\include\\freetype\\tttables.h	/^    FT_Short  underlineThickness;$/;"	m	struct:TT_Postscript_	typeref:typename:FT_Short
underline_position	.\\include\\freetype\\freetype.h	/^    FT_Short          underline_position;$/;"	m	struct:FT_FaceRec_	typeref:typename:FT_Short
underline_position	.\\include\\freetype\\t1tables.h	/^    FT_Short    underline_position;$/;"	m	struct:PS_FontInfoRec_	typeref:typename:FT_Short
underline_thickness	.\\include\\freetype\\freetype.h	/^    FT_Short          underline_thickness;$/;"	m	struct:FT_FaceRec_	typeref:typename:FT_Short
underline_thickness	.\\include\\freetype\\t1tables.h	/^    FT_UShort   underline_thickness;$/;"	m	struct:PS_FontInfoRec_	typeref:typename:FT_UShort
unicode	.\\include\\freetype\\internal\\psaux.h	/^    FT_CMap_Class  unicode;$/;"	m	struct:T1_CMap_ClassesRec_	typeref:typename:FT_CMap_Class
unicode	.\\include\\freetype\\internal\\services\\svpscmap.h	/^    FT_UInt32  unicode;      \/* bit 31 set: is glyph variant *\/$/;"	m	struct:PS_UniMap_	typeref:typename:FT_UInt32
unique_id	.\\include\\freetype\\t1tables.h	/^    FT_Int     unique_id;$/;"	m	struct:PS_PrivateRec_	typeref:typename:FT_Int
units_per_EM	.\\include\\freetype\\freetype.h	/^    FT_UShort         units_per_EM;$/;"	m	struct:FT_FaceRec_	typeref:typename:FT_UShort
usBreakChar	.\\include\\freetype\\tttables.h	/^    FT_UShort  usBreakChar;$/;"	m	struct:TT_OS2_	typeref:typename:FT_UShort
usDefaultChar	.\\include\\freetype\\tttables.h	/^    FT_UShort  usDefaultChar;$/;"	m	struct:TT_OS2_	typeref:typename:FT_UShort
usFirstCharIndex	.\\include\\freetype\\tttables.h	/^    FT_UShort  usFirstCharIndex;$/;"	m	struct:TT_OS2_	typeref:typename:FT_UShort
usLastCharIndex	.\\include\\freetype\\tttables.h	/^    FT_UShort  usLastCharIndex;$/;"	m	struct:TT_OS2_	typeref:typename:FT_UShort
usLowerOpticalPointSize	.\\include\\freetype\\tttables.h	/^    FT_UShort  usLowerOpticalPointSize;       \/* in twips (1\/20th points) *\/$/;"	m	struct:TT_OS2_	typeref:typename:FT_UShort
usMaxContext	.\\include\\freetype\\tttables.h	/^    FT_UShort  usMaxContext;$/;"	m	struct:TT_OS2_	typeref:typename:FT_UShort
usUpperOpticalPointSize	.\\include\\freetype\\tttables.h	/^    FT_UShort  usUpperOpticalPointSize;       \/* in twips (1\/20th points) *\/$/;"	m	struct:TT_OS2_	typeref:typename:FT_UShort
usWeightClass	.\\include\\freetype\\tttables.h	/^    FT_UShort  usWeightClass;$/;"	m	struct:TT_OS2_	typeref:typename:FT_UShort
usWidthClass	.\\include\\freetype\\tttables.h	/^    FT_UShort  usWidthClass;$/;"	m	struct:TT_OS2_	typeref:typename:FT_UShort
usWinAscent	.\\include\\freetype\\tttables.h	/^    FT_UShort  usWinAscent;$/;"	m	struct:TT_OS2_	typeref:typename:FT_UShort
usWinDescent	.\\include\\freetype\\tttables.h	/^    FT_UShort  usWinDescent;$/;"	m	struct:TT_OS2_	typeref:typename:FT_UShort
use_extra	.\\include\\freetype\\internal\\ftgloadr.h	/^    FT_Bool          use_extra;$/;"	m	struct:FT_GlyphLoaderRec_	typeref:typename:FT_Bool
used	.\\include\\freetype\\internal\\fthash.h	/^    FT_UInt  used;$/;"	m	struct:FT_HashRec_	typeref:typename:FT_UInt
user	.\\include\\curl\\curl.h	/^    char *user;$/;"	m	struct:curl_fileinfo::__anon529bf04d0208	typeref:typename:char *
user	.\\include\\freetype\\ftimage.h	/^    void*                   user;$/;"	m	struct:FT_Raster_Params_	typeref:typename:void *
user	.\\include\\freetype\\ftsystem.h	/^    void*            user;$/;"	m	struct:FT_MemoryRec_	typeref:typename:void *
user_data	.\\include\\freetype\\internal\\psaux.h	/^    void*         user_data;$/;"	m	struct:AFM_ParserRec_	typeref:typename:void *
userp	.\\include\\curl\\curl.h	/^  void *userp;                      \/* custom pointer used for$/;"	m	struct:curl_httppost	typeref:typename:void *
vadvance	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Int           vadvance;$/;"	m	struct:TT_LoaderRec_	typeref:typename:FT_Int
value	.\\include\\curl\\curl.h	/^  const char     *value;$/;"	m	struct:curl_forms	typeref:typename:const char *
value	.\\include\\freetype\\ftsystem.h	/^    long   value;$/;"	m	union:FT_StreamDesc_	typeref:typename:long
value	.\\include\\freetype\\internal\\ftstream.h	/^    FT_Byte    value;$/;"	m	struct:FT_Frame_Field_	typeref:typename:FT_Byte
variant_list	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_CMap_VariantListFunc       variant_list;$/;"	m	struct:FT_CMap_ClassRec_	typeref:typename:FT_CMap_VariantListFunc
variantchar_list	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_CMap_VariantCharListFunc   variantchar_list;$/;"	m	struct:FT_CMap_ClassRec_	typeref:typename:FT_CMap_VariantCharListFunc
version	.\\include\\curl\\curl.h	/^  const char *version;      \/* LIBCURL_VERSION *\/$/;"	m	struct:__anon529bf04d1d08	typeref:typename:const char *
version	.\\include\\freetype\\ftwinfnt.h	/^    FT_UShort  version;$/;"	m	struct:FT_WinFNT_HeaderRec_	typeref:typename:FT_UShort
version	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Fixed   version;$/;"	m	struct:TTC_HeaderRec_	typeref:typename:FT_Fixed
version	.\\include\\freetype\\internal\\tttypes.h	/^    FT_UShort     version;$/;"	m	struct:TT_Gasp_	typeref:typename:FT_UShort
version	.\\include\\freetype\\t1tables.h	/^    FT_String*  version;$/;"	m	struct:PS_FontInfoRec_	typeref:typename:FT_String *
version	.\\include\\freetype\\tttables.h	/^    FT_Fixed   version;$/;"	m	struct:TT_MaxProfile_	typeref:typename:FT_Fixed
version	.\\include\\freetype\\tttables.h	/^    FT_UShort  version;                \/* 0x0001 - more or 0xFFFF *\/$/;"	m	struct:TT_OS2_	typeref:typename:FT_UShort
version_major	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_Int             version_major;$/;"	m	struct:FT_LibraryRec_	typeref:typename:FT_Int
version_minor	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_Int             version_minor;$/;"	m	struct:FT_LibraryRec_	typeref:typename:FT_Int
version_num	.\\include\\curl\\curl.h	/^  unsigned int version_num; \/* LIBCURL_VERSION_NUM *\/$/;"	m	struct:__anon529bf04d1d08	typeref:typename:unsigned int
version_patch	.\\include\\freetype\\internal\\ftobjs.h	/^    FT_Int             version_patch;$/;"	m	struct:FT_LibraryRec_	typeref:typename:FT_Int
vert	.\\include\\freetype\\internal\\tttypes.h	/^    TT_SBit_LineMetricsRec  vert;$/;"	m	struct:TT_SBit_ScaleRec_	typeref:typename:TT_SBit_LineMetricsRec
vert	.\\include\\freetype\\internal\\tttypes.h	/^    TT_SBit_LineMetricsRec  vert;$/;"	m	struct:TT_SBit_StrikeRec_	typeref:typename:TT_SBit_LineMetricsRec
vertAdvance	.\\include\\freetype\\freetype.h	/^    FT_Pos  vertAdvance;$/;"	m	struct:FT_Glyph_Metrics_	typeref:typename:FT_Pos
vertAdvance	.\\include\\freetype\\internal\\tttypes.h	/^    FT_UShort  vertAdvance;$/;"	m	struct:TT_SBit_MetricsRec_	typeref:typename:FT_UShort
vertBearingX	.\\include\\freetype\\freetype.h	/^    FT_Pos  vertBearingX;$/;"	m	struct:FT_Glyph_Metrics_	typeref:typename:FT_Pos
vertBearingX	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Short   vertBearingX;$/;"	m	struct:TT_SBit_MetricsRec_	typeref:typename:FT_Short
vertBearingY	.\\include\\freetype\\freetype.h	/^    FT_Pos  vertBearingY;$/;"	m	struct:FT_Glyph_Metrics_	typeref:typename:FT_Pos
vertBearingY	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Short   vertBearingY;$/;"	m	struct:TT_SBit_MetricsRec_	typeref:typename:FT_Short
vertResolution	.\\include\\freetype\\freetype.h	/^    FT_UInt               vertResolution;$/;"	m	struct:FT_Size_RequestRec_	typeref:typename:FT_UInt
vertShdr	.\\src\\Window.cpp	/^const GLchar* vertShdr =$/;"	v	typeref:typename:const GLchar *
vert_metrics	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Byte*              vert_metrics;$/;"	m	struct:TT_FaceRec_	typeref:typename:FT_Byte *
vert_metrics_offset	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ULong              vert_metrics_offset;$/;"	m	struct:TT_FaceRec_	typeref:typename:FT_ULong
vert_metrics_size	.\\include\\freetype\\internal\\tttypes.h	/^    FT_ULong              vert_metrics_size;$/;"	m	struct:TT_FaceRec_	typeref:typename:FT_ULong
vertical	.\\include\\freetype\\internal\\tttypes.h	/^    TT_VertHeader         vertical;     \/* TT Vertical header, if present *\/$/;"	m	struct:TT_FaceRec_	typeref:typename:TT_VertHeader
vertical_info	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Bool               vertical_info;$/;"	m	struct:TT_FaceRec_	typeref:typename:FT_Bool
vertical_resolution	.\\include\\freetype\\ftwinfnt.h	/^    FT_UShort  vertical_resolution;$/;"	m	struct:FT_WinFNT_HeaderRec_	typeref:typename:FT_UShort
weight	.\\include\\freetype\\ftwinfnt.h	/^    FT_UShort  weight;$/;"	m	struct:FT_WinFNT_HeaderRec_	typeref:typename:FT_UShort
weight	.\\include\\freetype\\t1tables.h	/^    FT_String*  weight;$/;"	m	struct:PS_FontInfoRec_	typeref:typename:FT_String *
weight_vector	.\\include\\freetype\\t1tables.h	/^    FT_Fixed*        weight_vector;$/;"	m	struct:PS_BlendRec_	typeref:typename:FT_Fixed *
whatever	.\\include\\curl\\multi.h	/^    void *whatever;    \/* message-specific data *\/$/;"	m	union:CURLMsg::__anona7791d62030a	typeref:typename:void *
width	.\\include\\GLFW\\glfw3.h	/^    int width;$/;"	m	struct:GLFWimage	typeref:typename:int
width	.\\include\\GLFW\\glfw3.h	/^    int width;$/;"	m	struct:GLFWvidmode	typeref:typename:int
width	.\\include\\freetype\\freetype.h	/^    FT_Long               width;$/;"	m	struct:FT_Size_RequestRec_	typeref:typename:FT_Long
width	.\\include\\freetype\\freetype.h	/^    FT_Pos  width;$/;"	m	struct:FT_Glyph_Metrics_	typeref:typename:FT_Pos
width	.\\include\\freetype\\freetype.h	/^    FT_Short  width;$/;"	m	struct:FT_Bitmap_Size_	typeref:typename:FT_Short
width	.\\include\\freetype\\ftcache.h	/^    FT_Byte   width;$/;"	m	struct:FTC_SBitRec_	typeref:typename:FT_Byte
width	.\\include\\freetype\\ftcache.h	/^    FT_UInt     width;$/;"	m	struct:FTC_ImageTypeRec_	typeref:typename:FT_UInt
width	.\\include\\freetype\\ftcache.h	/^    FT_UInt     width;$/;"	m	struct:FTC_ScalerRec_	typeref:typename:FT_UInt
width	.\\include\\freetype\\ftimage.h	/^    unsigned int    width;$/;"	m	struct:FT_Bitmap_	typeref:typename:unsigned int
width	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Byte  width;$/;"	m	struct:TT_SBit_Small_Metrics_	typeref:typename:FT_Byte
width	.\\include\\freetype\\internal\\tttypes.h	/^    FT_UShort  width;$/;"	m	struct:TT_SBit_MetricsRec_	typeref:typename:FT_UShort
window_resized	.\\src\\Window.cpp	/^static void window_resized(GLFWwindow* window, int width, int height){$/;"	f	typeref:typename:void	file:
write_callback	.\\src\\Window.cpp	/^static size_t write_callback(void *ptr, size_t size,$/;"	f	typeref:typename:size_t	file:
x	.\\include\\freetype\\ftimage.h	/^    FT_Pos  x;$/;"	m	struct:FT_Vector_	typeref:typename:FT_Pos
x	.\\include\\freetype\\ftimage.h	/^    short           x;$/;"	m	struct:FT_Span_	typeref:typename:short
x	.\\include\\freetype\\fttypes.h	/^    FT_F2Dot14  x;$/;"	m	struct:FT_UnitVector_	typeref:typename:FT_F2Dot14
x	.\\include\\freetype\\internal\\t1types.h	/^    FT_Int   x;$/;"	m	struct:AFM_KernPairRec_	typeref:typename:FT_Int
xAvgCharWidth	.\\include\\freetype\\tttables.h	/^    FT_Short   xAvgCharWidth;$/;"	m	struct:TT_OS2_	typeref:typename:FT_Short
xHeight	.\\include\\freetype\\tttables.h	/^    FT_UShort  xHeight;$/;"	m	struct:TT_PCLT_	typeref:typename:FT_UShort
xMax	.\\include\\freetype\\ftimage.h	/^    FT_Pos  xMax, yMax;$/;"	m	struct:FT_BBox_	typeref:typename:FT_Pos
xMax	.\\include\\freetype\\tttables.h	/^    FT_Short   xMax;$/;"	m	struct:TT_Header_	typeref:typename:FT_Short
xMax_Extent	.\\include\\freetype\\tttables.h	/^    FT_Short   xMax_Extent;            \/* xmax extents          *\/$/;"	m	struct:TT_HoriHeader_	typeref:typename:FT_Short
xMin	.\\include\\freetype\\ftimage.h	/^    FT_Pos  xMin, yMin;$/;"	m	struct:FT_BBox_	typeref:typename:FT_Pos
xMin	.\\include\\freetype\\tttables.h	/^    FT_Short   xMin;$/;"	m	struct:TT_Header_	typeref:typename:FT_Short
x_offset	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Char    x_offset;$/;"	m	struct:TT_SBit_ComponentRec_	typeref:typename:FT_Char
x_ppem	.\\include\\freetype\\freetype.h	/^    FT_Pos    x_ppem;$/;"	m	struct:FT_Bitmap_Size_	typeref:typename:FT_Pos
x_ppem	.\\include\\freetype\\freetype.h	/^    FT_UShort  x_ppem;      \/* horizontal pixels per EM               *\/$/;"	m	struct:FT_Size_Metrics_	typeref:typename:FT_UShort
x_ppem	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Byte                 x_ppem;$/;"	m	struct:TT_SBit_ScaleRec_	typeref:typename:FT_Byte
x_ppem	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Byte                 x_ppem;$/;"	m	struct:TT_SBit_StrikeRec_	typeref:typename:FT_Byte
x_ppem_substitute	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Byte                 x_ppem_substitute;$/;"	m	struct:TT_SBit_ScaleRec_	typeref:typename:FT_Byte
x_res	.\\include\\freetype\\ftcache.h	/^    FT_UInt     x_res;$/;"	m	struct:FTC_ScalerRec_	typeref:typename:FT_UInt
x_scale	.\\include\\freetype\\freetype.h	/^    FT_Fixed   x_scale;     \/* scaling values used to convert font    *\/$/;"	m	struct:FT_Size_Metrics_	typeref:typename:FT_Fixed
xadvance	.\\include\\freetype\\ftcache.h	/^    FT_Char   xadvance;$/;"	m	struct:FTC_SBitRec_	typeref:typename:FT_Char
xcalloc	.\\src\\xmalloc.cpp	/^void *xcalloc (size_t nmemb, size_t size) {$/;"	f	typeref:typename:void *
xfree	.\\src\\xmalloc.cpp	/^void xfree(void *ptr) {$/;"	f	typeref:typename:void
xmalloc	.\\src\\xmalloc.cpp	/^void *xmalloc (size_t size) {$/;"	f	typeref:typename:void *
xmalloc_fatal	.\\src\\xmalloc.cpp	/^static void *xmalloc_fatal(size_t size) {$/;"	f	typeref:typename:void *	file:
xrealloc	.\\src\\xmalloc.cpp	/^void *xrealloc (void *ptr, size_t size) {$/;"	f	typeref:typename:void *
xstrdup	.\\src\\xmalloc.cpp	/^char *xstrdup (const char *s) {$/;"	f	typeref:typename:char *
xuid	.\\include\\freetype\\t1tables.h	/^    FT_ULong        xuid[16];$/;"	m	struct:CID_FaceInfoRec_	typeref:typename:FT_ULong[16]
xx	.\\include\\freetype\\fttypes.h	/^    FT_Fixed  xx, xy;$/;"	m	struct:FT_Matrix_	typeref:typename:FT_Fixed
xy	.\\include\\freetype\\fttypes.h	/^    FT_Fixed  xx, xy;$/;"	m	struct:FT_Matrix_	typeref:typename:FT_Fixed
y	.\\include\\freetype\\ftimage.h	/^    FT_Pos  y;$/;"	m	struct:FT_Vector_	typeref:typename:FT_Pos
y	.\\include\\freetype\\fttypes.h	/^    FT_F2Dot14  y;$/;"	m	struct:FT_UnitVector_	typeref:typename:FT_F2Dot14
y	.\\include\\freetype\\internal\\t1types.h	/^    FT_Int   y;$/;"	m	struct:AFM_KernPairRec_	typeref:typename:FT_Int
yMax	.\\include\\freetype\\ftimage.h	/^    FT_Pos  xMax, yMax;$/;"	m	struct:FT_BBox_	typeref:typename:FT_Pos
yMax	.\\include\\freetype\\tttables.h	/^    FT_Short   yMax;$/;"	m	struct:TT_Header_	typeref:typename:FT_Short
yMax_Extent	.\\include\\freetype\\tttables.h	/^    FT_Short   yMax_Extent;             \/* xmax or ymax extents            *\/$/;"	m	struct:TT_VertHeader_	typeref:typename:FT_Short
yMin	.\\include\\freetype\\ftimage.h	/^    FT_Pos  xMin, yMin;$/;"	m	struct:FT_BBox_	typeref:typename:FT_Pos
yMin	.\\include\\freetype\\tttables.h	/^    FT_Short   yMin;$/;"	m	struct:TT_Header_	typeref:typename:FT_Short
yStrikeoutPosition	.\\include\\freetype\\tttables.h	/^    FT_Short   yStrikeoutPosition;$/;"	m	struct:TT_OS2_	typeref:typename:FT_Short
yStrikeoutSize	.\\include\\freetype\\tttables.h	/^    FT_Short   yStrikeoutSize;$/;"	m	struct:TT_OS2_	typeref:typename:FT_Short
ySubscriptXOffset	.\\include\\freetype\\tttables.h	/^    FT_Short   ySubscriptXOffset;$/;"	m	struct:TT_OS2_	typeref:typename:FT_Short
ySubscriptXSize	.\\include\\freetype\\tttables.h	/^    FT_Short   ySubscriptXSize;$/;"	m	struct:TT_OS2_	typeref:typename:FT_Short
ySubscriptYOffset	.\\include\\freetype\\tttables.h	/^    FT_Short   ySubscriptYOffset;$/;"	m	struct:TT_OS2_	typeref:typename:FT_Short
ySubscriptYSize	.\\include\\freetype\\tttables.h	/^    FT_Short   ySubscriptYSize;$/;"	m	struct:TT_OS2_	typeref:typename:FT_Short
ySuperscriptXOffset	.\\include\\freetype\\tttables.h	/^    FT_Short   ySuperscriptXOffset;$/;"	m	struct:TT_OS2_	typeref:typename:FT_Short
ySuperscriptXSize	.\\include\\freetype\\tttables.h	/^    FT_Short   ySuperscriptXSize;$/;"	m	struct:TT_OS2_	typeref:typename:FT_Short
ySuperscriptYOffset	.\\include\\freetype\\tttables.h	/^    FT_Short   ySuperscriptYOffset;$/;"	m	struct:TT_OS2_	typeref:typename:FT_Short
ySuperscriptYSize	.\\include\\freetype\\tttables.h	/^    FT_Short   ySuperscriptYSize;$/;"	m	struct:TT_OS2_	typeref:typename:FT_Short
y_offset	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Char    y_offset;$/;"	m	struct:TT_SBit_ComponentRec_	typeref:typename:FT_Char
y_ppem	.\\include\\freetype\\freetype.h	/^    FT_Pos    y_ppem;$/;"	m	struct:FT_Bitmap_Size_	typeref:typename:FT_Pos
y_ppem	.\\include\\freetype\\freetype.h	/^    FT_UShort  y_ppem;      \/* vertical pixels per EM                 *\/$/;"	m	struct:FT_Size_Metrics_	typeref:typename:FT_UShort
y_ppem	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Byte                 y_ppem;$/;"	m	struct:TT_SBit_ScaleRec_	typeref:typename:FT_Byte
y_ppem	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Byte                 y_ppem;$/;"	m	struct:TT_SBit_StrikeRec_	typeref:typename:FT_Byte
y_ppem_substitute	.\\include\\freetype\\internal\\tttypes.h	/^    FT_Byte                 y_ppem_substitute;$/;"	m	struct:TT_SBit_ScaleRec_	typeref:typename:FT_Byte
y_res	.\\include\\freetype\\ftcache.h	/^    FT_UInt     y_res;$/;"	m	struct:FTC_ScalerRec_	typeref:typename:FT_UInt
y_scale	.\\include\\freetype\\freetype.h	/^    FT_Fixed   y_scale;     \/* units to 26.6 fractional pixels        *\/$/;"	m	struct:FT_Size_Metrics_	typeref:typename:FT_Fixed
yadvance	.\\include\\freetype\\ftcache.h	/^    FT_Char   yadvance;$/;"	m	struct:FTC_SBitRec_	typeref:typename:FT_Char
yx	.\\include\\freetype\\fttypes.h	/^    FT_Fixed  yx, yy;$/;"	m	struct:FT_Matrix_	typeref:typename:FT_Fixed
yy	.\\include\\freetype\\fttypes.h	/^    FT_Fixed  yx, yy;$/;"	m	struct:FT_Matrix_	typeref:typename:FT_Fixed
zone	.\\include\\freetype\\internal\\psaux.h	/^    T1_Decoder_Zone      zone;$/;"	m	struct:T1_DecoderRec_	typeref:typename:T1_Decoder_Zone
zone	.\\include\\freetype\\internal\\tttypes.h	/^    TT_GlyphZoneRec  zone;$/;"	m	struct:TT_LoaderRec_	typeref:typename:TT_GlyphZoneRec
zones	.\\include\\freetype\\internal\\psaux.h	/^    T1_Decoder_ZoneRec   zones[T1_MAX_SUBRS_CALLS + 1];$/;"	m	struct:T1_DecoderRec_	typeref:typename:T1_Decoder_ZoneRec[]
